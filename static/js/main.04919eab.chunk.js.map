{"version":3,"sources":["helpers/misc.js","contexts.js","../ /^/.//.*$/ groupOptions: {} namespace object","components/DataLoader/DataLoader.js","components/DataLoader/index.js","helpers/palettes.js","components/GraphAnnotation/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/ColorLegend.js","components/ColorLegend/index.js","components/GraphAnnotation/GraphControls.js","components/GraphAnnotation/reducers.js","components/DebouncedInput/index.js","components/DebouncedInput/DebouncedInput.js","components/GraphAnnotation/GraphContainer.js","components/FooterNav/FooterNav.js","components/FooterNav/index.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/IceCreamAnnotation/IceCreamControls.js","components/IceCreamAnnotation/IceCreamContainer.js","components/IceCreamAnnotation/IceCreamAnnotation.js","components/IceCreamAnnotation/index.js","components/LinearGraphAnnotation/LinearGraphControls.js","components/LinearGraphAnnotation/LinearGraphContainer.js","components/LinearGraphAnnotation/LinearGraphAnnotation.js","summary.js","components/PlainPage/PlainPage.js","components/LinearGraphAnnotation/index.js","App.js","reportWebVitals.js","index.js"],"names":["buildComponentCode","componentName","props","Object","entries","filter","val","undefined","Array","isArray","length","map","key","JSON","stringify","serializeValue","join","trim","buildGraphCode","buildIceCreamScatterPlotCode","buildLinearGraphCode","computeFiltersOptions","type","args","computeTableOptions","computeGraphFiltersOptions","data","columns","reduce","res","options","uniq","d","find","o","isNaN","Number","isInteger","id","title","includes","min","max","graph","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","forEach","attr","getAttribute","push","Set","forEachNode","_node","cat","has","add","evalIfNodeMatches","attributes","filters","filtersModeAnd","attribute","value","cartesianToPolar","x","y","distance","Math","sqrt","radians","atan2","degrees","PI","radiansToDegrees","polarToCartesian","degreesToRadians","cos","sin","transformGeometry","rotate","translate","finalDegrees","newX","newY","VisualizationControlContext","React","createContext","LanguageContext","webpackAsyncContext","req","__webpack_require__","Promise","resolve","then","e","Error","code","ids","keys","module","exports","Loader","percentsLoaded","className","style","width","DataLoader","url","children","useState","setData","loadingFraction","setLoadingFraction","useEffect","axios","get","onDownloadProgress","progressEvent","status","loaded","total","inputData","setTimeout","split","pop","csvParse","tsvParse","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","usePrevious","ref","useRef","current","ControlButton","onClick","FiltersEditor","onToggleFiltersModeAnd","filtersOptions","onFiltersChange","isOpen","setIsOpen","newFilterAttribute","setNewFilterAttribute","newFilterOptions","option","index","newFilters","f","i","onChange","target","sort","a","b","VariablesEditor","variables","isNotAllDefault","v","localOptions","activeOptions","getOptions","label","newVal","ColorItemHandler","modality","color","isEdited","setEdited","editedColor","setEditedColor","debouncedOnChange","debounce","background","stopPropagation","newColor","hex","ColorLegend","colorPalette","SLIDER_MARKS","DebouncedSlider","defaultValue","setValue","step","newValue","marks","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","labelDensity","nodeSizeVariable","nodeColorVariable","nodeLabelVariable","onNodeSizeVariableChange","onNodeColorVariableChange","onNodeLabelVariableChange","onLabelDensityChange","onColorPaletteChange","isMinified","setIsMinified","cx","onSubmit","preventDefault","placeholder","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","DebouncedInput","propsValue","propsOnChange","rest","propagateChange","useMemo","handleChange","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","height","extents","onCameraUpdate","cameraPosition","updateTimestamp","legend","onTitleChange","onLegendChange","CELL_HEIGHT_RANGE","CELL_WIDTH_RANGE","cellHeightScale","scaleLinear","domain","range","cellWidthScale","nodeSize","values","from","nodeColor","colors","size","palette","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","previousNodeSize","previousNodeLabelVariable","previousLabelDensity","previousSearchString","previousFilters","previousColorPalette","previousFiltersModeAnd","nodeReducer","nodeLabel","nodeSizeFactor","nodeSizeScale","renderedNode","hidden","createNodeReducer","edgeReducer","el1","el2","renderedEdge","biggerNode","Color","lighten","rgb","string","createEdgeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","displayedLabels","toLowerCase","highlightNode","unhighlightNode","highlightedNodes","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","GraphContainerWithDimensions","dimensions","FooterNav","prevPage","nextPage","lang","useContext","messages","next","fr","en","prev","to","route","GraphAnnotation","Content","contentsURL","gexf","parse","Graph","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setColorPalette","setNodeSizeVariable","setNodeLabelVariable","setLabelDensity","setTitle","setLegend","focusedVisualizationId","setFocusedVisualizationId","registeredVisualizations","setRegisteredVisualizations","onVisualizationUpdate","ratio","newNodeColorVariable","newTitle","newLegend","thatId","sizes","sizeExtent","extent","Provider","onRegisterVisualization","onUnregisterVisualization","copyOfRegistered","visualizationParams","href","fallback","str","IceCreamControls","xVariable","reverseX","yVariable","reverseY","sizeVariable","colorVariable","labelVariable","labelsOnTheSide","colorScaleType","rotateMode","onToggleRotateMode","onXVariableChange","onYVariableChange","onColorVariableChange","onSizeVariableChange","onLabelVariableChange","onToggleLabelsOnTheSide","onToggleReverseX","onToggleReverseY","onColorScaleTypeChange","IceCreamContainer","inputColorPalette","zoomedIndex","setZoomedIndex","enableZoom","setEnableZoom","updateActive","found","smallestDimension","WIDTH","parseInt","HEIGHT","MIN_AREA","MAX_AREA","MARGIN","xRange","yRange","reverse","continuousColorScale","getX","getY","getSize","colorRange","highlightedIndex","datum","rotateTransform","transf","point1X","point1Y","point2X","point2Y","point3X","point3Y","point4X","point4Y","transform","points","fill","x1","y1","x2","y2","stroke","ticks","tick","textAnchor","onMouseEnter","onMouseLeave","radius","xForXAxis","yForXAxis","xForYAxis","yForYAxis","labelX","labelY","pointerStartCoords","opacity","isMatching","isZoomed","strokeDasharray","cy","r","fontSize","IceCreamContainerWithDimensions","IceCreamAnnotation","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setLabelsOnTheSide","setColorScaleType","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatLabelsOnTheSide","thatColorScaleType","thatRotateMode","thatSearchString","thatColorPalette","theseFilters","theseFiltersModeAnd","thisTitle","thisLegend","LinearGraphControls","xLabelVariable","graphType","useRelativeScale","onToggleUseRelativeScale","onGraphTypeChange","onXLabelVariableChange","LinearGraphContainer","xLabelMap","dict","dataGroups","group","_id","ys","sum","filteredY","xValue","xMap","res2","transformedValue","xValues","yPropToFilter","xExtent","nice","uniqBy","item","filtersAffectingColor","colorValue","newValues","getYHisto","getColor","yDisplace","firstX","firstY","path","index2","LinearGraphContainerWithDimensions","LinearGraphAnnotation","setXLabelVariable","setGraphType","setUseRelativeScale","thatXLabelVariable","thatGraphType","thatUseRelativeScale","finalPalette","routes","contents","Component","LANGUAGES","App","history","useHistory","setLang","renderRoute","ThatComponent","process","onLangChange","ln","otherLang","pathOtherLang","location","pathname","routeItem","inputRoute","lazy","repository","Wrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04919eab.chunk.js","sourcesContent":["import { uniq } from \"lodash\";\nimport { min, max } from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${Object.entries(props)\n    .filter(([_key, val]) => {\n      return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n    })\n    .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n    .join(' \\n  ')\n    .trim()\n  }\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\nexport const buildLinearGraphCode = props => buildComponentCode('LinearGraphBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch (type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n\n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props = {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n        cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({ ...res, [cat.id]: cat }), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatch = filters.find(({ attribute, value }) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatch;\n  } else {\n    const oneFilterMatches = filters.find(({ attribute, value }) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}\n\nconst radiansToDegrees = radians => radians * (180 / Math.PI);\nexport const degreesToRadians = degrees => degrees * (Math.PI / 180);\n\nexport const cartesianToPolar = (x, y) => {\n  const distance = Math.sqrt(x * x + y * y);\n  const radians = Math.atan2(y, x);\n  const degrees = radiansToDegrees(radians);\n  return { distance, radians, degrees }\n}\n\nexport const polarToCartesian = (distance, degrees) => {\n  const radians = degreesToRadians(degrees);\n  return {\n    x: distance * Math.cos(radians),\n    y: distance * Math.sin(radians)\n  }\n}\n\nexport const transformGeometry = ({ x, y }, { rotate, translate }) => {\n  const { degrees, distance } = cartesianToPolar(x, y);\n  let finalDegrees = degrees;\n  if (rotate) {\n    finalDegrees += rotate;\n  }\n  let { x: newX, y: newY } = polarToCartesian(distance, finalDegrees);\n  if (translate) {\n    if (translate.x) {\n      newX += translate.x;\n    }\n    if (translate.y) {\n      newY += translate.y;\n    }\n  }\n  return { x: newX, y: newY }\n}","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})\n\nexport const LanguageContext = React.createContext({\n\n})","var map = {\n\t\"./en/00_home.mdx\": [\n\t\t350,\n\t\t19\n\t],\n\t\"./en/01_couverture_media.mdx\": [\n\t\t351,\n\t\t3\n\t],\n\t\"./en/02_detectcritic.mdx\": [\n\t\t352,\n\t\t4\n\t],\n\t\"./en/03_graphclusters.mdx\": [\n\t\t353,\n\t\t5\n\t],\n\t\"./en/04_timelineclusters.mdx\": [\n\t\t354,\n\t\t6\n\t],\n\t\"./en/05_toporobotalgo.mdx\": [\n\t\t355,\n\t\t7\n\t],\n\t\"./en/06_explore_entities.mdx\": [\n\t\t356,\n\t\t8\n\t],\n\t\"./en/07_IssueVERB.mdx\": [\n\t\t357,\n\t\t9\n\t],\n\t\"./en/08_NERdate.mdx\": [\n\t\t358,\n\t\t10\n\t],\n\t\"./fr/00_home.mdx\": [\n\t\t359,\n\t\t20\n\t],\n\t\"./fr/01_couverture_media.mdx\": [\n\t\t360,\n\t\t11\n\t],\n\t\"./fr/02_detectcritic.mdx\": [\n\t\t361,\n\t\t12\n\t],\n\t\"./fr/03_graphclusters.mdx\": [\n\t\t362,\n\t\t13\n\t],\n\t\"./fr/04_timelineclusters.mdx\": [\n\t\t363,\n\t\t14\n\t],\n\t\"./fr/05_toporobotalgo.mdx\": [\n\t\t364,\n\t\t15\n\t],\n\t\"./fr/06_explore_entities.mdx\": [\n\t\t365,\n\t\t16\n\t],\n\t\"./fr/07_IssueVERB.mdx\": [\n\t\t366,\n\t\t17\n\t],\n\t\"./fr/08_NERdate.mdx\": [\n\t\t367,\n\t\t18\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 346;\nmodule.exports = webpackAsyncContext;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    if (url) {\n      axios.get(url, {\n        onDownloadProgress: progressEvent => {\n          const status = progressEvent.loaded / progressEvent.total;\n          setLoadingFraction(status);\n        }\n      })\n      .then(({data: inputData}) => {\n        setTimeout(() => {\n          let data = inputData;\n          if (url.split('.').pop() === 'csv') {\n            data = csvParse(inputData);\n          } else if (url.split('.').pop() === 'tsv') {\n            data = tsvParse(inputData);\n          }\n          setData(data);\n        })\n      })\n    }\n  }, [url]);\n\n  if (!url) {\n    return children();\n  }\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1 || !count) return SINGLE_COLOR_PALETTE;\n  else if (count === 2) {\n    return ['#D77186', '#61A2DA']\n  }\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND (intersection des filtres)' : 'OR (union des filtres)'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions\n                  .sort((a, b) => {\n                    if (a > b) {\n                      return 1;\n                    }\n                    return -1;\n                  })\n                  .map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type, localOptions}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    if (localOptions) {\n                      return localOptions;\n                    }\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","\nimport React, {useState, useEffect} from 'react';\nimport { SketchPicker } from 'react-color';\nimport debounce from 'lodash/debounce';\n\nconst ColorItemHandler = ({\n  modality,\n  onChange,\n  color\n}) => {\n  const [isEdited, setEdited] = useState(false);\n  const [editedColor, setEditedColor] = useState(color);\n  useEffect(() => {\n    setEditedColor(color)\n  }, [color]);\n  const debouncedOnChange = debounce(onChange, 300);\n  const handleChange = newColor => {\n    setEditedColor(newColor.hex);\n    debouncedOnChange(newColor.hex);\n  }\n  const handleClose = () => {\n    onChange(editedColor);\n    setEdited(false);\n  }\n  return (\n    <li>\n      <span onClick={() => setEdited(!isEdited)} className=\"legend-color\" style={{background: color}} />\n      <span className=\"legend-modality\">{modality}</span>\n      {\n        isEdited ?\n        <>\n          <div onClick={handleClose} className=\"color-picker-container\">\n            <div onClick={e => {e.stopPropagation()}}>\n              <h5>Choisir la couleur de la modalité \"{modality}\"</h5>\n              <SketchPicker onChange={handleChange} color={editedColor} />\n            </div>\n          </div>\n        </>\n        : null\n      }\n    </li>\n  )\n}\n\nexport default function ColorLegend ({\n  colorPalette,\n  onChange,\n}) {\n  if (!colorPalette) {\n    return null;\n  }\n  return (\n    <div className=\"ColorLegend\" >\n      <h6>Légende</h6>\n      <ul>\n        {\n          Object.entries(colorPalette)\n          .map(([modality, color]) => {\n            const handleChange = newColor => {\n              onChange({\n                ...colorPalette,\n                [modality] : newColor\n              })\n            }\n            return (\n              <ColorItemHandler onChange={handleChange} key={modality} {...{modality, color}} />\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","import React, {useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport Slider from 'rc-slider';\nimport debounce from 'lodash/debounce';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nconst SLIDER_MARKS = {\n  '0.25': 'défaut'\n};\n\nfunction DebouncedSlider({defaultValue, onChange}) {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue])\n\n  const onSliderChange = newValue => {\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return (\n    <Slider\n      min={0}\n      max={1}\n      step={0.01}\n      defaultValue={defaultValue}\n      value={value}\n      onChange={onSliderChange}\n      marks={SLIDER_MARKS}\n    />\n  );\n}\n\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n  labelDensity,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  nodeLabelVariable,\n\n  filtersOptions,\n  filters = [],\n  colorPalette,\n\n  onFiltersChange,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n          <form onSubmit={e => e.preventDefault()}>\n            <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n          </form>\n        </li>\n        \n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Label des noeuds',\n                    value: nodeLabelVariable,\n                    onChange: onNodeLabelVariableChange,\n                    type: 'string'\n                  }\n                ],\n              }\n            }\n          />\n        </li>\n        \n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n        <li className=\"vis-controls-item slider-wrapper\">\n          <form onSubmit={e => e.preventDefault()}>\n            <h5>Densité des labels</h5>\n            <div className=\"slider-container\">\n                <DebouncedSlider\n                  defaultValue={labelDensity}\n                  onChange={debounce(onLabelDensityChange, 300)}\n                />\n              </div>\n          </form>\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n          }\n      </ul>\n    </>\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd,\n  colorPalette,\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else if (colorPalette) {\n      renderedNode.color = colorPalette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // hidden\n    if (filters.length && evalIfNodeMatches(attr, filters, filtersModeAnd) === false) {\n      renderedNode.hidden = true;\n      renderedNode.label = '';\n    } else {\n      renderedNode.hidden = false;\n      // Label\n      if (!nodeLabel) {\n        renderedNode.label = attr.label || key;\n      } else {\n        renderedNode.label = nodeLabel === 'default' ? attr.label || key : attr[nodeLabel] || '';\n      }\n    }\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  // nodeLabel,\n  // nodeSizeFactor = 1,\n  // extents,\n  // filters = [],\n  // filtersModeAnd,\n  edgesMap,\n  colorPalette,\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const biggerNode = sourceNodeSize > targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (biggerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = biggerNode.color || DEFAULT_NODE_COLOR;\n      } else if (colorPalette) {\n        renderedEdge.color = colorPalette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }  else {\n        renderedEdge.color =\n          nodeColor.palette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import DebouncedInput from './DebouncedInput';\n\nexport default DebouncedInput;","\n\nimport debounce from 'lodash/debounce';\nimport {useState, useEffect, useMemo} from 'react';\nimport Textarea from 'react-textarea-autosize';\n\nexport default function DebouncedInput({\n  value: propsValue,\n  onChange: propsOnChange,\n  type = 'input',\n  ...rest\n}) {\n  const [value, setValue] = useState(propsValue);\n\n  useEffect(() => {\n    setValue(propsValue);\n  }, [propsValue]);\n\n  const propagateChange = useMemo(() => debounce(propsOnChange, 300), [propsOnChange]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    propagateChange(e.target.value);\n  }\n  if (type === 'input') {\n    return (\n      <input\n        value={value}\n        onChange={handleChange}\n        {...rest}\n      />\n    );\n  }\n  return (\n    <Textarea\n      value={value}\n      onChange={handleChange}\n      {...rest}\n    />\n  );\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\nimport ContainerDimensions from 'react-container-dimensions';\n\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer, createEdgeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\nimport Input from '../DebouncedInput';\n\nimport './GraphContainer.css';\n\n\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nfunction GraphContainer({\n  graph,\n  width,\n  height,\n  // nodeColor,\n  // nodeSize,\n  labelDensity,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n  title,\n  legend,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  colorPalette,\n  nodeLabelVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n  onTitleChange,\n  onLegendChange\n}) {\n  const CELL_HEIGHT_RANGE = [height / 5, height / 1000];\n  const CELL_WIDTH_RANGE = [width / 5, width / 1000];\n  const cellHeightScale = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\n  const cellWidthScale = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n      m.set(edge, {sourceNode: sourceAttributes, targetNode: targetAttributes})\n    });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabelVariable = usePrevious(nodeLabelVariable);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n  const previousColorPalette = usePrevious(colorPalette);\n  const previousFiltersModeAnd = usePrevious(filtersModeAnd);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel: nodeLabelVariable,\n    extents,\n    filters,\n    filtersModeAnd,\n    colorPalette,\n  });\n  \n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    colorPalette,\n    // nodeSize,\n    // nodeLabel,\n    // extents,\n    filters,\n    filtersModeAnd,\n    edgesMap,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      previousNodeLabelVariable !== nodeLabelVariable ||\n      previousColorPalette !== colorPalette ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters ||\n      previousFiltersModeAnd !== filtersModeAnd\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: cellWidthScale(labelDensity),\n        height: cellHeightScale(labelDensity)\n      };\n\n      // TODO from nansi: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer, edgeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <>\n          <GraphControls\n            rescale={rescale.bind(null, renderer)}\n            zoomIn={zoomIn.bind(null, renderer)}\n            zoomOut={zoomOut.bind(null, renderer)}\n            {\n              ...{\n                searchString,\n                onSearchStringChange,\n                filtersModeAnd,\n                onToggleFiltersModeAnd,\n                filtersOptions,\n                filters,\n                onFiltersChange,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                labelDensity,\n                onNodeSizeVariableChange,\n                onNodeColorVariableChange,\n                onNodeLabelVariableChange,\n                onColorPaletteChange,\n                onLabelDensityChange,\n                colorPalette: colorPalette || (nodeColor && nodeColor.palette),\n              }\n            }\n          />\n          <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                type=\"textarea\"\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n              />\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default function GraphContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <GraphContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport {LanguageContext} from '../../contexts';\nimport cx from 'classnames';\n\nconst FooterNav = ({\n  prevPage,\n  nextPage\n}) => {\n  const {\n    lang\n  } = useContext(LanguageContext);\n  const messages = {\n    next: {\n      fr: 'Page suivante',\n      en: 'Next page'\n    },\n    prev: {\n      fr: 'Page précédente',\n      en: 'Previous page'\n    }\n  }\n  return (\n    <footer className={cx(\"FooterNav\", {'start-page': !prevPage})}>\n      <ul>\n        {\n          prevPage ?\n            <li className=\"previous-page\">\n              <h5>\n                <Link to={prevPage.route[lang]}>\n                  <div className=\"marker\">{'<'}</div>\n                  <div className=\"page-content\">\n                    <div className=\"page-label\"><i>{messages.prev[lang]}</i></div>\n                    <div>\n                        {prevPage.title[lang]}\n                    </div>\n                  </div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n        {\n          nextPage ?\n            <li className=\"next-page\">\n              <h5>\n                <Link to={nextPage.route[lang]}>\n                  <div>\n                    <div className=\"page-label\"><i>{messages.next[lang]}</i></div>\n                    <div className=\"page-content\">\n                        {nextPage.title[lang]}\n                    </div>\n                  </div>\n                  <div className=\"marker\">{'>'}</div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n      </ul>\n    </footer>\n  )\n}\n\nexport default FooterNav;","import FooterNav from './FooterNav';\n\nexport default FooterNav;","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect, Suspense} from 'react';\nimport {extent} from 'd3-array';\nimport {generatePalette} from '../../helpers/palettes';\n\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from './GraphContainer';\nimport FooterNav from '../FooterNav';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst DEFAULT_LABEL_DENSITY = 0.25;\n\nconst GraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, data), [graph, data]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n  const [nodeLabelVariable, setNodeLabelVariable] = useState(undefined);\n  const [labelDensity, setLabelDensity] = useState(DEFAULT_LABEL_DENSITY);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable: newNodeColorVariable,\n    nodeSizeVariable,\n    nodeLabelVariable,\n    labelDensity,\n    colorPalette,\n    title: newTitle,\n    legend: newLegend\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(newNodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n    setNodeLabelVariable(nodeLabelVariable);\n    setTitle(newTitle);\n    setLegend(newLegend);\n    if (colorPalette && nodeColorVariable === newNodeColorVariable) {\n      setColorPalette(colorPalette);\n    } else {\n      const colors = generatePalette(newNodeColorVariable, filtersOptions[newNodeColorVariable].options.size);\n      const palette = {};\n      let i = 0;\n      filtersOptions[newNodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(palette);\n    }\n    setLabelDensity(labelDensity === undefined ? DEFAULT_LABEL_DENSITY : labelDensity);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId );\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId]);/* eslint react-hooks/exhaustive-deps : 0 */\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  \n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        nodeSizeVariable,\n        nodeColorVariable,\n        nodeLabelVariable,\n        filtersModeAnd,\n        labelDensity,\n        colorPalette,\n        title,\n        legend,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                filtersModeAnd,\n                labelDensity,\n                title,\n                legend,\n\n                colorPalette,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onLabelDensityChange: val => setLabelDensity(val),\n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n                onNodeLabelVariableChange: (val) => setNodeLabelVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\nimport FiltersEditor from '../FiltersEditor';\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide,\n  colorScaleType,\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n\n  rotateMode,\n  searchString,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleLabelsOnTheSide,\n  onColorPaletteChange,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  onColorScaleTypeChange,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les y',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Type d\\'échelle pour la couleur',\n                    onChange: onColorScaleTypeChange,\n                    localOptions: [[\n                      'discrete',\n                      {title: 'discrète'}\n                    ], [\n                      'continuous',\n                      {title: 'continue'}\n                    ]],\n                    value: colorScaleType,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Afficher les labels sur le côté',\n                    onChange: onToggleLabelsOnTheSide,\n                    value: labelsOnTheSide,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        <li className=\"vis-controls-item\">\n          <FiltersEditor\n            {\n              ...{\n                onToggleFiltersModeAnd,\n                filtersModeAnd,\n                filtersOptions,\n                onFiltersChange,\n                filters\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {min, extent} from 'd3-array';\nimport cx from 'classnames';\n\nimport IceCreamControls from './IceCreamControls';\nimport {generatePalette} from '../../helpers/palettes';\nimport Input from '../DebouncedInput';\n\nimport './IceCreamContainer.css';\nimport { evalIfNodeMatches, transformGeometry } from '../../helpers/misc';\n\nconst GIF_TIME = 500;\n\nfunction IceCreamContainer({\n\n  width, \n  height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide = true,\n  colorPalette: inputColorPalette,\n  colorScaleType,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  filtersOptions = {},\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n  title,\n  legend,\n\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  onToggleLabelsOnTheSide,\n  onColorPaletteChange,\n  onColorScaleTypeChange,\n  onTitleChange,\n  onLegendChange,\n}) {\n\n  const [zoomedIndex, setZoomedIndex] = useState(null);\n  const [enableZoom, setEnableZoom] = useState(true);\n\n  const updateActive = () => {\n    if (filters && filters.length) {\n      const existing = zoomedIndex === null ? -1 : zoomedIndex;\n      let found = false;\n      for (let i = existing + 1 ; i < data.length ; i++) {\n        if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n          setZoomedIndex(i);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        for (let i = 0 ; i < data.length ; i++) {\n          if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n            setZoomedIndex(i);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (filters && filters.length) {\n      if (zoomedIndex === null) {\n        updateActive();\n      }\n      setTimeout(updateActive, GIF_TIME);\n    } else {\n      setZoomedIndex(null);\n    }\n  /* eslint react-hooks/exhaustive-deps : 0 */\n  }, [\n    filters,\n    filtersModeAnd,\n    data,\n    zoomedIndex\n  ])\n \n  const smallestDimension = min([width, height]);\n  // in rotate mode width indexed on the hypothenuse\n  const WIDTH = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n  const HEIGHT = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n\n  const MIN_AREA = smallestDimension / 50;\n  const MAX_AREA = smallestDimension / 2;\n  const MARGIN = WIDTH / 15;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN * 2];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain([0, 1]) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain([0, 1]) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ?  scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_AREA, MAX_AREA]) : () => 0;\n\n  // manage palette\n  let colorPalette;\n  if (inputColorPalette) {\n    colorPalette = inputColorPalette;\n  }\n  else if (colorVariable && colorVariable !== 'default' && filtersOptions[colorVariable]) {\n    const palette = generatePalette(colorVariable, filtersOptions[colorVariable].options.length);\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n  }\n  let continuousColorScale;\n  if (colorScaleType === 'continuous') {\n    let colorRange = ['#D77186', '#61A2DA'];\n    if (colorPalette && colorPalette['from'] && colorPalette['to']) {\n      colorRange = [colorPalette['from'], colorPalette['to']]\n    } else {\n      colorPalette = {\n        from: '#D77186',\n        to: '#61A2DA'\n      }\n    }\n    continuousColorScale = scaleLinear().domain(extent(data.map(d => +d[colorVariable]))).range(colorRange)\n  }\n  let getColor = (val) => {\n    if (colorScaleType === 'continuous') {\n      return continuousColorScale(+val);\n    } else return colorPalette ? colorPalette[val] : 'grey';\n  }\n\n  // handling search\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  let rotateTransform = {rotate: 0};\n  if (rotateMode) {\n    rotateTransform = {\n      rotate: -45,\n      translate: {x: 0, y: smallestDimension/2}\n    }\n  }\n  // wrapping function for transforms\n  const transf = (x, y) => transformGeometry({x, y}, rotateTransform)\n  // dimensions of control background rect\n  const {x: point1X, y: point1Y} = transformGeometry({\n    x: 0,\n    y: 0\n  }, rotateTransform)\n  const {x: point2X, y: point2Y} = transformGeometry({\n    x: WIDTH,\n    y: 0\n  }, rotateTransform)\n  const {x: point3X, y: point3Y} = transformGeometry({\n    x: WIDTH,\n    y: HEIGHT\n  }, rotateTransform)\n  const {x: point4X, y: point4Y} = transformGeometry({\n    x: 0,\n    y: HEIGHT\n  }, rotateTransform)\n  \n  return (\n    <>\n        <svg \n          className={cx(\"scatterplot\", {'zoom-mode': zoomedIndex !== null && enableZoom})}\n          width={smallestDimension} \n          height={smallestDimension}\n          transform={`translate(${(width - smallestDimension) / 2}, 0)`}\n        >\n          <polygon \n            points={`${point1X},${point1Y} ${point2X},${point2Y} ${point3X},${point3Y} ${point4X},${point4Y}`} \n            width={WIDTH} \n            height={HEIGHT} \n            fill=\"white\" \n          />\n          <g transform={`translate(${rotateMode ? 0 : MARGIN / 2}, ${rotateMode ? -MARGIN : 0})${rotateMode ? 'scale(1.05)' : ''}`}>\n            <g className=\"axis axis-left\">\n              <line \n                x1={transf(MARGIN, MARGIN).x}\n                y1={transf(MARGIN, MARGIN).y}\n                x2={transf(MARGIN, HEIGHT - MARGIN * 2).x}\n                y2={transf(MARGIN, HEIGHT - MARGIN * 2).y}\n                stroke={'black'} \n              />\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n   \n                  const {x, y} = transf(MARGIN, getY(tick))\n                  const {x: x1, y: y1} = transf(MARGIN/4, getY(tick) + MARGIN/6)\n                  const {x: x2, y: y2} = transf(MARGIN/2, getY(tick))\n                  return (\n                    <g key={tick}>\n                      <text textAnchor=\"end\" x={x1} y={y1}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={x}\n                        y1={y}\n                        x2={x2}\n                        y2={y2}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH/2 - MARGIN * 1.5}, ${HEIGHT + MARGIN * 2.5})rotate(45)` : `translate(0, ${MARGIN / 2 - 2})`}\n              >\n                <text \n                  className=\"axis-variable-name\" \n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {yVariable}\n                </text>\n              </g>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line \n                x1={transf(MARGIN, HEIGHT - MARGIN * 2).x} \n                y1={transf(MARGIN, HEIGHT - MARGIN * 2).y} \n                x2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).x} \n                y2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).y} \n                stroke={'black'} \n              />\n              {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const {x, y} = transf(getX(tick), HEIGHT - MARGIN * 2);\n                  const {x: x1, y: y1} = transf(getX(tick), HEIGHT - MARGIN * 1.66);\n                  const {x: x2, y: y2} = transf(getX(tick), HEIGHT - MARGIN * 1.25);\n                  return (\n                    <g key={tick}>\n                      <text textAnchor=\"center\" x={x2} y={y2}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={x}\n                        y1={y}\n                        x2={x1}\n                        y2={y1}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH}, ${HEIGHT + MARGIN * 1.5})rotate(-45)` : `translate(${WIDTH - MARGIN * 1.5}, ${HEIGHT - MARGIN / 3 - 2})`}\n              >\n                <text \n                  className=\"axis-variable-name\" \n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {xVariable}\n                </text>\n              </g>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n                \n                  getY.ticks &&\n                  getY.ticks()\n                  .map(tick => (\n                    <line \n                      key={tick}\n                      x1={transf(MARGIN, getY(tick)).x}\n                      y1={transf(MARGIN, getY(tick)).y}\n                      x2={transf(WIDTH - MARGIN * 2, getY(tick)).x}\n                      y2={transf(WIDTH - MARGIN * 2, getY(tick)).y}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n                \n                getX.ticks &&\n                getX.ticks()\n                .map(tick => (\n                  <line \n                    key={tick}\n                    x1={transf(getX(tick), MARGIN).x}\n                    y1={transf(getX(tick), MARGIN).y}\n                    x2={transf(getX(tick), WIDTH - MARGIN * 2).x}\n                    y2={transf(getX(tick), WIDTH - MARGIN * 2).y}\n                    stroke=\"lightgrey\"\n                  />\n                ))\n            }\n            </g>\n            <g \n              className=\"plot-objects-container\"\n              onMouseEnter={() => setEnableZoom(false)}\n              onMouseLeave={() => setEnableZoom(true)}\n            >\n            {\n              data\n              .sort((a, b) => {\n                if (getY(a[yVariable]) > getY(b[yVariable])) {\n                  return 1;\n                }\n                return -1;\n              })\n              .map((datum, index) => {\n                const radius = Math.sqrt(getSize(datum[sizeVariable]) / Math.PI);\n                let {x, y} = transf(getX(datum[xVariable]), getY(datum[yVariable]));\n\n                let {x: xForXAxis, y: yForXAxis} = transf(getX(datum[xVariable]), getY.range ? getY.range()[0] : 0);\n                let {x: xForYAxis, y: yForYAxis} = transf(getX.range ? getX.range()[0] : 0, getY(datum[yVariable]));\n                let labelX =  x + radius + smallestDimension / 100;\n                let labelY = rotateMode ? y - smallestDimension / 200 : y + smallestDimension / 200;\n                let pointerStartCoords = transf(getX(datum[xVariable]) + radius, getY(datum[yVariable]));\n                if (labelsOnTheSide) {\n                  let {x: newX, y: newY} = transf( WIDTH - MARGIN * 1.7, MARGIN + index * (HEIGHT - MARGIN * 3) / data.length);\n                  labelX = newX;\n                  labelY = newY;\n                }\n\n                let opacity =  1;\n                const isMatching = !filters.length || evalIfNodeMatches(datum, filters, filtersModeAnd);\n                if (filters.length) {\n                  if (isMatching && (!highlightedIndex || highlightedIndex.has(index))) {\n                    opacity = 1;\n                  } else {\n                    opacity = .05;\n                  }\n                } else if (highlightedIndex && !highlightedIndex.has(index)) {\n                  opacity = .2;\n                }\n\n                const isZoomed = index === zoomedIndex && enableZoom === true;\n           \n                return (\n                  <g \n                    key={index} \n                    className={cx(\"plot-object\", {'is-matching': isMatching, 'is-zoomed': isZoomed})}\n                    opacity={opacity}\n                  >\n                    <line\n                      className=\"axis-line\"\n                      stroke=\"grey\"\n                      strokeDasharray='1,1'\n                      x1={x}\n                      y1={y}\n                      x2={xForYAxis}\n                      y2={yForYAxis}\n                    />\n                    <line\n                      className=\"axis-line\"\n                      stroke=\"grey\"\n                      strokeDasharray='1,1'\n                      x1={x}\n                      y1={y}\n                      x2={xForXAxis}\n                      y2={yForXAxis}\n                    />\n                    <circle \n                      cx={x}\n                      cy={y}\n                      r={radius} \n                      fill={getColor(datum[colorVariable])} \n                      opacity={.8}\n                    />\n                    {\n                      labelsOnTheSide ?\n                      <line\n                        x1={pointerStartCoords.x}\n                        y1={pointerStartCoords.y}\n                        x2={labelX}\n                        y2={labelY}\n                        stroke=\"lightgrey\"\n                        strokeDasharray='4,4'\n                      />\n                      : null\n                    }\n                    <g \n                      transform={`translate(${labelX}, ${labelY})`}\n                    >\n                      <text\n                        transform={rotateMode ? 'rotate(-45)': ''}\n                        style={{\n                          fontSize: rotateMode && labelsOnTheSide ? HEIGHT / 70 : undefined\n                        }}\n                      >\n                        {datum[labelVariable]}\n                      </text>\n                    </g>\n                  </g>\n                )\n              })\n            }\n            </g>\n          </g>\n        </svg>\n        <IceCreamControls\n          {\n            ...{\n              xVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n              labelsOnTheSide,\n\n              rotateMode,\n              searchString,\n              colorScaleType,\n\n              onSearchStringChange,\n              onToggleRotateMode,\n              \n              onXVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleLabelsOnTheSide,\n              onToggleReverseX,\n              onToggleReverseY,\n              onColorPaletteChange,\n              onColorScaleTypeChange,\n\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              onFiltersChange,\n              filters,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n        <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n                type=\"textarea\"\n              />\n            </div>\n          </form>\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <IceCreamContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\nimport { generatePalette } from '../../helpers/palettes';\n\nimport IceCreamVis from './IceCreamContainer';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n  const [labelsOnTheSide, setLabelsOnTheSide] = useState(false);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [colorScaleType, setColorScaleType] = useState(undefined);\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n  const [filters, setFilters] = useState([]);\n\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n    labelsOnTheSide: thatLabelsOnTheSide,\n    colorScaleType: thatColorScaleType,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n    colorPalette: thatColorPalette,\n    filters: theseFilters = [],\n    filtersModeAnd: theseFiltersModeAnd,\n    title: thisTitle,\n    legend: thisLegend,\n  }) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setColorScaleType(thatColorScaleType);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n    setLabelsOnTheSide(thatLabelsOnTheSide);\n    setFilters(theseFilters);\n    setFiltersModeAnd(theseFiltersModeAnd);\n    setTitle(thisTitle);\n    setLegend(thisLegend);\n    if (thatColorPalette && colorVariable === thatColorVariable) {\n      setColorPalette(thatColorPalette);\n    } else if (thatColorVariable || colorScaleType !== thatColorScaleType) {\n      let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n      if (palette) {\n        const colors = generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.size);\n        // const palette = {};\n        let i = 0;\n        filtersOptions[thatColorVariable].options.forEach(option => {\n          palette[option] = colors[i];\n          i++;\n        });\n      } else {\n        setColorPalette(undefined);\n      }\n      \n      setColorPalette(palette);\n    } else if (colorPalette) {\n      setColorPalette(undefined);\n    }\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId);\n      onVisualizationUpdate(registeredVisualizations[thatId]);\n    }\n  }, [registeredVisualizations, focusedVisualizationId])/* eslint react-hooks/exhaustive-deps : 0 */\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n        labelsOnTheSide,\n\n        rotateMode,\n        searchString,\n        colorPalette,\n        colorScaleType,\n\n        filters,\n        filtersModeAnd,\n\n        title,\n        legend,\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <IceCreamVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                labelsOnTheSide,\n                colorPalette,\n                colorScaleType,\n\n                rotateMode,\n                searchString,\n\n                filtersModeAnd,\n                filters,\n                title,\n                legend,\n\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onSearchStringChange,\n                onToggleRotateMode: () => setRotateMode(!rotateMode),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onSizeVariableChange: (val) => setSizeVariable(val),\n                onLabelVariableChange: (val) => setLabelVariable(val),\n                onToggleLabelsOnTheSide: val => setLabelsOnTheSide(val),\n                onColorPaletteChange: val => setColorPalette(val),\n                onColorScaleTypeChange: val => setColorScaleType(val),\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import IceCreamAnnotation from './IceCreamAnnotation';\n\nexport default IceCreamAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\nimport FiltersEditor from '../FiltersEditor';\n\n\n\nexport default function LinearGraphControls({\n  xVariable,\n  xLabelVariable,\n  // reverseX,\n  graphType,\n  yVariable,\n  // reverseY,\n\n  colorVariable,\n  // searchString,\n  useRelativeScale,\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n\n  // onSearchStringChange,\n  onToggleUseRelativeScale,\n  onGraphTypeChange,\n  \n  onXVariableChange,\n  onXLabelVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n\n  onColorPaletteChange,\n\n  // onToggleReverseX,\n  // onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  // const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls\", {'is-minified': isMinified})}>\n        \n        {/* <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li> */}\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'Type de graphe',\n                    onChange: onGraphTypeChange,\n                    localOptions: [[\n                      'linegraph',\n                      {title: 'lignes'}\n                    ], [\n                      'histogram',\n                      {title: 'histogramme'}\n                    ]],\n                    value: graphType,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Variable des X',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Label des X',\n                    onChange: onXLabelVariableChange,\n                    value: xLabelVariable,\n                    type: 'string'\n                  },\n                  // {\n                  //   title: 'Inverser les x',\n                  //   onChange: onToggleReverseX,\n                  //   value: reverseX,\n                  //   type: 'boolean'\n                  // },\n                  {\n                    title: 'Label des Y',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  // {\n                  //   title: 'Inverser les y',\n                  //   onChange: onToggleReverseY,\n                  //   value: reverseY,\n                  //   type: 'boolean'\n                  // },\n                  {\n                    title: 'Utiliser une échelle relative pour les Y quand filtré',\n                    onChange: onToggleUseRelativeScale,\n                    value: useRelativeScale,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  // {\n                  //   title: 'Labels des points',\n                  //   onChange: onLabelVariableChange,\n                  //   value: labelVariable,\n                  //   type: 'string'\n                  // },\n                ],\n              }\n            }\n          />\n        </li>\n        <li className=\"vis-controls-item\">\n          <FiltersEditor\n            {\n              ...{\n                onToggleFiltersModeAnd,\n                filtersModeAnd,\n                filtersOptions,\n                onFiltersChange,\n                filters\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React, {useMemo} from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {extent, group} from 'd3-array';\nimport Input from '../DebouncedInput';\n\n\nimport LinearGraphControls from './LinearGraphControls';\nimport {generatePalette} from '../../helpers/palettes';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\nimport './LinearGraphContainer.css';\nimport { max, uniqBy } from 'lodash';\n\nfunction LinearGraphContainer({\n\n  width, \n  height,\n  data,\n\n  xVariable,\n  xLabelVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  colorPalette: inputColorPalette,\n\n  title,\n  legend,\n\n  searchString = '',\n\n  graphType = 'linegraph',\n  useRelativeScale,\n\n  onSearchStringChange,\n  filtersOptions = {},\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n\n  \n  onXVariableChange,\n  onXLabelVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  onColorPaletteChange,\n  onGraphTypeChange,\n  onToggleUseRelativeScale,\n\n  onTitleChange,\n  onLegendChange,\n}) {\n \n  // const smallestDimension = min([width, height])\n  const WIDTH = width;\n  const HEIGHT = height;\n\n  // set scales dimensions and scale\n  const MARGIN = WIDTH / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN / 2];\n  let yRange = [HEIGHT - MARGIN, MARGIN];\n\n\n  const xLabelMap = useMemo(() => {\n    return data.reduce((dict, datum) => {\n      const labelVariable = xLabelVariable === 'default' ? xVariable : xLabelVariable;\n      return {\n        ...dict,\n        [datum[xVariable]]: datum[labelVariable]\n      }\n    }, {})\n\n  }, [data, xVariable, xLabelVariable])\n  \n  // build visualization groups\n  let dataGroups = [[undefined, data]]\n  if (colorVariable) {\n    dataGroups = Array.from(group(data, d => d[colorVariable]));\n  } \n\n  // reduce items\n  dataGroups = dataGroups.map(([_id, values]) => {\n    const xGroups = Array.from(group(values, d => d[xVariable])).map(([x, ys]) => {\n      return {\n        x: +x, \n        // aggregate ys\n        y: ys.reduce((sum, y) => sum + (+y[yVariable]), 0),\n        filteredY: ys.filter(d => filters.length ? evalIfNodeMatches(d, filters, filtersModeAnd) : true).reduce((sum, y) => sum + (+y[yVariable]), 0),\n        xValue: x\n      }\n    })\n    return [_id, xGroups]\n  });\n \n  // refactorize by x for stacked barchart\n  if (graphType === 'histogram') {\n    const xMap = dataGroups.reduce((res, [color, values]) => {\n      return values.reduce((res2, value) => {\n        const x = value.x;\n        const transformedValue = {...value, color};\n        return {\n          ...res2,\n          [x]: res2[x] ? [...res2[x], transformedValue] : [transformedValue]\n        }\n      }, res)\n    }, {})\n    // turn datagroup to an array of [x, list of related objects]\n    dataGroups = Object.entries(xMap);\n  }\n  let getX, getY;\n  const yPropToFilter = useRelativeScale ? 'filteredY' : 'y';\n  let xValues;\n  if (graphType === 'linegraph') {\n    // handling relative or global filter\n    const xExtent = extent(dataGroups.reduce((res, [_id, values]) => [...res, ...values.map(v => v.x)] , []));\n    getX = scaleLinear().range(xRange).domain(xExtent);\n    getY = scaleLinear().range(yRange).domain([0, max(dataGroups.map(([_id, values]) => max(values.map(v => v[yPropToFilter]))))]).nice();\n  } else if (graphType === 'histogram') {\n    const xExtent = extent(dataGroups.map(([x]) => +x));\n    getX = scaleLinear().range(xRange).domain(xExtent);\n    xValues = uniqBy(dataGroups, d => d[0])\n    // y scale domain is the biggest sum for each x modality\n    getY = scaleLinear().range(yRange).domain([0, max(dataGroups.map(([_x, list]) => list.reduce((sum, item) => sum + item[yPropToFilter] , 0)))]).nice();\n  }\n\n   // apply filter\n   if (filters.length && colorVariable) {\n    const filtersAffectingColor = filters.filter(f => f.attribute === colorVariable);\n    if (graphType === 'linegraph') {\n      dataGroups = dataGroups.filter(([colorValue, values]) => {\n        if (filtersAffectingColor) {\n          if (filtersModeAnd) {\n            const oneFilterDoesNotMatches = filtersAffectingColor.find(({ attribute, value }) => colorValue !== '' + value) !== undefined;\n            return !oneFilterDoesNotMatches;\n          } else {\n            const oneFilterMatches = filtersAffectingColor.find(({ attribute, value }) => colorValue === '' + value) !== undefined;\n            return oneFilterMatches;\n          }\n        } else {\n          return true;\n        }\n      })\n     } else if (graphType === 'histogram') {\n       // filtering groups\n      dataGroups = dataGroups.reduce((res, [xValue, values]) => {\n        if (filtersAffectingColor) {\n          const newValues = values.filter(value => {\n            if (filtersModeAnd) {\n              const oneFilterDoesNotMatches = filtersAffectingColor.find(({ attribute, value }) => value.color !== '' + value) !== undefined;\n              return !oneFilterDoesNotMatches;\n            } else {\n              const oneFilterMatches = filtersAffectingColor.find(({ attribute, value }) => value.color === '' + value) !== undefined;\n              return oneFilterMatches;\n            }\n          })\n          if (newValues.length) {\n            return [...res, [xValue, newValues]]\n          // all items filtered out -> do not include the group\n          } else return res;\n        // no filters, return as is\n        } else {\n          return [...res, [xValue, values]];\n        }\n      }, [])\n     }\n    \n  }\n    \n  \n  // manage palette\n  let colorPalette;\n  if (inputColorPalette) {\n    colorPalette = inputColorPalette;\n  }\n  else if (colorVariable && colorVariable !== 'default') {\n    const palette = generatePalette(colorVariable, filtersOptions[colorVariable].options.length);\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n  }\n  let getColor = (val) => {\n    return colorPalette ? colorPalette[val] : 'grey';\n  }\n\n  // handling search\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n  let getYHisto\n  // preparing histogram stacking\n  if (graphType === 'histogram') {\n    dataGroups = dataGroups.map(([xValue, values]) => {\n      // let sum = 0;\n      const newValues = values\n      .sort((a, b) => {\n        if (a.color > b.color) {\n          return 1;\n        } else return -1;\n      })\n      .reduce((total, value, index) => {\n        const prev = index > 0 ? total[index - 1] : undefined;\n        const yDisplace = prev ? +prev.y + (prev.yDisplace || 0) : 0;\n\n        const newValue = {\n          ...value,\n          yDisplace,\n          y: +value.y,\n          x: +value.x\n        }\n        return [...total, newValue]\n      }, [])\n\n      return [xValue, newValues];\n    }, []);\n\n    dataGroups = dataGroups.sort((a, b) => {\n      if (+a[0] > +b[0]) {\n        return 1;\n      }\n      return -1;\n    });\n    getYHisto = scaleLinear()\n    .range([MARGIN, HEIGHT - MARGIN * 2])\n    .domain([0, max(dataGroups.map(([_xValue, values]) => values.reduce((sum, v) => sum + v.y, 0)))]).nice()\n    getY\n    .domain([0, max(dataGroups.map(([_xValue, values]) => values.reduce((sum, v) => sum + v.y, 0)))]).nice()\n  }\n  \n  \n  return (\n    <>\n        <svg transform={`translate(0, ${-MARGIN/2})`} className=\"LinearGraph\" width={WIDTH} height={HEIGHT + MARGIN/2}>\n            <g>\n              {\n                graphType === 'linegraph' ?\n                dataGroups.map(([colorValue, values]) => {\n                  const firstX = getX(values[0].x);\n                  const firstY = getY(values[0].y);\n                  const color = colorVariable ? getColor(colorValue) : 'grey';\n                  const path = `M ${firstX} ${firstY} ${\n                    values\n                    .reduce((res, {x, y}) => {\n                      return `${res} L ${getX(x)} ${getY(y)}`\n                    }, '')\n                  }`\n                  return <>\n                    <path d={path} \n                      fill=\"transparent\" \n                      stroke={ colorVariable ? color : 'grey'}\n                      key={colorValue}\n                    />\n                    {\n                      values.map(({x, y}, index) => (\n                        <circle\n                          key={index}\n                          cx={getX(x)}\n                          cy={getY(y)}\n                          fill={ color }\n                          r={2}\n                        />\n                      ))\n                    }\n                  </>\n                })\n                : \n                <g className=\"histogram-objects\">\n                  {\n                    dataGroups.map(([xValue, values], index) => {\n                      return (\n                        <g key={index} className=\"x-group\">\n                          {\n                            values.map(({x, y, yDisplace, color}, index2) => {\n                             \n                              return (\n                                <rect\n                                  key={index2}\n                                  x={getX(x)}\n                                  y={HEIGHT - getYHisto(yDisplace) - getYHisto(y)}\n                                  width={ (WIDTH - MARGIN * 4) / xValues.length}\n                                  height={getYHisto(y)}\n                                  fill={getColor(color)}\n                                />\n                              )\n                            })\n                          }\n                        </g>\n                      )\n                     \n                    })\n                  }\n                </g>\n              }\n              <g className=\"left-axis\">\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n                  const x = MARGIN * .7;\n                  return (\n                    <g className=\"axis-element\" key={tick}>\n                      <text textAnchor=\"end\" x={x} y={getY(tick)}>\n                        {tick}\n                      </text>\n                      \n                      <line\n                        x1={x  + MARGIN * .1}\n                        y1={getY(tick)}\n                        x2={MARGIN}\n                        y2={getY(tick)}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n                <line\n                  stroke={'black'}\n                  y1={MARGIN}\n                  y2={HEIGHT - MARGIN}\n                  x1={MARGIN}\n                  x2={MARGIN}\n                />\n              </g>\n              <g className=\"bottom-axis\">\n                <line\n                  stroke={'black'}\n                  y1={HEIGHT - MARGIN}\n                  y2={HEIGHT - MARGIN}\n                  x1={MARGIN}\n                  x2={WIDTH - MARGIN / 2}\n                />\n                {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const y = HEIGHT - MARGIN * .75\n                  return (\n                    <g className=\"axis-element\" key={tick}>\n                      <g transform={`translate(${getX(tick)} ${y})`}>\n                        <g transform={'rotate(-45)'}>\n                          <text \n                            textAnchor=\"end\"\n                          >\n                            {xLabelMap[tick]}\n                          </text>\n                        </g>\n                      </g>\n                      <line\n                        y1={HEIGHT - MARGIN}\n                        y2={y - MARGIN * .1}\n                        x1={getX(tick)}\n                        x2={getX(tick)}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n                }\n              </g>\n            </g>\n        </svg>\n        <LinearGraphControls\n          {\n            ...{\n              xVariable,\n              xLabelVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n              graphType,\n              useRelativeScale,\n\n              searchString,\n\n              onSearchStringChange,\n              \n              onXVariableChange,\n              onXLabelVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleReverseX,\n              onToggleReverseY,\n              onColorPaletteChange,\n              onToggleUseRelativeScale,\n              onGraphTypeChange,\n\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              onFiltersChange,\n              filters,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n        <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n                type=\"textarea\"\n              />\n            </div>\n          </form>\n    </>\n  );\n}\n\nexport default function LinearGraphContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer LinearGraphContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <LinearGraphContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\nimport { generatePalette } from '../../helpers/palettes';\n\nimport LinearGraphVis from './LinearGraphContainer';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst LinearGraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [xLabelVariable, setXLabelVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [graphType, setGraphType] = useState('linegraph');\n  const [useRelativeScale, setUseRelativeScale] = useState(undefined);\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [filters, setFilters] = useState([]);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    xLabelVariable: thatXLabelVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n\n    searchString: thatSearchString,\n    colorPalette: thatColorPalette,\n\n    graphType: thatGraphType,\n    useRelativeScale: thatUseRelativeScale,\n\n    filters: theseFilters = [],\n    filtersModeAnd: theseFiltersModeAnd,\n    title: thisTitle,\n    legend: thisLegend,\n  }) => {\n    setXVariable(thatXVariable);\n    setXLabelVariable(thatXLabelVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setSearchString(thatSearchString);\n    setGraphType(thatGraphType);\n    setUseRelativeScale(thatUseRelativeScale);\n    setFilters(theseFilters);\n    setFiltersModeAnd(theseFiltersModeAnd);\n    setTitle(thisTitle);\n    setLegend(thisLegend);\n\n\n    if (thatColorPalette && ((!colorVariable && thatColorVariable) || colorVariable === thatColorVariable)) {\n      setColorPalette(thatColorPalette);\n    } else if (thatColorVariable) {\n      let colors = thatColorVariable && thatColorVariable !== 'default' ? generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.length) : undefined\n      // const colors = generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.size);\n      const finalPalette = {};\n      let i = 0;\n      filtersOptions[thatColorVariable].options.forEach(option => {\n        finalPalette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(finalPalette);\n    } else if (colorPalette) {\n      setColorPalette(undefined);\n    }\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId)\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])/* eslint react-hooks/exhaustive-deps : 0 */\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        graphType,\n        useRelativeScale,\n\n        xVariable,\n        xLabelVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n\n        searchString,\n        colorPalette,\n\n        filters,\n        filtersModeAnd,\n        \n        title,\n        legend\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <LinearGraphVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                xLabelVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                colorPalette,\n                searchString,\n                useRelativeScale,\n                graphType,\n\n                onSearchStringChange,\n\n                filtersModeAnd,\n                filters,\n\n                title,\n                legend,\n\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onXLabelVariableChange: (val) => setXLabelVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n\n                onGraphTypeChange: val => setGraphType(val),\n                onToggleUseRelativeScale: () => setUseRelativeScale(!useRelativeScale),\n\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default LinearGraphAnnotation;","import GraphAnnotation from './components/GraphAnnotation';\nimport IceCreamAnnotation from './components/IceCreamAnnotation';\nimport LinearGraphAnnotation from './components/LinearGraphAnnotation';\nimport PlainPage from './components/PlainPage';\n\nconst routes = [\n  {\n    title: {\n      fr: 'Introduction',\n      en: 'Introduction',\n    },\n    route: {\n      fr: 'introduction',\n      en: 'introduction',\n    },\n    contents: {\n      fr: '00_home.mdx',\n      en: '00_home.mdx',\n    },\n    Component: PlainPage\n  },\n  {\n    title: {\n      fr: '1. Couverture médias',\n      en: '1. Media coverage',\n    },\n    route: {\n      fr: '01-couverture-media',\n      en: '01-media-coverage',\n    },\n    contents: {\n      fr: '01_couverture_media.mdx',\n      en: '01_couverture_media.mdx'\n    },\n    Component: LinearGraphAnnotation,\n    data: '4average_clusters_unpivoted.csv'\n  },\n  {\n    title: {\n      fr: '2. Détecter les critiques',\n      en: '2. Detecting critiques',\n    },\n    route: {\n      fr: '02-detecter-critiques',\n      en: '02-detect-critiques'\n    },\n    contents: {\n      fr: '02_detectcritic.mdx',\n      en: '02_detectcritic.mdx'\n    },\n    Component: LinearGraphAnnotation,\n    data: 'critic_notcritic_unpivoted.csv',\n  },\n  {\n    title: {\n      fr: '3. Groupes et clusters',\n      en: '3. Graph clusters',\n    },\n    route: {\n      fr: '03-graph-clusters',\n      en: '03-graph-clusters',\n    },\n    contents: {\n      fr: '03_graphclusters.mdx',\n      en: '03_graphclusters.mdx'\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: '4. Évolution de l\\'agenda médiatique',\n      en: '4. Evolution of the mediatic agenda',\n    },\n    route: {\n      fr: '04-timeline-clusters',\n      en: '04-timeline-clusters',\n    },\n    contents: {\n      fr: '04_timelineclusters.mdx',\n      en: '04_timelineclusters.mdx',\n    },\n    Component: LinearGraphAnnotation,\n    data: '4average_clusters_unpivoted.csv',\n  },\n  {\n    title: {\n      fr: '5. Topologie du réseau',\n      en: '5. Network topology',\n    },\n    route: {\n      fr: '05-topologie',\n      en: '05-topology',\n    },\n    contents: {\n      fr: '05_toporobotalgo.mdx',\n      en: '05_toporobotalgo.mdx',\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: '6. Agents calculateurs',\n      en: '6. Calculating agents',\n    },\n    route: {\n      fr: '06-agents',\n      en: '06-agents',\n    },\n    contents: {\n      fr: '06_explore_entities.mdx',\n      en: '06_explore_entities.mdx',\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: '7. Verbes de troubles',\n      en: '7. Trouble verbs',\n    },\n    route: {\n      fr: '07-verbes',\n      en: '07-verbs',\n    },\n    contents: {\n      fr: '07_IssueVERB.mdx',\n      en: '07_IssueVERB.mdx',\n    },\n    data: 'df_AB_tfidf_verbs_freq_count.csv',\n    Component: IceCreamAnnotation\n  },\n  {\n    title: {\n      fr: '8. Temporalité',\n      en: '8. Temporality',\n    },\n    route: {\n      fr: '08-temporalite',\n      en: '08-temporalite',\n    },\n    contents: {\n      fr: '08_NERdate.mdx',\n      en: '08_NERdate.mdx',\n    },\n    Component: IceCreamAnnotation,\n    data: 'date_ner_tfidf_v3.csv'\n  }\n]\n\nexport default routes;","import React, {useState, Suspense} from 'react';\nimport FooterNav from '../FooterNav';\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  prevPage,\n  nextPage\n}) => {\n  const [helpVisible, setHelpVisible] = useState(false);\n  return (\n    <div className=\"slide-container without-visualization\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n      </aside>\n  </div>\n  )\n}\n\nexport default PlainPage;","import LinearGraphAnnotation from './LinearGraphAnnotation';\n\nexport default LinearGraphAnnotation;","import React, {useState} from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport { LanguageContext } from './contexts';\n\n\nimport {repository} from '../package.json';\n\nimport DataLoader from './components/DataLoader';\n\nimport routes from './summary'\n\nconst LANGUAGES = ['fr', 'en'];\n\n\n\nfunction App() {\n\n  const history = useHistory();\n  const [lang, setLang] = useState('fr');\n\n  const renderRoute = ({\n    data, \n    contentsURL, \n    Content, \n    ThatComponent,\n    prevPage,\n    nextPage\n  }) => (\n      <DataLoader url={data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined}>\n        {\n          data => (\n            <ThatComponent\n              {\n                ...{\n                  contentsURL,\n                  Content,\n                  prevPage,\n                  nextPage,\n                  data\n                }\n              }\n            />\n          )\n        }\n      </DataLoader>\n  );\n\n  const onLangChange = (ln) => {\n    if (ln !== lang) {\n      const otherLang = lang;\n      const pathOtherLang = history.location.pathname.split('/').pop();\n      const routeItem = routes.find(route => {\n        return route.route[otherLang] === pathOtherLang;\n      });\n      setLang(ln);\n      if (routeItem) {\n        history.push(`/edition/${ln}/${routeItem.route[ln]}`);\n\n      }\n    }\n    \n  }\n  return (\n    <LanguageContext.Provider value={{lang}}>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            {\n              routes.map(({title, route: inputRoute}, index) => {\n                const route = `/edition/${lang}/${inputRoute[lang]}`\n                return (\n                  <li key={index} className=\"navitem-container\">\n                    <Link to={route}>\n                      {title[lang]}\n                    </Link>\n                  </li>\n                )\n                })\n            }\n            <li className=\"lang-toggle\">\n              <button \n                className={lang === 'fr' ? 'is-active': ''}\n                onClick={() => onLangChange('fr')}\n              >fr</button>\n              <button\n                className={lang === 'en' ? 'is-active': ''}\n                onClick={() => onLangChange('en')}\n              >en</button>\n            </li>\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              LANGUAGES.map(lang => {\n                return routes.map(({\n                  // title,\n                  route: inputRoute, \n                  contents,\n                  data,\n                  Component: ThatComponent\n                }, index) => {\n                  const route = `/edition/${lang}/${inputRoute[lang]}`\n                  const prevPage = index > 0 ? routes[index - 1] : undefined;\n                  const nextPage = index < routes.length - 1 ? routes[index + 1] : undefined;\n                  const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${lang}/${contents[lang]}`))\n                  const contentsURL = `${repository}/blob/main/src/contents/${lang}/${contents[lang]}`;\n                  return (\n                    <Route key={index} path={route}>\n                      {renderRoute({data, contentsURL, Content, ThatComponent, prevPage, nextPage})}\n                    </Route>\n                  )\n                } )\n              })\n            }\n            <Redirect to={`/edition/fr/${routes[0].route['fr']}`} />\n          </Switch>\n        </main>\n      </div>\n    </LanguageContext.Provider>\n  );\n}\n\n\nexport default function Wrapper() {\n  return (\n    <Router>\n      <App />\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}