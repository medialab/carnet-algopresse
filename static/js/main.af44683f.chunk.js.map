{"version":3,"sources":["contexts.js","../ /^/.//.*$/ groupOptions: {} namespace object","components/DataLoader/DataLoader.js","components/DataLoader/index.js","helpers/palettes.js","components/GraphAnnotation/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/ColorLegend.js","components/ColorLegend/index.js","components/GraphAnnotation/GraphControls.js","components/GraphAnnotation/reducers.js","components/DebouncedInput/index.js","components/DebouncedInput/DebouncedInput.js","components/GraphAnnotation/GraphContainer.js","components/FooterNav/FooterNav.js","components/FooterNav/index.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/IceCreamAnnotation/IceCreamControls.js","components/IceCreamAnnotation/IceCreamContainer.js","components/IceCreamAnnotation/IceCreamAnnotation.js","components/IceCreamAnnotation/index.js","components/LinearGraphAnnotation/LinearGraphControls.js","components/LinearGraphAnnotation/LinearGraphContainer.js","components/LinearGraphAnnotation/LinearGraphAnnotation.js","summary.js","components/PlainPage/PlainPage.js","components/LinearGraphAnnotation/index.js","App.js","reportWebVitals.js","index.js","helpers/misc.js"],"names":["VisualizationControlContext","React","createContext","LanguageContext","map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Loader","percentsLoaded","className","style","width","DataLoader","url","children","useState","data","setData","loadingFraction","setLoadingFraction","useEffect","axios","get","onDownloadProgress","progressEvent","status","loaded","total","inputData","setTimeout","split","pop","csvParse","tsvParse","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","usePrevious","value","ref","useRef","current","ControlButton","onClick","FiltersEditor","onToggleFiltersModeAnd","filtersModeAnd","filtersOptions","onFiltersChange","filters","isOpen","setIsOpen","undefined","newFilterAttribute","setNewFilterAttribute","newFilterOptions","options","forEach","option","push","length","index","attribute","newFilters","filter","f","i","onChange","val","target","entries","title","sort","a","b","VariablesEditor","variables","isNotAllDefault","find","v","type","localOptions","activeOptions","includes","getOptions","label","newVal","ColorItemHandler","modality","color","isEdited","setEdited","editedColor","setEditedColor","debouncedOnChange","debounce","background","stopPropagation","newColor","hex","ColorLegend","colorPalette","SLIDER_MARKS","DebouncedSlider","defaultValue","setValue","min","max","step","newValue","marks","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","labelDensity","displayAllLabels","nodeSizeVariable","nodeColorVariable","nodeLabelVariable","onNodeSizeVariableChange","onNodeColorVariableChange","onNodeLabelVariableChange","onLabelDensityChange","onColorPaletteChange","onDisplayAllLabelsChange","isMinified","setIsMinified","cx","onSubmit","preventDefault","placeholder","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","DebouncedInput","propsValue","propsOnChange","rest","propagateChange","useMemo","handleChange","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","graph","height","extents","onCameraUpdate","cameraPosition","updateTimestamp","legend","onTitleChange","onLegendChange","CELL_HEIGHT_RANGE","CELL_WIDTH_RANGE","cellHeightScale","scaleLinear","domain","range","cellWidthScale","nodeSize","values","Array","from","nodeColor","colors","size","palette","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","previousNodeSize","previousNodeLabelVariable","previousLabelDensity","previousSearchString","previousFilters","previousColorPalette","previousFiltersModeAnd","previousDisplayAllLabels","nodeReducer","nodeLabel","nodeSizeFactor","nodeSizeScale","key","attr","renderedNode","x","y","evalIfNodeMatches","hidden","createNodeReducer","edgeReducer","el1","el2","renderedEdge","biggerNode","Color","lighten","rgb","string","createEdgeReducer","container","setRenderer","animate","needToRefresh","settings","actualLabelDensity","cellWidth","cellHeight","labelGrid","cell","displayedLabels","Set","highlightedNodes","forEachNode","attributes","displayedLabel","trim","highlightNode","unhighlightNode","toLowerCase","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","GraphContainerWithDimensions","props","dimensions","FooterNav","prevPage","nextPage","lang","useContext","messages","next","fr","en","prev","to","route","GraphAnnotation","Content","contentsURL","gexf","parse","Graph","computeFiltersOptions","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setColorPalette","setNodeSizeVariable","setNodeLabelVariable","setLabelDensity","setTitle","setLegend","setDisplayAllLabels","hasLoadedFirstVis","setHasLoadedFirstVis","focusedVisualizationId","setFocusedVisualizationId","registeredVisualizations","setRegisteredVisualizations","onVisualizationUpdate","ratio","newNodeColorVariable","newColorPalette","newTitle","newLegend","newDisplayAllLabels","thatId","sizes","sizeExtent","extent","Provider","onRegisterVisualization","onUnregisterVisualization","copyOfRegistered","visualizationParams","href","fallback","str","IceCreamControls","xVariable","reverseX","yVariable","reverseY","sizeVariable","colorVariable","labelVariable","labelsOnTheSide","colorScaleType","rotateMode","onToggleRotateMode","onXVariableChange","onYVariableChange","onColorVariableChange","onSizeVariableChange","onLabelVariableChange","onToggleLabelsOnTheSide","onToggleReverseX","onToggleReverseY","onColorScaleTypeChange","IceCreamContainer","inputColorPalette","zoomedIndex","setZoomedIndex","enableZoom","setEnableZoom","updateActive","found","smallestDimension","WIDTH","parseInt","Math","sqrt","HEIGHT","MIN_AREA","MAX_AREA","MARGIN","xRange","yRange","reverse","continuousColorScale","getX","getY","getSize","d","reduce","res","colorRange","highlightedIndex","datum","add","rotateTransform","rotate","translate","transf","transformGeometry","point1X","point1Y","point2X","point2Y","point3X","point3Y","point4X","point4Y","transform","points","fill","x1","y1","x2","y2","stroke","ticks","tick","textAnchor","onMouseEnter","onMouseLeave","radius","PI","xForXAxis","yForXAxis","xForYAxis","yForYAxis","labelX","labelY","pointerStartCoords","opacity","isMatching","has","isZoomed","strokeDasharray","cy","r","fontSize","IceCreamContainerWithDimensions","IceCreamAnnotation","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setLabelsOnTheSide","setColorScaleType","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatLabelsOnTheSide","thatColorScaleType","thatRotateMode","thatSearchString","thatColorPalette","theseFilters","theseFiltersModeAnd","thisTitle","thisLegend","LinearGraphControls","xLabelVariable","graphType","useRelativeScale","onToggleUseRelativeScale","onGraphTypeChange","onXLabelVariableChange","LinearGraphContainer","xLabelMap","dict","dataGroups","group","_id","ys","sum","filteredY","xValue","xMap","res2","transformedValue","xValues","yPropToFilter","xExtent","nice","uniqBy","item","filtersAffectingColor","colorValue","newValues","getYHisto","getColor","yDisplace","firstX","firstY","path","index2","LinearGraphContainerWithDimensions","LinearGraphAnnotation","setXLabelVariable","setGraphType","setUseRelativeScale","thatXLabelVariable","thatGraphType","thatUseRelativeScale","finalPalette","routes","contents","Component","LANGUAGES","App","history","useHistory","setLang","renderRoute","ThatComponent","process","onLangChange","ln","otherLang","pathOtherLang","location","pathname","routeItem","inputRoute","lazy","repository","Wrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","buildComponentCode","componentName","isArray","JSON","stringify","serializeValue","join","buildGraphCode","buildIceCreamScatterPlotCode","buildLinearGraphCode","args","computeTableOptions","computeGraphFiltersOptions","columns","uniq","isNaN","Number","isInteger","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","getAttribute","_node","cat","cartesianToPolar","distance","radians","atan2","degrees","radiansToDegrees","polarToCartesian","degreesToRadians","cos","sin","finalDegrees","newX","newY"],"mappings":"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","file":"static/js/main.af44683f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})\n\nexport const LanguageContext = React.createContext({\n\n})","var map = {\n\t\"./en/00_home.mdx\": [\n\t\t350,\n\t\t19\n\t],\n\t\"./en/01_couverture_media.mdx\": [\n\t\t351,\n\t\t3\n\t],\n\t\"./en/02_detectcritic.mdx\": [\n\t\t352,\n\t\t4\n\t],\n\t\"./en/03_graphclusters.mdx\": [\n\t\t353,\n\t\t5\n\t],\n\t\"./en/04_timelineclusters.mdx\": [\n\t\t354,\n\t\t6\n\t],\n\t\"./en/05_toporobotalgo.mdx\": [\n\t\t355,\n\t\t7\n\t],\n\t\"./en/06_explore_entities.mdx\": [\n\t\t356,\n\t\t8\n\t],\n\t\"./en/07_IssueVERB.mdx\": [\n\t\t357,\n\t\t9\n\t],\n\t\"./en/08_NERdate.mdx\": [\n\t\t358,\n\t\t10\n\t],\n\t\"./fr/00_home.mdx\": [\n\t\t359,\n\t\t20\n\t],\n\t\"./fr/01_couverture_media.mdx\": [\n\t\t360,\n\t\t11\n\t],\n\t\"./fr/02_detectcritic.mdx\": [\n\t\t361,\n\t\t12\n\t],\n\t\"./fr/03_graphclusters.mdx\": [\n\t\t362,\n\t\t13\n\t],\n\t\"./fr/04_timelineclusters.mdx\": [\n\t\t363,\n\t\t14\n\t],\n\t\"./fr/05_toporobotalgo.mdx\": [\n\t\t364,\n\t\t15\n\t],\n\t\"./fr/06_explore_entities.mdx\": [\n\t\t365,\n\t\t16\n\t],\n\t\"./fr/07_IssueVERB.mdx\": [\n\t\t366,\n\t\t17\n\t],\n\t\"./fr/08_NERdate.mdx\": [\n\t\t367,\n\t\t18\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 346;\nmodule.exports = webpackAsyncContext;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    if (url) {\n      axios.get(url, {\n        onDownloadProgress: progressEvent => {\n          const status = progressEvent.loaded / progressEvent.total;\n          setLoadingFraction(status);\n        }\n      })\n      .then(({data: inputData}) => {\n        setTimeout(() => {\n          let data = inputData;\n          if (url.split('.').pop() === 'csv') {\n            data = csvParse(inputData);\n          } else if (url.split('.').pop() === 'tsv') {\n            data = tsvParse(inputData);\n          }\n          setData(data);\n        })\n      })\n    }\n  }, [url]);\n\n  if (!url) {\n    return children();\n  }\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1 || !count) return SINGLE_COLOR_PALETTE;\n  else if (count === 2) {\n    return ['#D77186', '#61A2DA']\n  }\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND (intersection des filtres)' : 'OR (union des filtres)'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions\n                  .sort((a, b) => {\n                    if (a > b) {\n                      return 1;\n                    }\n                    return -1;\n                  })\n                  .map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type, localOptions}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    if (localOptions) {\n                      return localOptions;\n                    }\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","\nimport React, {useState, useEffect} from 'react';\nimport { SketchPicker } from 'react-color';\nimport debounce from 'lodash/debounce';\n\nconst ColorItemHandler = ({\n  modality,\n  onChange,\n  color\n}) => {\n  const [isEdited, setEdited] = useState(false);\n  const [editedColor, setEditedColor] = useState(color);\n  useEffect(() => {\n    setEditedColor(color)\n  }, [color]);\n  const debouncedOnChange = debounce(onChange, 300);\n  const handleChange = newColor => {\n    setEditedColor(newColor.hex);\n    debouncedOnChange(newColor.hex);\n  }\n  const handleClose = () => {\n    onChange(editedColor);\n    setEdited(false);\n  }\n  return (\n    <li>\n      <span onClick={() => setEdited(!isEdited)} className=\"legend-color\" style={{background: color}} />\n      <span className=\"legend-modality\">{modality}</span>\n      {\n        isEdited ?\n        <>\n          <div onClick={handleClose} className=\"color-picker-container\">\n            <div onClick={e => {e.stopPropagation()}}>\n              <h5>Choisir la couleur de la modalité \"{modality}\"</h5>\n              <SketchPicker onChange={handleChange} color={editedColor} />\n            </div>\n          </div>\n        </>\n        : null\n      }\n    </li>\n  )\n}\n\nexport default function ColorLegend ({\n  colorPalette,\n  onChange,\n}) {\n  if (!colorPalette) {\n    return null;\n  }\n  return (\n    <div className=\"ColorLegend\" >\n      <h6>Légende</h6>\n      <ul>\n        {\n          Object.entries(colorPalette)\n          .map(([modality, color]) => {\n            const handleChange = newColor => {\n              onChange({\n                ...colorPalette,\n                [modality] : newColor\n              })\n            }\n            return (\n              <ColorItemHandler onChange={handleChange} key={modality} {...{modality, color}} />\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","import React, {useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport Slider from 'rc-slider';\nimport debounce from 'lodash/debounce';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nconst SLIDER_MARKS = {\n  '0.25': 'défaut'\n};\n\nfunction DebouncedSlider({defaultValue, onChange}) {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue])\n\n  const onSliderChange = newValue => {\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return (\n    <Slider\n      min={0}\n      max={1}\n      step={0.01}\n      defaultValue={defaultValue}\n      value={value}\n      onChange={onSliderChange}\n      marks={SLIDER_MARKS}\n    />\n  );\n}\n\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n  labelDensity,\n  displayAllLabels,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  nodeLabelVariable,\n\n  filtersOptions,\n  filters = [],\n  colorPalette,\n\n  onFiltersChange,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n  onDisplayAllLabelsChange,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n          <form onSubmit={e => e.preventDefault()}>\n            <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n          </form>\n        </li>\n        \n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Label des noeuds',\n                    value: nodeLabelVariable,\n                    onChange: onNodeLabelVariableChange,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Afficher tous les labels',\n                    onChange: () => onDisplayAllLabelsChange(!displayAllLabels),\n                    localOptions: [[\n                      false,\n                      {title: 'non'}\n                    ], [\n                      true,\n                      {title: 'oui'}\n                    ]],\n                    value: displayAllLabels,\n                    type: 'boolean'\n                  },\n                ],\n              }\n            }\n          />\n        </li>\n        \n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n        <li className=\"vis-controls-item slider-wrapper\">\n          <form onSubmit={e => e.preventDefault()}>\n            <h5>Densité des labels</h5>\n            <div className=\"slider-container\">\n                <DebouncedSlider\n                  defaultValue={labelDensity}\n                  onChange={debounce(onLabelDensityChange, 300)}\n                />\n              </div>\n          </form>\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n          }\n      </ul>\n    </>\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd,\n  colorPalette,\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else if (colorPalette) {\n      renderedNode.color = colorPalette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // Label\n    if (!nodeLabel) {\n      renderedNode.label = attr.label || key;\n    } else {\n      renderedNode.label = nodeLabel === 'default' ? attr.label || key : attr[nodeLabel] || '';\n    }\n    // renderedNode.label = renderedNode.label === '' ? 'coucou': renderedNode.label;\n\n    // // hidden\n    if (filters.length && evalIfNodeMatches(attr, filters, filtersModeAnd) === false) {\n      renderedNode.hidden = true;\n      renderedNode.label = '';\n    } else {\n      renderedNode.hidden = false;\n    }\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  // nodeLabel,\n  // nodeSizeFactor = 1,\n  // extents,\n  // filters = [],\n  // filtersModeAnd,\n  edgesMap,\n  colorPalette,\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const biggerNode = sourceNodeSize > targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (biggerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = biggerNode.color || DEFAULT_NODE_COLOR;\n      } else if (colorPalette) {\n        renderedEdge.color = colorPalette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }  else {\n        renderedEdge.color =\n          nodeColor.palette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import DebouncedInput from './DebouncedInput';\n\nexport default DebouncedInput;","\n\nimport debounce from 'lodash/debounce';\nimport {useState, useEffect, useMemo} from 'react';\nimport Textarea from 'react-textarea-autosize';\n\nexport default function DebouncedInput({\n  value: propsValue,\n  onChange: propsOnChange,\n  type = 'input',\n  ...rest\n}) {\n  const [value, setValue] = useState(propsValue);\n\n  useEffect(() => {\n    setValue(propsValue);\n  }, [propsValue]);\n\n  const propagateChange = useMemo(() => debounce(propsOnChange, 300), [propsOnChange]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    propagateChange(e.target.value);\n  }\n  if (type === 'input') {\n    return (\n      <input\n        value={value}\n        onChange={handleChange}\n        {...rest}\n      />\n    );\n  }\n  return (\n    <Textarea\n      value={value}\n      onChange={handleChange}\n      {...rest}\n    />\n  );\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer, createEdgeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\nimport Input from '../DebouncedInput';\n\nimport './GraphContainer.css';\nimport { evalIfNodeMatches } from '../../helpers/misc';\n\n\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nfunction GraphContainer({\n  graph,\n  width,\n  height,\n  // nodeColor,\n  // nodeSize,\n  labelDensity,\n  displayAllLabels,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n  title,\n  legend,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  colorPalette,\n  nodeLabelVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n  onTitleChange,\n  onLegendChange,\n  onDisplayAllLabelsChange,\n}) {\n  const CELL_HEIGHT_RANGE = [height / 5, 1];\n  const CELL_WIDTH_RANGE = [width / 5, 1];\n\n  // const CELL_HEIGHT_RANGE = [200, 10];\n  // const CELL_WIDTH_RANGE = [300, 30];\n\n  const cellHeightScale = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\n  const cellWidthScale = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n      m.set(edge, {sourceNode: sourceAttributes, targetNode: targetAttributes})\n    });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabelVariable = usePrevious(nodeLabelVariable);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n  const previousColorPalette = usePrevious(colorPalette);\n  const previousFiltersModeAnd = usePrevious(filtersModeAnd);\n  const previousDisplayAllLabels = usePrevious(displayAllLabels);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel: nodeLabelVariable,\n    extents,\n    filters,\n    filtersModeAnd,\n    colorPalette,\n  });\n  \n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    colorPalette,\n    // nodeSize,\n    // nodeLabel,\n    // extents,\n    filters,\n    filtersModeAnd,\n    edgesMap,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      previousNodeLabelVariable !== nodeLabelVariable ||\n      previousColorPalette !== colorPalette ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters ||\n      previousFiltersModeAnd !== filtersModeAnd\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      let actualLabelDensity = labelDensity > 1 ? 1 : labelDensity;\n      const cellWidth = cellWidthScale(actualLabelDensity);\n      const cellHeight = cellHeightScale(actualLabelDensity);\n      renderer.settings.labelGrid.cell = {\n        width: cellWidth,\n        height: cellHeight\n      };\n\n      // TODO from nansi: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    // workaround for clusters titles display\n    // @todo replace this with a cleaner solution at some point\n    if ((\n      previousDisplayAllLabels !== displayAllLabels || !previousDisplayAllLabels || renderer.displayedLabels.size === 0\n      || previousNodeLabelVariable !== nodeLabelVariable || previousFilters !== filters\n      ) && displayAllLabels) {\n      graph.forEachNode((id, attributes) => {\n        const {label} = attributes;\n        \n        const displayedLabel = nodeLabelVariable && nodeLabelVariable !== 'default' ? attributes[nodeLabelVariable] : label;\n        if (evalIfNodeMatches(attributes, filters, filtersModeAnd) && displayedLabel && displayedLabel.trim().length > 0) {\n          renderer.highlightNode(id)\n        } else {\n          renderer.unhighlightNode(id);\n        }\n      })\n      needToRefresh = true;\n    } else if (previousDisplayAllLabels !== displayAllLabels && !displayAllLabels) {\n      renderer.highlightedNodes = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n      needToRefresh = true;\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer, edgeReducer});\n        let actualLabelDensity = labelDensity > 1 ? 1 : labelDensity;\n        const cellWidth = cellWidthScale(actualLabelDensity);\n        const cellHeight = cellHeightScale(actualLabelDensity);\n        newRenderer.settings.labelGrid.cell = {\n          width: cellWidth,\n          height: cellHeight\n        };\n        newRenderer.displayedLabels = new Set();\n        newRenderer.refresh();\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n  return (\n    <>\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <>\n          <GraphControls\n            rescale={rescale.bind(null, renderer)}\n            zoomIn={zoomIn.bind(null, renderer)}\n            zoomOut={zoomOut.bind(null, renderer)}\n            {\n              ...{\n                searchString,\n                onSearchStringChange,\n                filtersModeAnd,\n                onToggleFiltersModeAnd,\n                filtersOptions,\n                filters,\n                onFiltersChange,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                labelDensity,\n                displayAllLabels,\n                onNodeSizeVariableChange,\n                onNodeColorVariableChange,\n                onNodeLabelVariableChange,\n                onColorPaletteChange,\n                onLabelDensityChange,\n                onDisplayAllLabelsChange,\n                colorPalette: colorPalette,\n              }\n            }\n          />\n          <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                type=\"textarea\"\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n              />\n            </div>\n          </form>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default function GraphContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <GraphContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport {LanguageContext} from '../../contexts';\nimport cx from 'classnames';\n\nconst FooterNav = ({\n  prevPage,\n  nextPage\n}) => {\n  const {\n    lang\n  } = useContext(LanguageContext);\n  const messages = {\n    next: {\n      fr: 'Page suivante',\n      en: 'Next page'\n    },\n    prev: {\n      fr: 'Page précédente',\n      en: 'Previous page'\n    }\n  }\n  return (\n    <footer className={cx(\"FooterNav\", {'start-page': !prevPage})}>\n      <ul>\n        {\n          prevPage ?\n            <li className=\"previous-page\">\n              <h5>\n                <Link to={prevPage.route[lang]}>\n                  <div className=\"marker\">{'<'}</div>\n                  <div className=\"page-content\">\n                    <div className=\"page-label\"><i>{messages.prev[lang]}</i></div>\n                    <div>\n                        {prevPage.title[lang]}\n                    </div>\n                  </div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n        {\n          nextPage ?\n            <li className=\"next-page\">\n              <h5>\n                <Link to={nextPage.route[lang]}>\n                  <div>\n                    <div className=\"page-label\"><i>{messages.next[lang]}</i></div>\n                    <div className=\"page-content\">\n                        {nextPage.title[lang]}\n                    </div>\n                  </div>\n                  <div className=\"marker\">{'>'}</div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n      </ul>\n    </footer>\n  )\n}\n\nexport default FooterNav;","import FooterNav from './FooterNav';\n\nexport default FooterNav;","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect, Suspense} from 'react';\nimport {extent} from 'd3-array';\nimport {generatePalette} from '../../helpers/palettes';\n\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from './GraphContainer';\nimport FooterNav from '../FooterNav';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst DEFAULT_LABEL_DENSITY = 0.25;\n\nconst GraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, data), [graph, data]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n  const [nodeLabelVariable, setNodeLabelVariable] = useState(undefined);\n  const [labelDensity, setLabelDensity] = useState(DEFAULT_LABEL_DENSITY);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n  const [displayAllLabels, setDisplayAllLabels] = useState(false);\n  const [hasLoadedFirstVis, setHasLoadedFirstVis] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable: newNodeColorVariable,\n    nodeSizeVariable,\n    nodeLabelVariable,\n    labelDensity,\n    colorPalette: newColorPalette,\n    title: newTitle,\n    legend: newLegend,\n    displayAllLabels: newDisplayAllLabels\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(newNodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n    setNodeLabelVariable(nodeLabelVariable);\n    setDisplayAllLabels(newDisplayAllLabels);\n    setTitle(newTitle);\n    setLegend(newLegend);\n    if (newColorPalette && (nodeColorVariable === newNodeColorVariable || !nodeColorVariable)) {\n      setColorPalette(newColorPalette);\n    } else {\n      const colors = generatePalette(newNodeColorVariable, filtersOptions[newNodeColorVariable].options.size);\n      const palette = {};\n      let i = 0;\n      filtersOptions[newNodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(palette);\n    }\n    setLabelDensity(labelDensity === undefined ? DEFAULT_LABEL_DENSITY : labelDensity);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId );\n      onVisualizationUpdate(registeredVisualizations[thatId]);\n      setHasLoadedFirstVis(true);\n    }\n  }, [registeredVisualizations, focusedVisualizationId]);/* eslint react-hooks/exhaustive-deps : 0 */\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  \n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        displayAllLabels,\n        nodeSizeVariable,\n        nodeColorVariable,\n        nodeLabelVariable,\n        filtersModeAnd,\n        labelDensity,\n        colorPalette,\n        title,\n        legend,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      {hasLoadedFirstVis &&\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                filtersModeAnd,\n                labelDensity,\n                displayAllLabels,\n                title,\n                legend,\n\n                colorPalette,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onLabelDensityChange: val => setLabelDensity(val),\n                onDisplayAllLabelsChange: val => setDisplayAllLabels(val),\n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n                onNodeLabelVariableChange: (val) => setNodeLabelVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n      }\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\nimport FiltersEditor from '../FiltersEditor';\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide,\n  colorScaleType,\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n\n  rotateMode,\n  searchString,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleLabelsOnTheSide,\n  onColorPaletteChange,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  onColorScaleTypeChange,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les y',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Type d\\'échelle pour la couleur',\n                    onChange: onColorScaleTypeChange,\n                    localOptions: [[\n                      'discrete',\n                      {title: 'discrète'}\n                    ], [\n                      'continuous',\n                      {title: 'continue'}\n                    ]],\n                    value: colorScaleType,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Afficher les labels sur le côté',\n                    onChange: onToggleLabelsOnTheSide,\n                    value: labelsOnTheSide,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        <li className=\"vis-controls-item\">\n          <FiltersEditor\n            {\n              ...{\n                onToggleFiltersModeAnd,\n                filtersModeAnd,\n                filtersOptions,\n                onFiltersChange,\n                filters\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React, {useState, useEffect} from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {min, extent} from 'd3-array';\nimport cx from 'classnames';\n\nimport IceCreamControls from './IceCreamControls';\nimport {generatePalette} from '../../helpers/palettes';\nimport Input from '../DebouncedInput';\n\nimport './IceCreamContainer.css';\nimport { evalIfNodeMatches, transformGeometry } from '../../helpers/misc';\n\nconst GIF_TIME = 500;\n\nfunction IceCreamContainer({\n\n  width, \n  height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide = true,\n  colorPalette: inputColorPalette,\n  colorScaleType,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  filtersOptions = {},\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n  title,\n  legend,\n\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  onToggleLabelsOnTheSide,\n  onColorPaletteChange,\n  onColorScaleTypeChange,\n  onTitleChange,\n  onLegendChange,\n}) {\n\n  const [zoomedIndex, setZoomedIndex] = useState(null);\n  const [enableZoom, setEnableZoom] = useState(true);\n\n  const updateActive = () => {\n    if (filters && filters.length) {\n      const existing = zoomedIndex === null ? -1 : zoomedIndex;\n      let found = false;\n      for (let i = existing + 1 ; i < data.length ; i++) {\n        if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n          setZoomedIndex(i);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        for (let i = 0 ; i < data.length ; i++) {\n          if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n            setZoomedIndex(i);\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (filters && filters.length) {\n      if (zoomedIndex === null) {\n        updateActive();\n      }\n      setTimeout(updateActive, GIF_TIME);\n    } else {\n      setZoomedIndex(null);\n    }\n  /* eslint react-hooks/exhaustive-deps : 0 */\n  }, [\n    filters,\n    filtersModeAnd,\n    data,\n    zoomedIndex\n  ])\n \n  const smallestDimension = min([width, height]);\n  // in rotate mode width indexed on the hypothenuse\n  const WIDTH = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n  const HEIGHT = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n\n  const MIN_AREA = smallestDimension / 50;\n  const MAX_AREA = smallestDimension / 2;\n  const MARGIN = WIDTH / 15;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN * 2];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain([0, 1]) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain([0, 1]) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ?  scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_AREA, MAX_AREA]) : () => 0;\n\n  // manage palette\n  let colorPalette;\n  if (inputColorPalette) {\n    colorPalette = inputColorPalette;\n  }\n  else if (colorVariable && colorVariable !== 'default' && filtersOptions[colorVariable]) {\n    const palette = generatePalette(colorVariable, filtersOptions[colorVariable].options.length);\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n  }\n  let continuousColorScale;\n  if (colorScaleType === 'continuous') {\n    let colorRange = ['#D77186', '#61A2DA'];\n    if (colorPalette && colorPalette['from'] && colorPalette['to']) {\n      colorRange = [colorPalette['from'], colorPalette['to']]\n    } else {\n      colorPalette = {\n        from: '#D77186',\n        to: '#61A2DA'\n      }\n    }\n    continuousColorScale = scaleLinear().domain(extent(data.map(d => +d[colorVariable]))).range(colorRange)\n  }\n  let getColor = (val) => {\n    if (colorScaleType === 'continuous') {\n      return continuousColorScale(+val);\n    } else return colorPalette ? colorPalette[val] : 'grey';\n  }\n\n  // handling search\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  let rotateTransform = {rotate: 0};\n  if (rotateMode) {\n    rotateTransform = {\n      rotate: -45,\n      translate: {x: 0, y: smallestDimension/2}\n    }\n  }\n  // wrapping function for transforms\n  const transf = (x, y) => transformGeometry({x, y}, rotateTransform)\n  // dimensions of control background rect\n  const {x: point1X, y: point1Y} = transformGeometry({\n    x: 0,\n    y: 0\n  }, rotateTransform)\n  const {x: point2X, y: point2Y} = transformGeometry({\n    x: WIDTH,\n    y: 0\n  }, rotateTransform)\n  const {x: point3X, y: point3Y} = transformGeometry({\n    x: WIDTH,\n    y: HEIGHT\n  }, rotateTransform)\n  const {x: point4X, y: point4Y} = transformGeometry({\n    x: 0,\n    y: HEIGHT\n  }, rotateTransform)\n  \n  return (\n    <>\n        <svg \n          className={cx(\"scatterplot\", {'zoom-mode': zoomedIndex !== null && enableZoom})}\n          width={smallestDimension} \n          height={smallestDimension}\n          transform={`translate(${(width - smallestDimension) / 2}, 0)`}\n        >\n          <polygon \n            points={`${point1X},${point1Y} ${point2X},${point2Y} ${point3X},${point3Y} ${point4X},${point4Y}`} \n            width={WIDTH} \n            height={HEIGHT} \n            fill=\"white\" \n          />\n          <g transform={`translate(${rotateMode ? 0 : MARGIN / 2}, ${rotateMode ? -MARGIN : 0})${rotateMode ? 'scale(1.05)' : ''}`}>\n            <g className=\"axis axis-left\">\n              <line \n                x1={transf(MARGIN, MARGIN).x}\n                y1={transf(MARGIN, MARGIN).y}\n                x2={transf(MARGIN, HEIGHT - MARGIN * 2).x}\n                y2={transf(MARGIN, HEIGHT - MARGIN * 2).y}\n                stroke={'black'} \n              />\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n   \n                  const {x, y} = transf(MARGIN, getY(tick))\n                  const {x: x1, y: y1} = transf(MARGIN/4, getY(tick) + MARGIN/6)\n                  const {x: x2, y: y2} = transf(MARGIN/2, getY(tick))\n                  return (\n                    <g key={tick}>\n                      <text textAnchor=\"end\" x={x1} y={y1}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={x}\n                        y1={y}\n                        x2={x2}\n                        y2={y2}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH/2 - MARGIN * 1.5}, ${HEIGHT + MARGIN * 2.5})rotate(45)` : `translate(0, ${MARGIN / 2 - 2})`}\n              >\n                <text \n                  className=\"axis-variable-name\" \n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {yVariable}\n                </text>\n              </g>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line \n                x1={transf(MARGIN, HEIGHT - MARGIN * 2).x} \n                y1={transf(MARGIN, HEIGHT - MARGIN * 2).y} \n                x2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).x} \n                y2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).y} \n                stroke={'black'} \n              />\n              {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const {x, y} = transf(getX(tick), HEIGHT - MARGIN * 2);\n                  const {x: x1, y: y1} = transf(getX(tick), HEIGHT - MARGIN * 1.66);\n                  const {x: x2, y: y2} = transf(getX(tick), HEIGHT - MARGIN * 1.25);\n                  return (\n                    <g key={tick}>\n                      <text textAnchor=\"center\" x={x2} y={y2}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={x}\n                        y1={y}\n                        x2={x1}\n                        y2={y1}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH}, ${HEIGHT + MARGIN * 1.5})rotate(-45)` : `translate(${WIDTH - MARGIN * 1.5}, ${HEIGHT - MARGIN / 3 - 2})`}\n              >\n                <text \n                  className=\"axis-variable-name\" \n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {xVariable}\n                </text>\n              </g>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n                \n                  getY.ticks &&\n                  getY.ticks()\n                  .map(tick => (\n                    <line \n                      key={tick}\n                      x1={transf(MARGIN, getY(tick)).x}\n                      y1={transf(MARGIN, getY(tick)).y}\n                      x2={transf(WIDTH - MARGIN * 2, getY(tick)).x}\n                      y2={transf(WIDTH - MARGIN * 2, getY(tick)).y}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n                \n                getX.ticks &&\n                getX.ticks()\n                .map(tick => (\n                  <line \n                    key={tick}\n                    x1={transf(getX(tick), MARGIN).x}\n                    y1={transf(getX(tick), MARGIN).y}\n                    x2={transf(getX(tick), WIDTH - MARGIN * 2).x}\n                    y2={transf(getX(tick), WIDTH - MARGIN * 2).y}\n                    stroke=\"lightgrey\"\n                  />\n                ))\n            }\n            </g>\n            <g \n              className=\"plot-objects-container\"\n              onMouseEnter={() => setEnableZoom(false)}\n              onMouseLeave={() => setEnableZoom(true)}\n            >\n            {\n              data\n              .sort((a, b) => {\n                if (getY(a[yVariable]) > getY(b[yVariable])) {\n                  return 1;\n                }\n                return -1;\n              })\n              .map((datum, index) => {\n                const radius = Math.sqrt(getSize(datum[sizeVariable]) / Math.PI);\n                let {x, y} = transf(getX(datum[xVariable]), getY(datum[yVariable]));\n\n                let {x: xForXAxis, y: yForXAxis} = transf(getX(datum[xVariable]), getY.range ? getY.range()[0] : 0);\n                let {x: xForYAxis, y: yForYAxis} = transf(getX.range ? getX.range()[0] : 0, getY(datum[yVariable]));\n                let labelX =  x + radius + smallestDimension / 100;\n                let labelY = rotateMode ? y - smallestDimension / 200 : y + smallestDimension / 200;\n                let pointerStartCoords = transf(getX(datum[xVariable]) + radius, getY(datum[yVariable]));\n                if (labelsOnTheSide) {\n                  let {x: newX, y: newY} = transf( WIDTH - MARGIN * 1.7, MARGIN + index * (HEIGHT - MARGIN * 3) / data.length);\n                  labelX = newX;\n                  labelY = newY;\n                }\n\n                let opacity =  1;\n                const isMatching = !filters.length || evalIfNodeMatches(datum, filters, filtersModeAnd);\n                if (filters.length) {\n                  if (isMatching && (!highlightedIndex || highlightedIndex.has(index))) {\n                    opacity = 1;\n                  } else {\n                    opacity = .05;\n                  }\n                } else if (highlightedIndex && !highlightedIndex.has(index)) {\n                  opacity = .2;\n                }\n\n                const isZoomed = index === zoomedIndex && enableZoom === true;\n           \n                return (\n                  <g \n                    key={index} \n                    className={cx(\"plot-object\", {'is-matching': isMatching, 'is-zoomed': isZoomed})}\n                    opacity={opacity}\n                  >\n                    <line\n                      className=\"axis-line\"\n                      stroke=\"grey\"\n                      strokeDasharray='1,1'\n                      x1={x}\n                      y1={y}\n                      x2={xForYAxis}\n                      y2={yForYAxis}\n                    />\n                    <line\n                      className=\"axis-line\"\n                      stroke=\"grey\"\n                      strokeDasharray='1,1'\n                      x1={x}\n                      y1={y}\n                      x2={xForXAxis}\n                      y2={yForXAxis}\n                    />\n                    <circle \n                      cx={x}\n                      cy={y}\n                      r={radius} \n                      fill={getColor(datum[colorVariable])} \n                      opacity={.8}\n                    />\n                    {\n                      labelsOnTheSide ?\n                      <line\n                        x1={pointerStartCoords.x}\n                        y1={pointerStartCoords.y}\n                        x2={labelX}\n                        y2={labelY}\n                        stroke=\"lightgrey\"\n                        strokeDasharray='4,4'\n                      />\n                      : null\n                    }\n                    <g \n                      transform={`translate(${labelX}, ${labelY})`}\n                    >\n                      <text\n                        transform={rotateMode ? 'rotate(-45)': ''}\n                        style={{\n                          fontSize: rotateMode && labelsOnTheSide ? HEIGHT / 70 : undefined\n                        }}\n                      >\n                        {datum[labelVariable]}\n                      </text>\n                    </g>\n                  </g>\n                )\n              })\n            }\n            </g>\n          </g>\n        </svg>\n        <IceCreamControls\n          {\n            ...{\n              xVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n              labelsOnTheSide,\n\n              rotateMode,\n              searchString,\n              colorScaleType,\n\n              onSearchStringChange,\n              onToggleRotateMode,\n              \n              onXVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleLabelsOnTheSide,\n              onToggleReverseX,\n              onToggleReverseY,\n              onColorPaletteChange,\n              onColorScaleTypeChange,\n\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              onFiltersChange,\n              filters,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n        <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n                type=\"textarea\"\n              />\n            </div>\n          </form>\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <IceCreamContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\nimport { generatePalette } from '../../helpers/palettes';\n\nimport IceCreamVis from './IceCreamContainer';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n  const [labelsOnTheSide, setLabelsOnTheSide] = useState(false);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [colorScaleType, setColorScaleType] = useState(undefined);\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n  const [filters, setFilters] = useState([]);\n\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n    labelsOnTheSide: thatLabelsOnTheSide,\n    colorScaleType: thatColorScaleType,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n    colorPalette: thatColorPalette,\n    filters: theseFilters = [],\n    filtersModeAnd: theseFiltersModeAnd,\n    title: thisTitle,\n    legend: thisLegend,\n  }) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setColorScaleType(thatColorScaleType);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n    setLabelsOnTheSide(thatLabelsOnTheSide);\n    setFilters(theseFilters);\n    setFiltersModeAnd(theseFiltersModeAnd);\n    setTitle(thisTitle);\n    setLegend(thisLegend);\n    if (thatColorPalette && colorVariable === thatColorVariable) {\n      setColorPalette(thatColorPalette);\n    } else if (thatColorVariable || colorScaleType !== thatColorScaleType) {\n      let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n      if (palette) {\n        const colors = generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.size);\n        // const palette = {};\n        let i = 0;\n        filtersOptions[thatColorVariable].options.forEach(option => {\n          palette[option] = colors[i];\n          i++;\n        });\n      } else {\n        setColorPalette(undefined);\n      }\n      \n      setColorPalette(palette);\n    } else if (colorPalette) {\n      setColorPalette(undefined);\n    }\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId);\n      onVisualizationUpdate(registeredVisualizations[thatId]);\n    }\n  }, [registeredVisualizations, focusedVisualizationId])/* eslint react-hooks/exhaustive-deps : 0 */\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n        labelsOnTheSide,\n\n        rotateMode,\n        searchString,\n        colorPalette,\n        colorScaleType,\n\n        filters,\n        filtersModeAnd,\n\n        title,\n        legend,\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <IceCreamVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                labelsOnTheSide,\n                colorPalette,\n                colorScaleType,\n\n                rotateMode,\n                searchString,\n\n                filtersModeAnd,\n                filters,\n                title,\n                legend,\n\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onSearchStringChange,\n                onToggleRotateMode: () => setRotateMode(!rotateMode),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onSizeVariableChange: (val) => setSizeVariable(val),\n                onLabelVariableChange: (val) => setLabelVariable(val),\n                onToggleLabelsOnTheSide: val => setLabelsOnTheSide(val),\n                onColorPaletteChange: val => setColorPalette(val),\n                onColorScaleTypeChange: val => setColorScaleType(val),\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import IceCreamAnnotation from './IceCreamAnnotation';\n\nexport default IceCreamAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\nimport FiltersEditor from '../FiltersEditor';\n\n\n\nexport default function LinearGraphControls({\n  xVariable,\n  xLabelVariable,\n  // reverseX,\n  graphType,\n  yVariable,\n  // reverseY,\n\n  colorVariable,\n  // searchString,\n  useRelativeScale,\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n\n  // onSearchStringChange,\n  onToggleUseRelativeScale,\n  onGraphTypeChange,\n  \n  onXVariableChange,\n  onXLabelVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n\n  onColorPaletteChange,\n\n  // onToggleReverseX,\n  // onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  // const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls\", {'is-minified': isMinified})}>\n        \n        {/* <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li> */}\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'Type de graphe',\n                    onChange: onGraphTypeChange,\n                    localOptions: [[\n                      'linegraph',\n                      {title: 'lignes'}\n                    ], [\n                      'histogram',\n                      {title: 'histogramme'}\n                    ]],\n                    value: graphType,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Variable des X',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Label des X',\n                    onChange: onXLabelVariableChange,\n                    value: xLabelVariable,\n                    type: 'string'\n                  },\n                  // {\n                  //   title: 'Inverser les x',\n                  //   onChange: onToggleReverseX,\n                  //   value: reverseX,\n                  //   type: 'boolean'\n                  // },\n                  {\n                    title: 'Label des Y',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  // {\n                  //   title: 'Inverser les y',\n                  //   onChange: onToggleReverseY,\n                  //   value: reverseY,\n                  //   type: 'boolean'\n                  // },\n                  {\n                    title: 'Utiliser une échelle relative pour les Y quand filtré',\n                    onChange: onToggleUseRelativeScale,\n                    value: useRelativeScale,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  // {\n                  //   title: 'Labels des points',\n                  //   onChange: onLabelVariableChange,\n                  //   value: labelVariable,\n                  //   type: 'string'\n                  // },\n                ],\n              }\n            }\n          />\n        </li>\n        <li className=\"vis-controls-item\">\n          <FiltersEditor\n            {\n              ...{\n                onToggleFiltersModeAnd,\n                filtersModeAnd,\n                filtersOptions,\n                onFiltersChange,\n                filters\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React, {useMemo} from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {extent, group} from 'd3-array';\nimport Input from '../DebouncedInput';\n\n\nimport LinearGraphControls from './LinearGraphControls';\nimport {generatePalette} from '../../helpers/palettes';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\nimport './LinearGraphContainer.css';\nimport { max, uniqBy } from 'lodash';\n\nfunction LinearGraphContainer({\n\n  width, \n  height,\n  data,\n\n  xVariable,\n  xLabelVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  colorPalette: inputColorPalette,\n\n  title,\n  legend,\n\n  searchString = '',\n\n  graphType = 'linegraph',\n  useRelativeScale,\n\n  onSearchStringChange,\n  filtersOptions = {},\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n\n  \n  onXVariableChange,\n  onXLabelVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  onColorPaletteChange,\n  onGraphTypeChange,\n  onToggleUseRelativeScale,\n\n  onTitleChange,\n  onLegendChange,\n}) {\n \n  // const smallestDimension = min([width, height])\n  const WIDTH = width;\n  const HEIGHT = height;\n\n  // set scales dimensions and scale\n  const MARGIN = WIDTH / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN / 2];\n  let yRange = [HEIGHT - MARGIN, MARGIN];\n\n\n  const xLabelMap = useMemo(() => {\n    return data.reduce((dict, datum) => {\n      const labelVariable = xLabelVariable === 'default' ? xVariable : xLabelVariable;\n      return {\n        ...dict,\n        [datum[xVariable]]: datum[labelVariable]\n      }\n    }, {})\n\n  }, [data, xVariable, xLabelVariable])\n  \n  // build visualization groups\n  let dataGroups = [[undefined, data]]\n  if (colorVariable) {\n    dataGroups = Array.from(group(data, d => d[colorVariable]));\n  } \n\n  // reduce items\n  dataGroups = dataGroups.map(([_id, values]) => {\n    const xGroups = Array.from(group(values, d => d[xVariable])).map(([x, ys]) => {\n      return {\n        x: +x, \n        // aggregate ys\n        y: ys.reduce((sum, y) => sum + (+y[yVariable]), 0),\n        filteredY: ys.filter(d => filters.length ? evalIfNodeMatches(d, filters, filtersModeAnd) : true).reduce((sum, y) => sum + (+y[yVariable]), 0),\n        xValue: x\n      }\n    })\n    return [_id, xGroups]\n  });\n \n  // refactorize by x for stacked barchart\n  if (graphType === 'histogram') {\n    const xMap = dataGroups.reduce((res, [color, values]) => {\n      return values.reduce((res2, value) => {\n        const x = value.x;\n        const transformedValue = {...value, color};\n        return {\n          ...res2,\n          [x]: res2[x] ? [...res2[x], transformedValue] : [transformedValue]\n        }\n      }, res)\n    }, {})\n    // turn datagroup to an array of [x, list of related objects]\n    dataGroups = Object.entries(xMap);\n  }\n  let getX, getY;\n  const yPropToFilter = useRelativeScale ? 'filteredY' : 'y';\n  let xValues;\n  if (graphType === 'linegraph') {\n    // handling relative or global filter\n    const xExtent = extent(dataGroups.reduce((res, [_id, values]) => [...res, ...values.map(v => v.x)] , []));\n    getX = scaleLinear().range(xRange).domain(xExtent);\n    getY = scaleLinear().range(yRange).domain([0, max(dataGroups.map(([_id, values]) => max(values.map(v => v[yPropToFilter]))))]).nice();\n  } else if (graphType === 'histogram') {\n    const xExtent = extent(dataGroups.map(([x]) => +x));\n    getX = scaleLinear().range(xRange).domain(xExtent);\n    xValues = uniqBy(dataGroups, d => d[0])\n    // y scale domain is the biggest sum for each x modality\n    getY = scaleLinear().range(yRange).domain([0, max(dataGroups.map(([_x, list]) => list.reduce((sum, item) => sum + item[yPropToFilter] , 0)))]).nice();\n  }\n\n   // apply filter\n   if (filters.length && colorVariable) {\n    const filtersAffectingColor = filters.filter(f => f.attribute === colorVariable);\n    if (graphType === 'linegraph') {\n      dataGroups = dataGroups.filter(([colorValue, values]) => {\n        if (filtersAffectingColor) {\n          if (filtersModeAnd) {\n            const oneFilterDoesNotMatches = filtersAffectingColor.find(({ attribute, value }) => colorValue !== '' + value) !== undefined;\n            return !oneFilterDoesNotMatches;\n          } else {\n            const oneFilterMatches = filtersAffectingColor.find(({ attribute, value }) => colorValue === '' + value) !== undefined;\n            return oneFilterMatches;\n          }\n        } else {\n          return true;\n        }\n      })\n     } else if (graphType === 'histogram') {\n       // filtering groups\n      dataGroups = dataGroups.reduce((res, [xValue, values]) => {\n        if (filtersAffectingColor) {\n          const newValues = values.filter(value => {\n            if (filtersModeAnd) {\n              const oneFilterDoesNotMatches = filtersAffectingColor.find(({ attribute, value }) => value.color !== '' + value) !== undefined;\n              return !oneFilterDoesNotMatches;\n            } else {\n              const oneFilterMatches = filtersAffectingColor.find(({ attribute, value }) => value.color === '' + value) !== undefined;\n              return oneFilterMatches;\n            }\n          })\n          if (newValues.length) {\n            return [...res, [xValue, newValues]]\n          // all items filtered out -> do not include the group\n          } else return res;\n        // no filters, return as is\n        } else {\n          return [...res, [xValue, values]];\n        }\n      }, [])\n     }\n    \n  }\n    \n  \n  // manage palette\n  let colorPalette;\n  if (inputColorPalette) {\n    colorPalette = inputColorPalette;\n  }\n  else if (colorVariable && colorVariable !== 'default') {\n    const palette = generatePalette(colorVariable, filtersOptions[colorVariable].options.length);\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n  }\n  let getColor = (val) => {\n    return colorPalette ? colorPalette[val] : 'grey';\n  }\n\n  // handling search\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n  let getYHisto\n  // preparing histogram stacking\n  if (graphType === 'histogram') {\n    dataGroups = dataGroups.map(([xValue, values]) => {\n      // let sum = 0;\n      const newValues = values\n      .sort((a, b) => {\n        if (a.color > b.color) {\n          return 1;\n        } else return -1;\n      })\n      .reduce((total, value, index) => {\n        const prev = index > 0 ? total[index - 1] : undefined;\n        const yDisplace = prev ? +prev.y + (prev.yDisplace || 0) : 0;\n\n        const newValue = {\n          ...value,\n          yDisplace,\n          y: +value.y,\n          x: +value.x\n        }\n        return [...total, newValue]\n      }, [])\n\n      return [xValue, newValues];\n    }, []);\n\n    dataGroups = dataGroups.sort((a, b) => {\n      if (+a[0] > +b[0]) {\n        return 1;\n      }\n      return -1;\n    });\n    getYHisto = scaleLinear()\n    .range([MARGIN, HEIGHT - MARGIN * 2])\n    .domain([0, max(dataGroups.map(([_xValue, values]) => values.reduce((sum, v) => sum + v.y, 0)))]).nice()\n    getY\n    .domain([0, max(dataGroups.map(([_xValue, values]) => values.reduce((sum, v) => sum + v.y, 0)))]).nice()\n  }\n  \n  \n  return (\n    <>\n        <svg transform={`translate(0, ${-MARGIN/2})`} className=\"LinearGraph\" width={WIDTH} height={HEIGHT + MARGIN/2}>\n            <g>\n              {\n                graphType === 'linegraph' ?\n                dataGroups.map(([colorValue, values]) => {\n                  const firstX = getX(values[0].x);\n                  const firstY = getY(values[0].y);\n                  const color = colorVariable ? getColor(colorValue) : 'grey';\n                  const path = `M ${firstX} ${firstY} ${\n                    values\n                    .reduce((res, {x, y}) => {\n                      return `${res} L ${getX(x)} ${getY(y)}`\n                    }, '')\n                  }`\n                  return <>\n                    <path d={path} \n                      fill=\"transparent\" \n                      stroke={ colorVariable ? color : 'grey'}\n                      key={colorValue}\n                    />\n                    {\n                      values.map(({x, y}, index) => (\n                        <circle\n                          key={index}\n                          cx={getX(x)}\n                          cy={getY(y)}\n                          fill={ color }\n                          r={2}\n                        />\n                      ))\n                    }\n                  </>\n                })\n                : \n                <g className=\"histogram-objects\">\n                  {\n                    dataGroups.map(([xValue, values], index) => {\n                      return (\n                        <g key={index} className=\"x-group\">\n                          {\n                            values.map(({x, y, yDisplace, color}, index2) => {\n                             \n                              return (\n                                <rect\n                                  key={index2}\n                                  x={getX(x)}\n                                  y={HEIGHT - getYHisto(yDisplace) - getYHisto(y)}\n                                  width={ (WIDTH - MARGIN * 4) / xValues.length}\n                                  height={getYHisto(y)}\n                                  fill={getColor(color)}\n                                />\n                              )\n                            })\n                          }\n                        </g>\n                      )\n                     \n                    })\n                  }\n                </g>\n              }\n              <g className=\"left-axis\">\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n                  const x = MARGIN * .7;\n                  return (\n                    <g className=\"axis-element\" key={tick}>\n                      <text textAnchor=\"end\" x={x} y={getY(tick)}>\n                        {tick}\n                      </text>\n                      \n                      <line\n                        x1={x  + MARGIN * .1}\n                        y1={getY(tick)}\n                        x2={MARGIN}\n                        y2={getY(tick)}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n                <line\n                  stroke={'black'}\n                  y1={MARGIN}\n                  y2={HEIGHT - MARGIN}\n                  x1={MARGIN}\n                  x2={MARGIN}\n                />\n              </g>\n              <g className=\"bottom-axis\">\n                <line\n                  stroke={'black'}\n                  y1={HEIGHT - MARGIN}\n                  y2={HEIGHT - MARGIN}\n                  x1={MARGIN}\n                  x2={WIDTH - MARGIN / 2}\n                />\n                {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const y = HEIGHT - MARGIN * .75\n                  return (\n                    <g className=\"axis-element\" key={tick}>\n                      <g transform={`translate(${getX(tick)} ${y})`}>\n                        <g transform={'rotate(-45)'}>\n                          <text \n                            textAnchor=\"end\"\n                          >\n                            {xLabelMap[tick]}\n                          </text>\n                        </g>\n                      </g>\n                      <line\n                        y1={HEIGHT - MARGIN}\n                        y2={y - MARGIN * .1}\n                        x1={getX(tick)}\n                        x2={getX(tick)}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n                }\n              </g>\n            </g>\n        </svg>\n        <LinearGraphControls\n          {\n            ...{\n              xVariable,\n              xLabelVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n              graphType,\n              useRelativeScale,\n\n              searchString,\n\n              onSearchStringChange,\n              \n              onXVariableChange,\n              onXLabelVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleReverseX,\n              onToggleReverseY,\n              onColorPaletteChange,\n              onToggleUseRelativeScale,\n              onGraphTypeChange,\n\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              onFiltersChange,\n              filters,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n        <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n                type=\"textarea\"\n              />\n            </div>\n          </form>\n    </>\n  );\n}\n\nexport default function LinearGraphContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer LinearGraphContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <LinearGraphContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\nimport { generatePalette } from '../../helpers/palettes';\n\nimport LinearGraphVis from './LinearGraphContainer';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst LinearGraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [xLabelVariable, setXLabelVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [graphType, setGraphType] = useState('linegraph');\n  const [useRelativeScale, setUseRelativeScale] = useState(undefined);\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [filters, setFilters] = useState([]);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    xLabelVariable: thatXLabelVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n\n    searchString: thatSearchString,\n    colorPalette: thatColorPalette,\n\n    graphType: thatGraphType,\n    useRelativeScale: thatUseRelativeScale,\n\n    filters: theseFilters = [],\n    filtersModeAnd: theseFiltersModeAnd,\n    title: thisTitle,\n    legend: thisLegend,\n  }) => {\n    setXVariable(thatXVariable);\n    setXLabelVariable(thatXLabelVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setSearchString(thatSearchString);\n    setGraphType(thatGraphType);\n    setUseRelativeScale(thatUseRelativeScale);\n    setFilters(theseFilters);\n    setFiltersModeAnd(theseFiltersModeAnd);\n    setTitle(thisTitle);\n    setLegend(thisLegend);\n\n\n    if (thatColorPalette && ((!colorVariable && thatColorVariable) || colorVariable === thatColorVariable)) {\n      setColorPalette(thatColorPalette);\n    } else if (thatColorVariable) {\n      let colors = thatColorVariable && thatColorVariable !== 'default' ? generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.length) : undefined\n      // const colors = generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.size);\n      const finalPalette = {};\n      let i = 0;\n      filtersOptions[thatColorVariable].options.forEach(option => {\n        finalPalette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(finalPalette);\n    } else if (colorPalette) {\n      setColorPalette(undefined);\n    }\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId)\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])/* eslint react-hooks/exhaustive-deps : 0 */\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        graphType,\n        useRelativeScale,\n\n        xVariable,\n        xLabelVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n\n        searchString,\n        colorPalette,\n\n        filters,\n        filtersModeAnd,\n        \n        title,\n        legend\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <LinearGraphVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                xLabelVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                colorPalette,\n                searchString,\n                useRelativeScale,\n                graphType,\n\n                onSearchStringChange,\n\n                filtersModeAnd,\n                filters,\n\n                title,\n                legend,\n\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onXLabelVariableChange: (val) => setXLabelVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n\n                onGraphTypeChange: val => setGraphType(val),\n                onToggleUseRelativeScale: () => setUseRelativeScale(!useRelativeScale),\n\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default LinearGraphAnnotation;","import GraphAnnotation from './components/GraphAnnotation';\nimport IceCreamAnnotation from './components/IceCreamAnnotation';\nimport LinearGraphAnnotation from './components/LinearGraphAnnotation';\nimport PlainPage from './components/PlainPage';\n\nconst routes = [\n  {\n    title: {\n      fr: 'Introduction',\n      en: 'Introduction',\n    },\n    route: {\n      fr: 'introduction',\n      en: 'introduction',\n    },\n    contents: {\n      fr: '00_home.mdx',\n      en: '00_home.mdx',\n    },\n    Component: PlainPage\n  },\n  {\n    title: {\n      fr: '1. Couverture médias',\n      en: '1. Media coverage',\n    },\n    route: {\n      fr: '01-couverture-media',\n      en: '01-media-coverage',\n    },\n    contents: {\n      fr: '01_couverture_media.mdx',\n      en: '01_couverture_media.mdx'\n    },\n    Component: LinearGraphAnnotation,\n    data: '4average_clusters_unpivoted.csv'\n  },\n  {\n    title: {\n      fr: '2. Détecter les critiques',\n      en: '2. Detecting critiques',\n    },\n    route: {\n      fr: '02-detecter-critiques',\n      en: '02-detect-critiques'\n    },\n    contents: {\n      fr: '02_detectcritic.mdx',\n      en: '02_detectcritic.mdx'\n    },\n    Component: LinearGraphAnnotation,\n    data: 'critic_notcritic_unpivoted.csv',\n  },\n  {\n    title: {\n      fr: '3. Groupes et clusters',\n      en: '3. Graph clusters',\n    },\n    route: {\n      fr: '03-graph-clusters',\n      en: '03-graph-clusters',\n    },\n    contents: {\n      fr: '03_graphclusters.mdx',\n      en: '03_graphclusters.mdx'\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: '4. Évolution de l\\'agenda médiatique',\n      en: '4. Evolution of the mediatic agenda',\n    },\n    route: {\n      fr: '04-timeline-clusters',\n      en: '04-timeline-clusters',\n    },\n    contents: {\n      fr: '04_timelineclusters.mdx',\n      en: '04_timelineclusters.mdx',\n    },\n    Component: LinearGraphAnnotation,\n    data: '5average_clusters_unpivoted.csv',\n  },\n  {\n    title: {\n      fr: '5. Topologie du réseau',\n      en: '5. Network topology',\n    },\n    route: {\n      fr: '05-topologie',\n      en: '05-topology',\n    },\n    contents: {\n      fr: '05_toporobotalgo.mdx',\n      en: '05_toporobotalgo.mdx',\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: '6. Agents calculateurs',\n      en: '6. Calculating agents',\n    },\n    route: {\n      fr: '06-agents',\n      en: '06-agents',\n    },\n    contents: {\n      fr: '06_explore_entities.mdx',\n      en: '06_explore_entities.mdx',\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: '7. Verbes de troubles',\n      en: '7. Trouble verbs',\n    },\n    route: {\n      fr: '07-verbes',\n      en: '07-verbs',\n    },\n    contents: {\n      fr: '07_IssueVERB.mdx',\n      en: '07_IssueVERB.mdx',\n    },\n    data: 'df_AB_tfidf_verbs_freq_count.csv',\n    Component: IceCreamAnnotation\n  },\n  {\n    title: {\n      fr: '8. Temporalité',\n      en: '8. Temporality',\n    },\n    route: {\n      fr: '08-temporalite',\n      en: '08-temporalite',\n    },\n    contents: {\n      fr: '08_NERdate.mdx',\n      en: '08_NERdate.mdx',\n    },\n    Component: IceCreamAnnotation,\n    data: 'date_ner_tfidf_v3.csv'\n  }\n]\n\nexport default routes;","import React, {useState, Suspense} from 'react';\nimport FooterNav from '../FooterNav';\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  prevPage,\n  nextPage\n}) => {\n  const [helpVisible, setHelpVisible] = useState(false);\n  return (\n    <div className=\"slide-container without-visualization\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n      </aside>\n  </div>\n  )\n}\n\nexport default PlainPage;","import LinearGraphAnnotation from './LinearGraphAnnotation';\n\nexport default LinearGraphAnnotation;","import React, {useState} from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport { LanguageContext } from './contexts';\n\n\nimport {repository} from '../package.json';\n\nimport DataLoader from './components/DataLoader';\n\nimport routes from './summary'\n\nconst LANGUAGES = ['fr', 'en'];\n\n\n\nfunction App() {\n\n  const history = useHistory();\n  const [lang, setLang] = useState('fr');\n\n  const renderRoute = ({\n    data, \n    contentsURL, \n    Content, \n    ThatComponent,\n    prevPage,\n    nextPage\n  }) => (\n      <DataLoader url={data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined}>\n        {\n          data => (\n            <ThatComponent\n              {\n                ...{\n                  contentsURL,\n                  Content,\n                  prevPage,\n                  nextPage,\n                  data\n                }\n              }\n            />\n          )\n        }\n      </DataLoader>\n  );\n\n  const onLangChange = (ln) => {\n    if (ln !== lang) {\n      const otherLang = lang;\n      const pathOtherLang = history.location.pathname.split('/').pop();\n      const routeItem = routes.find(route => {\n        return route.route[otherLang] === pathOtherLang;\n      });\n      setLang(ln);\n      if (routeItem) {\n        history.push(`/edition/${ln}/${routeItem.route[ln]}`);\n\n      }\n    }\n    \n  }\n  return (\n    <LanguageContext.Provider value={{lang}}>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            {\n              routes.map(({title, route: inputRoute}, index) => {\n                const route = `/edition/${lang}/${inputRoute[lang]}`\n                return (\n                  <li key={index} className=\"navitem-container\">\n                    <Link to={route}>\n                      {title[lang]}\n                    </Link>\n                  </li>\n                )\n                })\n            }\n            <li className=\"lang-toggle\">\n              <button \n                className={lang === 'fr' ? 'is-active': ''}\n                onClick={() => onLangChange('fr')}\n              >fr</button>\n              <button\n                className={lang === 'en' ? 'is-active': ''}\n                onClick={() => onLangChange('en')}\n              >en</button>\n            </li>\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              LANGUAGES.map(lang => {\n                return routes.map(({\n                  // title,\n                  route: inputRoute, \n                  contents,\n                  data,\n                  Component: ThatComponent\n                }, index) => {\n                  const route = `/edition/${lang}/${inputRoute[lang]}`\n                  const prevPage = index > 0 ? routes[index - 1] : undefined;\n                  const nextPage = index < routes.length - 1 ? routes[index + 1] : undefined;\n                  const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${lang}/${contents[lang]}`))\n                  const contentsURL = `${repository}/blob/main/src/contents/${lang}/${contents[lang]}`;\n                  return (\n                    <Route key={index} path={route}>\n                      {renderRoute({data, contentsURL, Content, ThatComponent, prevPage, nextPage})}\n                    </Route>\n                  )\n                } )\n              })\n            }\n            <Redirect to={`/edition/fr/${routes[0].route['fr']}`} />\n          </Switch>\n        </main>\n      </div>\n    </LanguageContext.Provider>\n  );\n}\n\n\nexport default function Wrapper() {\n  return (\n    <Router>\n      <App />\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { uniq } from \"lodash\";\nimport { min, max } from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${Object.entries(props)\n    .filter(([_key, val]) => {\n      return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n    })\n    .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n    .join(' \\n  ')\n    .trim()\n  }\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\nexport const buildLinearGraphCode = props => buildComponentCode('LinearGraphBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch (type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n\n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props = {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n        cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({ ...res, [cat.id]: cat }), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (!filters.length) {\n    return true;\n  }\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatch = filters.find(({ attribute, value }) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatch;\n  } else {\n    const oneFilterMatches = filters.find(({ attribute, value }) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}\n\nconst radiansToDegrees = radians => radians * (180 / Math.PI);\nexport const degreesToRadians = degrees => degrees * (Math.PI / 180);\n\nexport const cartesianToPolar = (x, y) => {\n  const distance = Math.sqrt(x * x + y * y);\n  const radians = Math.atan2(y, x);\n  const degrees = radiansToDegrees(radians);\n  return { distance, radians, degrees }\n}\n\nexport const polarToCartesian = (distance, degrees) => {\n  const radians = degreesToRadians(degrees);\n  return {\n    x: distance * Math.cos(radians),\n    y: distance * Math.sin(radians)\n  }\n}\n\nexport const transformGeometry = ({ x, y }, { rotate, translate }) => {\n  const { degrees, distance } = cartesianToPolar(x, y);\n  let finalDegrees = degrees;\n  if (rotate) {\n    finalDegrees += rotate;\n  }\n  let { x: newX, y: newY } = polarToCartesian(distance, finalDegrees);\n  if (translate) {\n    if (translate.x) {\n      newX += translate.x;\n    }\n    if (translate.y) {\n      newY += translate.y;\n    }\n  }\n  return { x: newX, y: newY }\n}"],"sourceRoot":""}