{"version":3,"sources":["contents/05_toporobotalgo.mdx","../node_modules/@mdx-js/react/dist/esm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/GraphBlock/GraphBlock.js","components/GraphBlock/index.js"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","x","y","ratio","nodeColorVariable","nodeLabelVariable","labelDensity","colorPalette","filters","isMDXComponent","tableOfContents","id","level","title","children","frontMatter","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","React","createContext","useMDXComponents","contextComponents","useContext","allComponents","DEFAULTS","inlineCode","wrapper","_ref","createElement","Fragment","MDXCreateElement","forwardRef","ref","propComponents","originalType","etc","type","Component","concat","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","arr","offset","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","GraphBlock","inputProps","VisualizationControlContext","onVisualizationUpdate","focusedVisualizationId","onRegisterVisualization","onUnregisterVisualization","setFocusedVisualizationId","visualizationParams","useState","setId","copied","setCopied","useEffect","newId","genId","setTimeout","isFocused","onClick","className","cx","buildGraphCode","e","preventDefault","stopPropagation","navigator","clipboard","writeText"],"mappings":"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","file":"static/js/4.690d8287.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.985,\"time\":359100,\"words\":1197}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"quest-ce-que-la-topologie-du-réseau-nous-apprend-de-la-critique-médiatique-\"\n    }}>{`Qu’est-ce que la topologie du réseau nous apprend de la critique médiatique ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR full algo robot intermed\nRQ probeme couleur choisies dans sigma ou gexf ? + Afficher label cluster (ou en surcouche plus les termes `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#d0021b\",\n      \"Algo\": \"#9013fe\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <p>{`La dispersion des clusters dans l’espace topologique laisse apparaître une opposition entre deux principaux types de calculateurs. On observe ainsi un déplacement entre la partie droite du graphe qui comporte des articles mettant en scène des techniques de calcul algorithmique incorporées dans l’environnement de l’utilisateur pour guider, orienter ou calculer ses comportements, vers la partie gauche qui comporte des articles qui se caractérisent par la personnification de l’IA dans une entité incarnée et autonome à l’égard des humains.  `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR droite web algo et al\nRQ : estce qu’on zoom ou pas pour eviter de perdre la lsibilité de la topologie ? `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#d0021b\",\n      \"Algo\": \"#9013fe\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`La première zone à droite concerne exclusivement des algorithmes, qu’ils s’agissent des algorithmes du Web comme le fil d’actualité de Facebook, la section trending topic de Twitter, les algorithmes de recherche d’images et de sites web de Google. La plupart de ces agents algorithmiques constituent les couches techniques de services largement déployés dans nos environnements numériques quotidiens. D’autres représentent des technologies plus émergentes qui font l’objet de développements et d’expérimentations plus localisées et plus régulées tels les algorithmes de police ou de justice prédictive, de détection des images dans les systèmes de reconnaissance faciale ou les deepfakes.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR gauche AI robots\nRQ : idem `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#d0021b\",\n      \"Algo\": \"#9013fe\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Dans la partie la plus à gauche, à l’opposé du graphe, les clusters se concentrent autour d’agents calculateurs qui sont davantage incarnés sous forme de machines ou de robots. Les entités qui peuplent cette zone sont personnifiées dans des dispositifs physiques séparés de nos équipements numériques habituels que sont nos ordinateurs et nos smartphones. Ces dispositifs, en plus d’être incarnés physiquement sont équipés d’une capacité d’agir autonome via de systèmes de calcul basés sur l’IA. En simulant à la fois le corps et les capacités cognitives des humains ils sont en mesure de produire certaines actions sans intervention humaine dans différents domaines telles que le transport avec les voitures autonomes, la défense avec les “robots tueurs” et les drones, le travail avec l’automatisation des tâches professionnelles ou encore les relations physiques avec les robots sexuels.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR centre zone grise ??? mettre en gris les zone intérmédiaire ??? ou possibilité d’annotation\nRQ idem `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Intermed\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#d0021b\",\n      \"Algo\": \"#9013fe\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Entre ces deux pôles existe une zone intermédiaire plus difficilement identifiable, constituée de dispositifs à mi-chemin entre les machines autonomes et les algorithmes de nos environnements numériques quotidiens. Parmi les agents calculateurs présents dans cet espace on retrouve par exemple les assistants vocaux pouvant être embarqués dans nos smartphone ou dans des dispositifs du type enceinte connectées, les chatbots du Web, les robo-advisors qui sont les algorithmes effectuant des opérations dans le domaine de la finance ou encore des technologies de deep learning comme le dispositif Deep Dream de Google. Ces technologies bien qu’assez accessibles au grand public sont souvent encore émergentes. Elles sont en capacité de gérer un certain nombre de tâches parfois basiques de manière autonome mais ne sont pas toujours incarnées dans des dispositifs physiques, elles sont encore le plus souvent implémentées et accessibles via nos ordinateurs et smartphones.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR full\nProbleme couleur affichage label idem et taille du graphe zoom si on enleve les slides à droite coordonnées pas bonnes `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Intermed\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'cluster_label'} labelDensity={2} colorPalette={{\n      \"Robot\": \"#d0021b\",\n      \"Algo\": \"#9013fe\"\n    }} mdxType=\"GraphBlock\" />\n    <p>{`La tendance du graphe à séparer des dispositifs de calcul aux propriétés différenciées, nous amène à explorer ces dimensions de manière plus approfondie. Afin de réaliser une analyse comparative entre les deux pôles qui se dégagent de l’analyse topologique, le choix a été fait de découper le réseau en deux sous-ensembles comparables en volume d’articles, de clusters et de termes. Ainsi, l’espace intitulé “robots” compte 52% des articles du corpus, 9 clusters principaux (de taille supérieure à 1%) et 1790 termes. L’espace intitulé “algorithmes” représente quant à lui 48% articles, 8 clusters principaux et 1201 termes. Par une approche comparative, ce découpage en deux sous-ensembles équivalents permet d’explorer les différents attributs qui peuplent ces deux espaces sémantiques.`}</p>\n    <p>{`Les méthodes de traitement automatique du langage permettent une analyse des éléments des discours critiques, à partir des termes saillants extraits au sein des articles, peuplant ces deux espaces sémantiques. Pour mettre en évidence les caractéristiques de ces deux espaces de critique, nous avons entrepris d’identifier systématiquement la manière dont sont désignées les entités techniques, la société qui les abrite et la façon dont les premiers ont des effets sur la seconde. Tous ces discours critiques cherchent à qualifier la manière dont des Agents produisent des Victimes en exerçant un type particulier d’opération ; ces dernières sont constitutives d’un ensemble de troubles révélant autant de nouveaux défis, ou d’enjeux, produits par le déploiement des techniques d’IA dans nos sociétés (Cardon, Crépel, 2019).`}</p>\n    <p>{`Afin de différencier ces entités au sein du graphe, la plupart des termes, ne souffrants pas trop d’ambiguïté (66% des termes du graphe), ont été annotés manuellement en dix catégories distinctes. Parmi ces catégories, notre analyse consiste à comparer trois d’entre elles qui apparaissent particulièrement pertinentes pour différencier les deux espaces. La catégorie “Technical” renvoie à ce que nous avons désigné comme agents calculateurs, elle concerne toutes les termes relatifs aux entités techniques tels que les algorithmes, les machines, les fonctionnalités ou services techniques, les terminaux mais également les produits ou services issus le plus souvent de startup qui sont parfois difficiles à différencier de l’entité économique qui les a produit. La seconde catégorie relative aux agents humains, nommée “People”, concerne tous les termes désignant des personnes ou groupes de personnes non nommées (à la différence des catégories “Person” pour les noms propres et “Institutions” pour les groupes ou structures ayant une existence juridique). Enfin, la troisième catégorie que nous présenterons par la suite, nommée “Issues”, permet d’identifier les termes qui désignent des enjeux, des difficultés ou des problèmes extraits au sein des articles. `}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--division-du-graphe-et-du-corpus-selon-la-topologie\"\n    }}>{`Méthode : Division du graphe et du corpus selon la topologie`}</h2>\n    <p>{`Pour faciliter une analyse comparative entre l’espace sémantique interprété comme lié aux “robots” et l’espace lié aux “algorithmes” chaque cluster a été associé à l’une ou l’autre de ces catégories. Les deux sous-ensembles sont comparables en volume d’articles, de clusters et de termes. `}</p>\n    <p>{`L’espace intitulé “robots” compte : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`9 clusters principaux (de taille supérieure à 1% du corpus d’articles)`}</li>\n      <li parentName=\"ul\">{`52% des articles du corpus (chaque article étant associé à un unique cluster)`}</li>\n      <li parentName=\"ul\">{`1790 termes au sein du réseau (chaque terme étant associé à un unique cluster). `}</li>\n    </ul>\n    <p>{`L’espace intitulé “algorithmes” compte `}</p>\n    <ul>\n      <li parentName=\"ul\">{`8 clusters principaux (de taille supérieure à 1% du corpus d’articles)`}</li>\n      <li parentName=\"ul\">{`48% articles (chaque article étant associé à un unique cluster)`}</li>\n      <li parentName=\"ul\">{`1201 termes au sein du réseau (chaque terme étant associé à un unique cluster).`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quest-ce-que-la-topologie-du-réseau-nous-apprend-de-la-critique-médiatique-\",\n    level: 2,\n    title: \"Qu’est-ce que la topologie du réseau nous apprend de la critique médiatique ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--division-du-graphe-et-du-corpus-selon-la-topologie\",\n    level: 2,\n    title: \"Méthode : Division du graphe et du corpus selon la topologie\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, {useContext, useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext} from '../../contexts'\nimport {buildGraphCode} from '../../helpers/misc';\n\nconst GraphBlock = (inputProps) => {\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => onRegisterVisualization(newId, {...inputProps}))\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildGraphCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return (\n    <div onClick={handleClick} className={cx(\"VisualizationBlock GraphBlock\", {'is-focused': isFocused})}>\n      <pre>\n        <code>\n          {buildGraphCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default GraphBlock;","import GraphBlock from './GraphBlock';\n\nexport default GraphBlock;"],"sourceRoot":""}