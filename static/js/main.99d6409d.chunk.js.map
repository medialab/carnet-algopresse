{"version":3,"sources":["helpers/misc.js","../ /^/.//.*$/ groupOptions: {} namespace object","components/DataLoader/DataLoader.js","components/DataLoader/index.js","helpers/palettes.js","components/Graph/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/ColorLegend.js","components/ColorLegend/index.js","components/Graph/GraphControls.js","components/Graph/reducers.js","components/Graph/GraphContainer.js","components/Graph/index.js","components/FooterNav/index.js","components/FooterNav/FooterNav.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/IceCream/IceCreamControls.js","components/IceCream/IceCreamContainer.js","components/IceCream/index.js","components/PlainPage/PlainPage.js","summary.js","components/PlainPage/index.js","components/IceCreamAnnotation/IceCreamAnnotation.js","App.js","reportWebVitals.js","index.js","contexts.js"],"names":["buildComponentCode","componentName","props","Object","entries","filter","val","undefined","Array","isArray","length","map","key","JSON","stringify","serializeValue","join","trim","buildGraphCode","buildIceCreamScatterPlotCode","computeFiltersOptions","type","args","computeTableOptions","computeGraphFiltersOptions","data","columns","reduce","res","options","uniq","d","find","o","isNaN","Number","isInteger","id","title","includes","min","max","graph","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","forEach","attr","getAttribute","push","Set","forEachNode","_node","cat","has","add","evalIfNodeMatches","attributes","filters","filtersModeAnd","attribute","value","webpackAsyncContext","req","__webpack_require__","Promise","resolve","then","e","Error","code","ids","keys","module","exports","Loader","percentsLoaded","className","style","width","DataLoader","url","children","useState","setData","loadingFraction","setLoadingFraction","useEffect","axios","get","onDownloadProgress","progressEvent","status","loaded","total","inputData","setTimeout","split","pop","csvParse","tsvParse","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","usePrevious","ref","useRef","current","ControlButton","onClick","FiltersEditor","onToggleFiltersModeAnd","filtersOptions","onFiltersChange","isOpen","setIsOpen","newFilterAttribute","setNewFilterAttribute","newFilterOptions","option","index","newFilters","f","i","onChange","target","VariablesEditor","variables","isNotAllDefault","v","activeOptions","getOptions","label","newVal","ColorItemHandler","modality","color","isEdited","setEdited","editedColor","setEditedColor","debouncedOnChange","debounce","background","stopPropagation","newColor","hex","ColorLegend","colorPalette","SLIDER_MARKS","DebouncedSlider","defaultValue","setValue","step","newValue","marks","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","labelDensity","nodeSizeVariable","nodeColorVariable","nodeLabelVariable","onNodeSizeVariableChange","onNodeColorVariableChange","onNodeLabelVariableChange","onLabelDensityChange","onColorPaletteChange","isMinified","setIsMinified","cx","onSubmit","preventDefault","placeholder","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","extents","onCameraUpdate","cameraPosition","updateTimestamp","nodeSize","useMemo","values","from","nodeColor","colors","size","palette","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","previousNodeSize","previousNodeLabelVariable","previousLabelDensity","previousSearchString","previousFilters","previousColorPalette","nodeReducer","nodeLabel","nodeSizeFactor","nodeSizeScale","renderedNode","x","y","hidden","createNodeReducer","edgeReducer","el1","el2","renderedEdge","biggerNode","Color","lighten","rgb","string","createEdgeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","height","displayedLabels","toLowerCase","highlightNode","unhighlightNode","highlightedNodes","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","FooterNav","prevPage","nextPage","to","route","GraphAnnotation","Content","contentsURL","gexf","parse","Graph","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setColorPalette","setNodeSizeVariable","setNodeLabelVariable","setLabelDensity","focusedVisualizationId","setFocusedVisualizationId","registeredVisualizations","setRegisteredVisualizations","thatId","sizes","sizeExtent","extent","Provider","onVisualizationUpdate","ratio","newNodeColorVariable","onRegisterVisualization","onUnregisterVisualization","copyOfRegistered","visualizationParams","href","fallback","str","IceCreamControls","xVariable","reverseX","yVariable","reverseY","sizeVariable","colorVariable","labelVariable","rotateMode","onToggleRotateMode","onXVariableChange","onYVariableChange","onColorVariableChange","onSizeVariableChange","onLabelVariableChange","onToggleReverseX","onToggleReverseY","IceCreamContainer","smallestDimension","WIDTH","HEIGHT","MIN_RADIUS","MAX_RADIUS","MARGIN","xRange","yRange","reverse","highlightedIndex","getX","getY","getSize","getColor","datum","transform","x1","x2","y1","y2","stroke","ticks","tick","opacity","r","fill","dimensions","PlainPage","routes","contents","Component","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatRotateMode","thatSearchString","IceCream","App","renderRoute","ThatComponent","process","React","lazy","repository","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","VisualizationControlContext","createContext"],"mappings":"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","file":"static/js/main.99d6409d.chunk.js","sourcesContent":["import { uniq } from \"lodash\";\nimport {min, max} from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${\n  Object.entries(props)\n  .filter(([_key, val]) => {\n    return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n  })\n  .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n  .join(' \\n  ')\n  .trim()\n}\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch(type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n    \n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props =  {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n      cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({...res, [cat.id]: cat}), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatches = filters.find(({attribute, value}) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatches;\n  } else {\n    const oneFilterMatches = filters.find(({attribute, value}) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}","var map = {\n\t\"./00_home.mdx\": [\n\t\t347,\n\t\t10\n\t],\n\t\"./01_couverture_media.mdx\": [\n\t\t348,\n\t\t11\n\t],\n\t\"./02_detectcritic.mdx\": [\n\t\t349,\n\t\t12\n\t],\n\t\"./03_graphclusters.mdx\": [\n\t\t350,\n\t\t3\n\t],\n\t\"./04_timelineclusters.mdx\": [\n\t\t351,\n\t\t13\n\t],\n\t\"./05_toporobotalgo.mdx\": [\n\t\t352,\n\t\t4\n\t],\n\t\"./06_explore_entities.mdx\": [\n\t\t353,\n\t\t5\n\t],\n\t\"./07_IssueVERB.mdx\": [\n\t\t354,\n\t\t6\n\t],\n\t\"./08_NERdate.mdx\": [\n\t\t355,\n\t\t14\n\t],\n\t\"./dates-analysis.mdx\": [\n\t\t356,\n\t\t7\n\t],\n\t\"./graph-critics.mdx\": [\n\t\t357,\n\t\t8\n\t],\n\t\"./verbs-analysis.mdx\": [\n\t\t358,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 343;\nmodule.exports = webpackAsyncContext;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    if (url) {\n      axios.get(url, {\n        onDownloadProgress: progressEvent => {\n          const status = progressEvent.loaded / progressEvent.total;\n          setLoadingFraction(status);\n        }\n      })\n      .then(({data: inputData}) => {\n        setTimeout(() => {\n          let data = inputData;\n          if (url.split('.').pop() === 'csv') {\n            data = csvParse(inputData);\n          } else if (url.split('.').pop() === 'tsv') {\n            data = tsvParse(inputData);\n          }\n          setData(data);\n        })\n      })\n    }\n  }, [url]);\n\n  if (!url) {\n    return children();\n  }\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1) return SINGLE_COLOR_PALETTE;\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND' : 'OR'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions.map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","\nimport React, {useState, useEffect} from 'react';\nimport { SketchPicker } from 'react-color';\nimport debounce from 'lodash/debounce';\n\nconst ColorItemHandler = ({\n  modality,\n  onChange,\n  color\n}) => {\n  const [isEdited, setEdited] = useState(false);\n  const [editedColor, setEditedColor] = useState(color);\n  useEffect(() => {\n    setEditedColor(color)\n  }, [color]);\n  const debouncedOnChange = debounce(onChange, 300);\n  const handleChange = newColor => {\n    setEditedColor(newColor.hex);\n    debouncedOnChange(newColor.hex);\n  }\n  const handleClose = () => {\n    onChange(editedColor);\n    setEdited(false);\n  }\n  return (\n    <li>\n      <span onClick={() => setEdited(!isEdited)} className=\"legend-color\" style={{background: color}} />\n      <span className=\"legend-modality\">{modality}</span>\n      {\n        isEdited ?\n        <>\n          <div onClick={handleClose} className=\"color-picker-container\">\n            <div onClick={e => {e.stopPropagation()}}>\n              <h5>Choisir la couleur de la modalité \"{modality}\"</h5>\n              <SketchPicker onChange={handleChange} color={editedColor} />\n            </div>\n          </div>\n        </>\n        : null\n      }\n    </li>\n  )\n}\n\nexport default function ColorLegend ({\n  colorPalette,\n  onChange,\n}) {\n  return (\n    <ul className=\"ColorLegend\">\n      {\n        Object.entries(colorPalette)\n        .map(([modality, color]) => {\n          const handleChange = newColor => {\n            onChange({\n              ...colorPalette,\n              [modality] : newColor\n            })\n          }\n          return (\n            <ColorItemHandler onChange={handleChange} key={modality} {...{modality, color}} />\n          )\n        })\n      }\n    </ul>\n  );\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","import React, {useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport Slider from 'rc-slider';\nimport debounce from 'lodash/debounce';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nconst SLIDER_MARKS = {\n  '0.25': 'défaut'\n};\n\nfunction DebouncedSlider({defaultValue, onChange}) {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue])\n\n  const onSliderChange = newValue => {\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return (\n    <Slider\n      min={0}\n      max={1}\n      step={0.01}\n      defaultValue={defaultValue}\n      value={value}\n      onChange={onSliderChange}\n      marks={SLIDER_MARKS}\n    />\n  );\n}\n\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n  labelDensity,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  nodeLabelVariable,\n\n  filtersOptions,\n  filters = [],\n  colorPalette,\n\n  onFiltersChange,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n          <form onSubmit={e => e.preventDefault()}>\n            <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n          </form>\n        </li>\n        \n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Label des noeuds',\n                    value: nodeLabelVariable,\n                    onChange: onNodeLabelVariableChange,\n                    type: 'string'\n                  }\n                ],\n              }\n            }\n          />\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n          }\n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n        <li className=\"vis-controls-item slider-wrapper\">\n          <form onSubmit={e => e.preventDefault()}>\n            <h5>Densité des labels</h5>\n            <div className=\"slider-container\">\n                <DebouncedSlider\n                  defaultValue={labelDensity}\n                  onChange={debounce(onLabelDensityChange, 300)}\n                />\n              </div>\n          </form>\n        </li>\n      </ul>\n    </>\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd,\n  colorPalette,\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else if (colorPalette) {\n      renderedNode.color = colorPalette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // hidden\n    if (filters.length && evalIfNodeMatches(attr, filters, filtersModeAnd) === false) {\n      renderedNode.hidden = true;\n      renderedNode.label = '';\n    } else {\n      renderedNode.hidden = false;\n      // Label\n      if (!nodeLabel) {\n        renderedNode.label = attr.label || key;\n      } else {\n        renderedNode.label = nodeLabel === 'default' ? attr.label || key : attr[nodeLabel] || '';\n      }\n    }\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  // nodeLabel,\n  // nodeSizeFactor = 1,\n  // extents,\n  // filters = [],\n  // filtersModeAnd,\n  edgesMap,\n  colorPalette,\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const biggerNode = sourceNodeSize > targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (biggerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = biggerNode.color || DEFAULT_NODE_COLOR;\n      } else if (colorPalette) {\n        renderedEdge.color = colorPalette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }  else {\n        renderedEdge.color =\n          nodeColor.palette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer, createEdgeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './GraphContainer.css';\n\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nexport default function GraphContainer({\n  graph,\n  // nodeColor,\n  // nodeSize,\n  labelDensity,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  colorPalette,\n  nodeLabelVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n}) {\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n      m.set(edge, {sourceNode: sourceAttributes, targetNode: targetAttributes})\n    });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabelVariable = usePrevious(nodeLabelVariable);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n  const previousColorPalette = usePrevious(colorPalette);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel: nodeLabelVariable,\n    extents,\n    filters,\n    filtersModeAnd,\n    colorPalette,\n  });\n  \n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    colorPalette,\n    // nodeSize,\n    // nodeLabel,\n    // extents,\n    filters,\n    filtersModeAnd,\n    edgesMap,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      previousNodeLabelVariable !== nodeLabelVariable ||\n      previousColorPalette !== colorPalette ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO from nansi: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer, edgeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n          {\n            ...{\n              searchString,\n              onSearchStringChange,\n              filtersModeAnd,\n              onToggleFiltersModeAnd,\n              filtersOptions,\n              filters,\n              onFiltersChange,\n              nodeSizeVariable,\n              nodeColorVariable,\n              nodeLabelVariable,\n              labelDensity,\n              onNodeSizeVariableChange,\n              onNodeColorVariableChange,\n              onNodeLabelVariableChange,\n              onColorPaletteChange,\n              onLabelDensityChange,\n              colorPalette: colorPalette || (nodeColor && nodeColor.palette),\n            }\n          }\n        />\n      )}\n    </div>\n  );\n}","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import FooterNav from './FooterNav';\n\nexport default FooterNav;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cx from 'classnames'\n\nconst FooterNav = ({\n  prevPage,\n  nextPage\n}) => {\n  return (\n    <footer className={cx(\"FooterNav\", {'start-page': !prevPage})}>\n      <ul>\n        {\n          prevPage ?\n            <li className=\"previous-page\">\n              <h5>\n                <Link to={prevPage.route}>\n                  <div className=\"marker\">{'<'}</div>\n                  <div className=\"page-content\">\n                    <div className=\"page-label\"><i>Page précédente</i></div>\n                    <div>\n                        {prevPage.title}\n                    </div>\n                  </div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n        {\n          nextPage ?\n            <li className=\"next-page\">\n              <h5>\n                <Link to={nextPage.route}>\n                  <div>\n                    <div className=\"page-label\"><i>Page suivante</i></div>\n                    <div className=\"page-content\">\n                        {nextPage.title}\n                    </div>\n                  </div>\n                  <div className=\"marker\">{'>'}</div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n      </ul>\n    </footer>\n  )\n}\n\nexport default FooterNav;","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect, Suspense} from 'react';\nimport {extent} from 'd3-array';\nimport {generatePalette} from '../../helpers/palettes';\n\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from '../Graph';\nimport FooterNav from '../FooterNav';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst DEFAULT_LABEL_DENSITY = 0.25;\n\nconst GraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, data), [graph, data]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n  const [nodeLabelVariable, setNodeLabelVariable] = useState(undefined);\n  const [labelDensity, setLabelDensity] = useState(DEFAULT_LABEL_DENSITY);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable: newNodeColorVariable,\n    nodeSizeVariable,\n    nodeLabelVariable,\n    labelDensity,\n    colorPalette,\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(newNodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n    setNodeLabelVariable(nodeLabelVariable);\n    if (colorPalette && nodeColorVariable === newNodeColorVariable) {\n      setColorPalette(colorPalette);\n    } else {\n      const colors = generatePalette(newNodeColorVariable, filtersOptions[newNodeColorVariable].options.size);\n      const palette = {};\n      let i = 0;\n      filtersOptions[newNodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(palette);\n    }\n    setLabelDensity(labelDensity === undefined ? DEFAULT_LABEL_DENSITY : labelDensity);\n  }\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        nodeSizeVariable,\n        nodeColorVariable,\n        nodeLabelVariable,\n        filtersModeAnd,\n        labelDensity,\n        colorPalette,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                filtersModeAnd,\n                labelDensity,\n\n                colorPalette,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onLabelDensityChange: val => setLabelDensity(val),\n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n                onNodeLabelVariableChange: (val) => setNodeLabelVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {min, extent} from 'd3-array';\n\nimport IceCreamControls from './IceCreamControls';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './IceCreamContainer.css';\n\nfunction IceCreamContainer({\n\n  width, height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  filtersOptions = {},\n}) {\n  const smallestDimension = min([width, height])\n  const WIDTH = smallestDimension;\n  const HEIGHT = smallestDimension;\n  const MIN_RADIUS = smallestDimension / 100;\n  const MAX_RADIUS = smallestDimension / 50;\n  const MARGIN = smallestDimension / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN ];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain(extent(data.map(d => +d[xVariable]))) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain(extent(data.map(d => +d[yVariable]))) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ?  scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_RADIUS, MAX_RADIUS]) : () => 0;\n\n  let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n  let getColor = () => 'grey';\n  let colorPalette;\n  if (palette) {\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n    getColor = val => {\n      return colorPalette[val]\n    }\n  }\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  return (\n    <>\n        <svg className=\"scatterplot\" width={WIDTH} height={HEIGHT} transform={rotateMode ? 'rotate(-45)' : ''}>\n          <g transform={`translate(${WIDTH/20}, 0)scale(.9)`}>\n            <g className=\"axis axis-left\">\n              <line x1={MARGIN} x2={MARGIN} y1={MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n                  const y = getY(tick);\n                  return (\n                    <g key={tick} transform={`translate(0, ${y})`}>\n                      <text transform={rotateMode ? `rotate(45)translate(${MARGIN/4}, ${-MARGIN/3})`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={MARGIN * 0.8}\n                        x2={MARGIN}\n                        y1={0}\n                        y2={0}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text \n                className=\"axis-variable-name\" \n                x={0} \n                y={MARGIN / 2 - 2} \n                transform={rotateMode ? `rotate(90)translate(${(HEIGHT - MARGIN) * .5}, ${-MARGIN * .7})` : ''}\n              >\n                {yVariable}\n              </text>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line x1={MARGIN} x2={WIDTH - MARGIN * 2} y1={HEIGHT - MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const x = getX(tick);\n                  return (\n                    <g key={tick} transform={`translate(${x}, ${HEIGHT})`}>\n                      <text y={-MARGIN / 3} transform={rotateMode ? `rotate(45)translate(${-MARGIN * .4}, 0)`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={0}\n                        x2={0}\n                        y1={-MARGIN}\n                        y2={-MARGIN * .8}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text className=\"axis-variable-name\" \n                x={WIDTH - MARGIN * 1.5} \n                y={HEIGHT - MARGIN / 3 - 2}\n                transform={rotateMode ? `translate(${-(WIDTH - MARGIN) / 2}, ${MARGIN/3})` : ''}\n              >\n                {xVariable}\n              </text>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n                \n                  getY.ticks &&\n                  getY.ticks()\n                  .map(tick => (\n                    <line \n                      key={tick}\n                      x1={MARGIN}\n                      x2={WIDTH - MARGIN}\n                      y1={getY(tick)}\n                      y2={getY(tick)}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n                \n                getX.ticks &&\n                getX.ticks()\n                .map(tick => (\n                  <line \n                    key={tick}\n                    y1={MARGIN}\n                    y2={WIDTH - MARGIN}\n                    x1={getY(tick)}\n                    x2={getY(tick)}\n                    stroke=\"lightgrey\"\n                  />\n                ))\n            }\n            </g>\n            <g className=\"plot-objects-container\">\n            {\n              data.map((datum, index) => {\n                return (\n                  <g \n                    key={index} \n                    className=\"plot-object\"\n                    transform={`translate(${getX(datum[xVariable])}, ${getY(datum[yVariable])})`}\n                    opacity={!highlightedIndex || highlightedIndex.has(index) ? 1 : .2}\n                  >\n                    <circle \n                      r={getSize(datum[sizeVariable])} \n                      fill={getColor(datum[colorVariable])} \n                      opacity={.8}\n                    />\n                    <text x={getSize(datum[sizeVariable]) + smallestDimension / 100}>\n                      {datum[labelVariable]}\n                    </text>\n                  </g>\n                )\n              })\n            }\n            </g>\n          </g>\n        </svg>\n        <IceCreamControls\n          {\n            ...{\n              xVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n\n              rotateMode,\n              searchString,\n\n              onSearchStringChange,\n              onToggleRotateMode,\n              \n              onXVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleReverseX,\n              onToggleReverseY,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <IceCreamContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import IceCreamContainer from './IceCreamContainer';\n\nexport default IceCreamContainer;","import React, {useState, Suspense} from 'react';\nimport FooterNav from '../FooterNav';\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  prevPage,\n  nextPage\n}) => {\n  const [helpVisible, setHelpVisible] = useState(false);\n  return (\n    <div className=\"slide-container without-visualization\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n      </aside>\n  </div>\n  )\n}\n\nexport default PlainPage;","import GraphAnnotation from './components/GraphAnnotation';\nimport IceCreamAnnotation from './components/IceCreamAnnotation';\nimport PlainPage from './components/PlainPage';\n\nconst routes = [\n  {\n    title: 'Introduction',\n    route: '/introduction',\n    contents: '00_home.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '1. Couverture médias',\n    route: '/01-couverture-media',\n    contents: '01_couverture_media.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '2. Détecter les critiques',\n    route: '/02-detect-critic',\n    contents: '02_detectcritic.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '3. Graphe clusters',\n    route: '/03-graph-clusters',\n    contents: '03_graphclusters.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '4. Évolution de l\\'agenda médiatique',\n    route: '/04-timeline-clusters',\n    contents: '04_timelineclusters.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '5. Topologie du réseau',\n    route: '/05-topologie',\n    contents: '05_toporobotalgo.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '6. Agents calculateurs',\n    route: '/06-agents',\n    contents: '06_explore_entities.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '7. Verbes de troubles',\n    route: '/07-verbs',\n    contents: '07_IssueVERB.mdx',\n    data: 'df_AB_tfidf_verbs_freq_count.csv',\n    Component: IceCreamAnnotation\n  },\n  {\n    title: '8. Temporalité',\n    route: '/08-temporalite',\n    contents: '08_NERdate.mdx',\n    Component: PlainPage\n  },\n  // {\n  //   title: 'Graphe des critiques anglophones',\n  //   route: '/graph-critic-en',\n  //   contents: 'graph-critics.mdx',\n  //   data: 'Graph_Critic_EN_algopress_webV2.gexf',\n  //   Component: GraphAnnotation\n  // },\n  // {\n  //   title: 'Analyse des dates (fichier \"date_ner_tfidf_v3\")',\n  //   route: '/dates-analysis',\n  //   contents: 'dates-analysis.mdx',\n  //   data: 'date_ner_tfidf_v3.tsv',\n  //   Component: IceCreamAnnotation\n  // },\n  // {\n  //   title: 'Analyse des verbes (fichier \"df_AB_tfidf_verbs_freq_count.csv\")',\n  //   route: '/verbs-analysis',\n  //   contents: 'verbs-analysis.mdx',\n  //   data: 'df_AB_tfidf_verbs_freq_count.csv',\n  //   Component: IceCreamAnnotation\n  // }\n]\n\nexport default routes;","import PlainPage from './PlainPage';\n\nexport default PlainPage;","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\n\nimport IceCreamVis from '../IceCream';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n  }) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId)\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n\n        rotateMode,\n        searchString,\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <IceCreamVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n\n                rotateMode,\n                searchString,\n\n                onSearchStringChange,\n                onToggleRotateMode: () => setRotateMode(!rotateMode),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onSizeVariableChange: (val) => setSizeVariable(val),\n                onLabelVariableChange: (val) => setLabelVariable(val),\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link,\n  Redirect,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport {repository} from '../package.json';\n\nimport DataLoader from './components/DataLoader';\n\nimport routes from './summary'\n\n\nexport default function App() {\n  const renderRoute = ({\n    data, \n    contentsURL, \n    Content, \n    ThatComponent,\n    prevPage,\n    nextPage\n  }) => (\n      <DataLoader url={data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined}>\n        {\n          data => (\n            <ThatComponent\n              {\n                ...{\n                  contentsURL,\n                  Content,\n                  prevPage,\n                  nextPage,\n                  data\n                }\n              }\n            />\n          )\n        }\n      </DataLoader>\n  )\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            {\n              routes.map(({title, route}, index) => (\n                <li key={index} className=\"navitem-container\">\n                  <Link to={route}>\n                    {title}\n                  </Link>\n                </li>\n              ))\n            }\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              routes.map(({\n                // title,\n                route, \n                contents,\n                data,\n                Component: ThatComponent\n              }, index) => {\n                const prevPage = index > 0 ? routes[index - 1] : undefined;\n                const nextPage = index < routes.length - 1 ? routes[index + 1] : undefined;\n                const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${contents}`))\n                const contentsURL = `${repository}/blob/main/src/contents/${contents}`;\n                return (\n                  <Route key={index} path={route}>\n                    {renderRoute({data, contentsURL, Content, ThatComponent, prevPage, nextPage})}\n                  </Route>\n                )\n              } )\n              \n            }\n            <Redirect to={routes[0].route} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})"],"sourceRoot":""}