{"version":3,"sources":["components/Graph/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/index.js","components/ColorLegend/ColorLegend.js","components/Graph/GraphControls.js","helpers/misc.js","components/Graph/reducers.js","helpers/palettes.js","components/Graph/GraphContainer.js","components/Graph/index.js","contexts.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/DataLoader/DataLoader.js","components/DataLoader/index.js","components/GraphBlock/index.js","components/GraphBlock/GraphBlock.js","slides/GraphCritic/contents.mdx","slides/GraphCritic/index.js","components/IceCream/IceCreamControls.js","components/IceCream/IceCreamContainer.js","components/IceCream/index.js","components/IceCreamAnnotation/index.js","components/IceCreamAnnotation/IceCreamAnnotation.js","components/IceCreamBlock/index.js","components/IceCreamBlock/IceCreamBlock.js","slides/DatesAnalysis/contents.mdx","slides/DatesAnalysis/index.js","slides/VerbsAnalysis/contents.mdx","slides/VerbsAnalysis/index.js","App.js","reportWebVitals.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","ControlButton","children","onClick","className","FiltersEditor","onToggleFiltersModeAnd","filtersModeAnd","filtersOptions","onFiltersChange","filters","useState","isOpen","setIsOpen","undefined","newFilterAttribute","setNewFilterAttribute","newFilterOptions","options","forEach","option","push","length","map","index","attribute","newFilters","filter","f","i","onChange","e","val","target","Object","entries","id","title","VariablesEditor","variables","isNotAllDefault","find","v","type","activeOptions","includes","getOptions","label","newVal","ColorLegend","colorPalette","modality","color","style","background","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","nodeSizeVariable","nodeColorVariable","onNodeSizeVariableChange","onNodeColorVariableChange","isMinified","setIsMinified","cx","onSubmit","preventDefault","placeholder","buildComponentCode","componentName","props","Array","isArray","key","JSON","stringify","serializeValue","join","trim","buildGraphCode","buildIceCreamScatterPlotCode","computeFiltersOptions","args","computeTableOptions","computeGraphFiltersOptions","data","columns","reduce","res","uniq","d","o","isNaN","Number","isInteger","min","max","graph","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","attr","getAttribute","Set","forEachNode","_node","cat","has","add","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","nodeLabel","labelDensity","extents","onCameraUpdate","cameraPosition","updateTimestamp","nodeSize","useMemo","values","from","nodeColor","colors","size","palette","previousNodeColor","previousNodeSize","previousLabelDensity","previousSearchString","previousFilters","nodeReducer","nodeSizeFactor","nodeSizeScale","renderedNode","x","y","hidden","attributes","evalIfNodeMatches","createNodeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","width","height","displayedLabels","toLowerCase","highlightNode","unhighlightNode","highlightedNodes","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","VisualizationControlContext","React","createContext","GraphAnnotation","Content","contentsURL","gexf","parse","Graph","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setNodeSizeVariable","focusedVisualizationId","setFocusedVisualizationId","registeredVisualizations","setRegisteredVisualizations","keys","thatId","sizes","sizeExtent","extent","Provider","onVisualizationUpdate","ratio","onRegisterVisualization","onUnregisterVisualization","copyOfRegistered","visualizationParams","href","str","Loader","percentsLoaded","DataLoader","url","setData","loadingFraction","setLoadingFraction","axios","get","onDownloadProgress","progressEvent","status","loaded","total","then","inputData","setTimeout","split","pop","csvParse","tsvParse","GraphBlock","inputProps","useContext","setId","copied","setCopied","newId","genId","isFocused","stopPropagation","navigator","clipboard","writeText","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent","URL_BASIS","repository","TestVis","process","IceCreamControls","xVariable","reverseX","yVariable","reverseY","sizeVariable","colorVariable","labelVariable","rotateMode","onToggleRotateMode","onXVariableChange","onYVariableChange","onColorVariableChange","onSizeVariableChange","onLabelVariableChange","onToggleReverseX","onToggleReverseY","IceCreamContainer","smallestDimension","WIDTH","HEIGHT","MIN_RADIUS","MAX_RADIUS","MARGIN","xRange","yRange","reverse","highlightedIndex","getX","getY","getSize","getColor","datum","transform","x1","x2","y1","y2","stroke","ticks","tick","opacity","r","fill","dimensions","IceCreamAnnotation","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatRotateMode","thatSearchString","IceCream","IceCreamBlock","Home","routes","route","Component","GraphCritic","DatesAnalysis","VerbsAnalysis","App","to","ThatComponent","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b69b6e97.chunk.js","sourcesContent":["import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND' : 'OR'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions.map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","\nimport React from 'react';\n\nexport default function ColorLegend ({\n  colorPalette\n}) {\n  return (\n    <ul className=\"ColorLegend\">\n      {\n        Object.entries(colorPalette)\n        .map(([modality, color]) => (\n          <li key={modality}>\n            <span className=\"legend-color\" style={{background: color}} />\n            <span className=\"legend-modality\">{modality}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n}","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions,\n  filters = [],\n  onFiltersChange,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  }\n                ],\n              }\n            }\n          />\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n          }\n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n      </ul>\n    </>\n  );\n}","import { uniq } from \"lodash\";\nimport {min, max} from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${\n  Object.entries(props)\n  .filter(([_key, val]) => {\n    return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n  })\n  .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n  .join(' \\n  ')\n  .trim()\n}\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch(type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n    \n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props =  {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n      cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({...res, [cat.id]: cat}), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatches = filters.find(({attribute, value}) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatches;\n  } else {\n    const oneFilterMatches = filters.find(({attribute, value}) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}","import {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // Label\n    if (!nodeLabel) {\n      renderedNode.label = attr.label || key;\n    } else {\n      renderedNode.label = attr[nodeLabel.name] || '<no-label>';\n    }\n    // hidden\n    renderedNode.hidden = filters.length ? !evalIfNodeMatches(attr, filters, filtersModeAnd) : false;\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1) return SINGLE_COLOR_PALETTE;\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './GraphContainer.css';\n\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nexport default function GraphContainer({\n  graph,\n  // nodeColor,\n  // nodeSize,\n  nodeLabel,\n  labelDensity,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n}) {\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  // const previousNodeLabel = usePrevious(nodeLabel);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n    filters,\n    filtersModeAnd,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      // previousNodeLabel !== nodeLabel ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n          {\n            ...{\n              searchString,\n              onSearchStringChange,\n              filtersModeAnd,\n              onToggleFiltersModeAnd,\n              filtersOptions,\n              filters,\n              onFiltersChange,\n              nodeSizeVariable,\n              nodeColorVariable,\n              onNodeSizeVariableChange,\n              onNodeColorVariableChange,\n              colorPalette: nodeColor && nodeColor.palette,\n            }\n          }\n        />\n      )}\n    </div>\n  );\n}","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect} from 'react';\nimport {extent} from 'd3-array';\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from '../../components/Graph';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst GraphAnnotation = ({\n  Content,\n  gexfData,\n  contentsURL,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, gexfData);\n  }, [gexfData]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, gexfData), [graph, gexfData]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable,\n    nodeSizeVariable,\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(nodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n  }\n  const onSearchStringChange = str => {\n    setSearchString(str);\n\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        nodeSizeVariable,\n        nodeColorVariable,\n        filtersModeAnd,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Content />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                filtersModeAnd,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                \n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    axios.get(url, {\n      onDownloadProgress: progressEvent => {\n        const status = progressEvent.loaded / progressEvent.total;\n        setLoadingFraction(status);\n      }\n    })\n    .then(({data: inputData}) => {\n      setTimeout(() => {\n        let data = inputData;\n        if (url.split('.').pop() === 'csv') {\n          data = csvParse(inputData);\n        } else if (url.split('.').pop() === 'tsv') {\n          data = tsvParse(inputData);\n        }\n        setData(data);\n      })\n    })\n  }, [url]);\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import GraphBlock from './GraphBlock';\n\nexport default GraphBlock;","import React, {useContext, useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext} from '../../contexts'\nimport {buildGraphCode} from '../../helpers/misc';\n\nconst GraphBlock = (inputProps) => {\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => onRegisterVisualization(newId, {...inputProps}))\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildGraphCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return (\n    <div onClick={handleClick} className={cx(\"VisualizationBlock GraphBlock\", {'is-focused': isFocused})}>\n      <pre>\n        <code>\n          {buildGraphCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default GraphBlock;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.575,\"time\":94500,\"words\":315}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"graphe-des-critiques-anglophones\"\n    }}>{`Graphe des critiques anglophones`}</h1>\n    <h2 {...{\n      \"id\": \"quest-ce-quon-regarde\"\n    }}>{`Qu’est-ce qu’on regarde`}</h2>\n    <p>{`2,991 noeuds et 54,062 arcs`}</p>\n    <p>{`Densité: ~0.0121.`}</p>\n    <p>{`Carte d’identité des attributs de noeuds disponibles :`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`label_copy`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`technical`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`company`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fiction`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`person`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`people`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`institution`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`locality`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data_inout`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`topic`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`issue`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cluster_rename`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`algo_robot`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nc term`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tag_entity`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n    </ul>\n    <p>{`Vue du réseau dans son ensemble :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} mdxType=\"GraphBlock\" />\n    <GraphBlock x={0.502465282275226} y={0.6595968333857609} ratio={1} searchString={'team'} mdxType=\"GraphBlock\" />\n    <h1 {...{\n      \"id\": \"les-deux-continents\"\n    }}>{`Les deux continents`}</h1>\n    <p>{`Ci-dessous deux vues filtrées avec l’attribut algo_robot`}</p>\n    <p>{`Note technique : les labels des éléments filtrés s’affichent parfois, cela devrait être réglé dans une version ultérieur de sigma 2.`}</p>\n    <p>{`Le continent \"algo\":`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Le continent “robots” :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Ou alors en les colorant :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={\"algo_robot\"} mdxType=\"GraphBlock\" />\n    <h1 {...{\n      \"id\": \"analyse-de-la-répartition-des-autres-attributs\"\n    }}>{`Analyse de la répartition des autres attributs`}</h1>\n    <p>{`Par `}<inlineCode parentName=\"p\">{`cluster_rename`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'cluster_rename'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`topic`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'topic'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`issue`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'issue'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`technical`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'technical'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`company`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'company'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`fiction`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'fiction'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`person`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'person'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`people`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'people'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`institution`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'institution'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`locality`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'locality'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`data_inout`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'data_inout'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`nc term`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'nc term'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`tag_entity`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'tag_entity'} mdxType=\"GraphBlock\" />\n    <h2 {...{\n      \"id\": \"plus-loin-dans-lenquête\"\n    }}>{`Plus loin dans l’enquête`}</h2>\n    <p>{`Résultat d’une recherche du terme “robot” :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} searchString={'robot'} mdxType=\"GraphBlock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quest-ce-quon-regarde\",\n    level: 2,\n    title: \"Qu’est-ce qu’on regarde\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"plus-loin-dans-lenquête\",\n    level: 2,\n    title: \"Plus loin dans l’enquête\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nimport GraphAnnotation from '../../components/GraphAnnotation';\nimport DataLoader from '../../components/DataLoader';\n\nimport {repository} from '../../../package.json';\n\nimport Content from '!babel-loader!mdx-loader!./contents.mdx'\n\nconst URL_BASIS = `${repository}/blob/main/src/slides/GraphCritic`;\nconst contentsURL = `${URL_BASIS}/contents.mdx`\n\n\nconst TestVis = () => {\n  // <DataLoader url={`${process.env.PUBLIC_URL}/Graph Critic EN layers rotation edgesunweight V2.gexf`}>\n  \n  return (\n    <DataLoader url={`${process.env.PUBLIC_URL}/Graph_Critic_EN_algopress_webV2.gexf`}>\n      {\n        gexfData => (\n          <GraphAnnotation\n            {\n              ...{\n                contentsURL,\n                Content,\n                gexfData\n              }\n            }\n          />\n        )\n      }\n    </DataLoader>\n  )\n}\n\nexport default TestVis;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {min, extent} from 'd3-array';\n\nimport IceCreamControls from './IceCreamControls';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './IceCreamContainer.css';\n\nfunction IceCreamContainer({\n\n  width, height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  filtersOptions = {},\n}) {\n  const smallestDimension = min([width, height])\n  const WIDTH = smallestDimension;\n  const HEIGHT = smallestDimension;\n  const MIN_RADIUS = smallestDimension / 100;\n  const MAX_RADIUS = smallestDimension / 50;\n  const MARGIN = smallestDimension / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN ];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain(extent(data.map(d => +d[xVariable]))) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain(extent(data.map(d => +d[yVariable]))) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ?  scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_RADIUS, MAX_RADIUS]) : () => 0;\n\n  let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n  let getColor = () => 'grey';\n  let colorPalette;\n  if (palette) {\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n    getColor = val => {\n      return colorPalette[val]\n    }\n  }\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  return (\n    <>\n        <svg className=\"scatterplot\" width={WIDTH} height={HEIGHT} transform={rotateMode ? 'rotate(-45)' : ''}>\n          <g transform={`translate(${WIDTH/20}, 0)scale(.9)`}>\n            <g className=\"axis axis-left\">\n              <line x1={MARGIN} x2={MARGIN} y1={MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n                  const y = getY(tick);\n                  return (\n                    <g key={tick} transform={`translate(0, ${y})`}>\n                      <text transform={rotateMode ? `rotate(45)translate(${MARGIN/4}, ${-MARGIN/3})`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={MARGIN * 0.8}\n                        x2={MARGIN}\n                        y1={0}\n                        y2={0}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text \n                className=\"axis-variable-name\" \n                x={0} \n                y={MARGIN / 2 - 2} \n                transform={rotateMode ? `rotate(90)translate(${(HEIGHT - MARGIN) * .5}, ${-MARGIN * .7})` : ''}\n              >\n                {yVariable}\n              </text>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line x1={MARGIN} x2={WIDTH - MARGIN * 2} y1={HEIGHT - MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const x = getX(tick);\n                  return (\n                    <g key={tick} transform={`translate(${x}, ${HEIGHT})`}>\n                      <text y={-MARGIN / 3} transform={rotateMode ? `rotate(45)translate(${-MARGIN * .4}, 0)`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={0}\n                        x2={0}\n                        y1={-MARGIN}\n                        y2={-MARGIN * .8}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text className=\"axis-variable-name\" \n                x={WIDTH - MARGIN * 1.5} \n                y={HEIGHT - MARGIN / 3 - 2}\n                transform={rotateMode ? `translate(${-(WIDTH - MARGIN) / 2}, ${MARGIN/3})` : ''}\n              >\n                {xVariable}\n              </text>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n                \n                  getY.ticks &&\n                  getY.ticks()\n                  .map(tick => (\n                    <line \n                      key={tick}\n                      x1={MARGIN}\n                      x2={WIDTH - MARGIN}\n                      y1={getY(tick)}\n                      y2={getY(tick)}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n                \n                getX.ticks &&\n                getX.ticks()\n                .map(tick => (\n                  <line \n                    key={tick}\n                    y1={MARGIN}\n                    y2={WIDTH - MARGIN}\n                    x1={getY(tick)}\n                    x2={getY(tick)}\n                    stroke=\"lightgrey\"\n                  />\n                ))\n            }\n            </g>\n            <g className=\"plot-objects-container\">\n            {\n              data.map((datum, index) => {\n                return (\n                  <g \n                    key={index} \n                    className=\"plot-object\"\n                    transform={`translate(${getX(datum[xVariable])}, ${getY(datum[yVariable])})`}\n                    opacity={!highlightedIndex || highlightedIndex.has(index) ? 1 : .2}\n                  >\n                    <circle \n                      r={getSize(datum[sizeVariable])} \n                      fill={getColor(datum[colorVariable])} \n                      opacity={.8}\n                    />\n                    <text x={getSize(datum[sizeVariable]) + smallestDimension / 100}>\n                      {datum[labelVariable]}\n                    </text>\n                  </g>\n                )\n              })\n            }\n            </g>\n          </g>\n        </svg>\n        <IceCreamControls\n          {\n            ...{\n              xVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n\n              rotateMode,\n              searchString,\n\n              onSearchStringChange,\n              onToggleRotateMode,\n              \n              onXVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleReverseX,\n              onToggleReverseY,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <IceCreamContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import IceCreamContainer from './IceCreamContainer';\n\nexport default IceCreamContainer;","import IceCreamAnnotation from './IceCreamAnnotation';\n\nexport default IceCreamAnnotation;","import React, {useState, useEffect, useMemo} from 'react';\nimport IceCreamVis from '../IceCream';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable,setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n  } ) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  \n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n\n        rotateMode,\n        searchString,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Content />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <IceCreamVis\n              {\n                ...{\n                  data,\n                  filtersOptions,\n\n                  xVariable,\n                  reverseX,\n                  yVariable,\n                  reverseY,\n                  sizeVariable,\n                  colorVariable,\n                  labelVariable,\n\n                  rotateMode,\n                  searchString,\n\n                  onSearchStringChange,\n                  onToggleRotateMode: () => setRotateMode(!rotateMode) ,\n                  \n                  onXVariableChange: (val) => setXVariable(val),\n                  onYVariableChange: (val) => setYVariable(val),\n\n                  onToggleReverseX: () => setReverseX(!reverseX),\n                  onToggleReverseY: () => setReverseY(!reverseY),\n\n                  onColorVariableChange: (val) => setColorVariable(val),\n                  onSizeVariableChange: (val) => setSizeVariable(val),\n                  onLabelVariableChange: (val) => setLabelVariable(val),\n                }\n              }\n            />\n        </div>\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import IceCreamBlock from './IceCreamBlock';\n\nexport default IceCreamBlock;","import React, {useContext, useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext} from '../../contexts'\nimport {buildIceCreamScatterPlotCode} from '../../helpers/misc';\n\nconst IceCreamBlock = (inputProps) => {\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => onRegisterVisualization(newId, {...inputProps}))\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildIceCreamScatterPlotCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return (\n    <div onClick={handleClick} className={cx(\"VisualizationBlock IcecreamBlock\", {'is-focused': isFocused})}>\n      <pre>\n        <code>\n          {buildIceCreamScatterPlotCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default IceCreamBlock;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.355,\"time\":21299.999999999996,\"words\":71}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"mentions-de-dates\"\n    }}>{`Mentions de dates`}</h1>\n    <p>{`Visualisation du scatterplot renversé (mode \"icecream\") :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} mdxType=\"IceCreamBlock\" />\n    <p>{`Rajout de couleurs (pas pertinent en l’état) : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} mdxType=\"IceCreamBlock\" />\n    <p>{`Avec une recherche plein texte de “eliminate” : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} searchString={'eliminate'} mdxType=\"IceCreamBlock\" />\n    <p>{`Visualisation plus classique du scatterplot :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} mdxType=\"IceCreamBlock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nimport IceCreamAnnotation from '../../components/IceCreamAnnotation';\nimport DataLoader from '../../components/DataLoader';\n\nimport {repository} from '../../../package.json';\n\nimport Content from '!babel-loader!mdx-loader!./contents.mdx'\n\nconst URL_BASIS = `${repository}/blob/main/src/slides/DatesAnalysis`;\nconst contentsURL = `${URL_BASIS}/contents.mdx`\n\n\nconst TestVis = () => {\n  \n  return (\n    <DataLoader url={`${process.env.PUBLIC_URL}/date_ner_tfidf_v3.tsv`}>\n      {\n        data => (\n          <IceCreamAnnotation\n            {\n              ...{\n                contentsURL,\n                Content,\n                data\n              }\n            }\n          />\n        )\n      }\n    </DataLoader>\n  )\n}\n\nexport default TestVis;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.355,\"time\":21299.999999999996,\"words\":71}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"mentions-de-verbes\"\n    }}>{`Mentions de verbes`}</h1>\n    <p>{`Visualisation du scatterplot renversé (mode \"icecream\") :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} mdxType=\"IceCreamBlock\" />\n    <p>{`Rajout de couleurs (pas pertinent en l’état) : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} mdxType=\"IceCreamBlock\" />\n    <p>{`Avec une recherche plein texte de “eliminate” : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} searchString={'eliminate'} mdxType=\"IceCreamBlock\" />\n    <p>{`Visualisation plus classique du scatterplot :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} mdxType=\"IceCreamBlock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nimport IceCreamAnnotation from '../../components/IceCreamAnnotation';\nimport DataLoader from '../../components/DataLoader';\n\nimport {repository} from '../../../package.json';\n\nimport Content from '!babel-loader!mdx-loader!./contents.mdx'\n\nconst URL_BASIS = `${repository}/blob/main/src/slides/VerbsAnalysis`;\nconst contentsURL = `${URL_BASIS}/contents.mdx`\n\n\nconst TestVis = () => {\n  \n  return (\n    <DataLoader url={`${process.env.PUBLIC_URL}/df_AB_tfidf_verbs_freq_count.csv`}>\n      {\n        data => (\n          <IceCreamAnnotation\n            {\n              ...{\n                contentsURL,\n                Content,\n                data\n              }\n            }\n          />\n        )\n      }\n    </DataLoader>\n  )\n}\n\nexport default TestVis;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport GraphCritic from './slides/GraphCritic';\nimport DatesAnalysis from './slides/DatesAnalysis';\nimport VerbsAnalysis from './slides/VerbsAnalysis';\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Carnet algopresse</h1>\n      <p>\n        Ce site est dédié à l'échaffaudage collectif de la publication algopresse. Il sert de point de rencontre entre l'écriture, la conception graphique et la conception interactive. Il fonctionne en tandem avec le répertoire github dont il est issu.\n      </p>\n    </div>\n  )\n}\n\nconst routes = [\n  {\n    title: 'Graphe des critiques anglophones',\n    route: '/graph-critic-en',\n    Component: () => <GraphCritic />\n  },\n  {\n    title: 'Analyse des dates (fichier \"date_ner_tfidf_v3\")',\n    route: '/dates-analysis',\n    Component: () => <DatesAnalysis />\n  },\n  {\n    title: 'Analyse des verbes (fichier \"df_AB_tfidf_verbs_freq_count.csv\")',\n    route: '/verbs-analysis',\n    Component: () => <VerbsAnalysis />\n  },\n  \n]\n\nexport default function App() {\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Accueil</Link>\n            </li>\n            {\n              routes.map(({title, route}, index) => (\n                <li key={index} className=\"navitem-container\">\n                  <Link to={route}>\n                    {title}\n                  </Link>\n                </li>\n              ))\n            }\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              routes.map(({route, Component: ThatComponent}, index) => (\n                <Route key={index} path={route}>\n                  <ThatComponent />\n                </Route>\n              ))\n              \n            }\n            <Route path=\"/\">\n              <Home />\n            </Route>\n            \n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}