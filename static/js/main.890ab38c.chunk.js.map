{"version":3,"sources":["helpers/misc.js","../ /^/.//.*$/ groupOptions: {} namespace object","components/DataLoader/DataLoader.js","components/DataLoader/index.js","components/Graph/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/index.js","components/ColorLegend/ColorLegend.js","components/Graph/GraphControls.js","components/Graph/reducers.js","helpers/palettes.js","components/Graph/GraphContainer.js","components/Graph/index.js","components/FooterNav/index.js","components/FooterNav/FooterNav.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/IceCream/IceCreamControls.js","components/IceCream/IceCreamContainer.js","components/IceCream/index.js","components/PlainPage/PlainPage.js","summary.js","components/PlainPage/index.js","components/IceCreamAnnotation/IceCreamAnnotation.js","App.js","reportWebVitals.js","index.js","contexts.js"],"names":["buildComponentCode","componentName","props","Object","entries","filter","val","undefined","Array","isArray","length","map","key","JSON","stringify","serializeValue","join","trim","buildGraphCode","buildIceCreamScatterPlotCode","computeFiltersOptions","type","args","computeTableOptions","computeGraphFiltersOptions","data","columns","reduce","res","options","uniq","d","find","o","isNaN","Number","isInteger","id","title","includes","min","max","graph","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","forEach","attr","getAttribute","push","Set","forEachNode","_node","cat","has","add","evalIfNodeMatches","attributes","filters","filtersModeAnd","attribute","value","webpackAsyncContext","req","__webpack_require__","Promise","resolve","then","e","Error","code","ids","keys","module","exports","Loader","percentsLoaded","className","style","width","DataLoader","url","children","useState","setData","loadingFraction","setLoadingFraction","useEffect","axios","get","onDownloadProgress","progressEvent","status","loaded","total","inputData","setTimeout","split","pop","csvParse","tsvParse","usePrevious","ref","useRef","current","ControlButton","onClick","FiltersEditor","onToggleFiltersModeAnd","filtersOptions","onFiltersChange","isOpen","setIsOpen","newFilterAttribute","setNewFilterAttribute","newFilterOptions","option","index","newFilters","f","i","onChange","target","VariablesEditor","variables","isNotAllDefault","v","activeOptions","getOptions","label","newVal","ColorLegend","colorPalette","modality","color","background","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","nodeSizeVariable","nodeColorVariable","onNodeSizeVariableChange","onNodeColorVariableChange","isMinified","setIsMinified","cx","onSubmit","preventDefault","placeholder","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","nodeLabel","labelDensity","extents","onCameraUpdate","cameraPosition","updateTimestamp","nodeSize","useMemo","values","from","nodeColor","colors","size","palette","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","previousNodeSize","previousLabelDensity","previousSearchString","previousFilters","nodeReducer","nodeSizeFactor","nodeSizeScale","renderedNode","x","y","hidden","createNodeReducer","edgeReducer","el1","el2","renderedEdge","biggerNode","Color","lighten","rgb","string","createEdgeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","height","displayedLabels","toLowerCase","highlightNode","unhighlightNode","highlightedNodes","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","FooterNav","prevPage","nextPage","to","route","GraphAnnotation","Content","contentsURL","gexf","parse","Graph","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setNodeSizeVariable","focusedVisualizationId","setFocusedVisualizationId","registeredVisualizations","setRegisteredVisualizations","thatId","sizes","sizeExtent","extent","Provider","onVisualizationUpdate","ratio","onRegisterVisualization","onUnregisterVisualization","copyOfRegistered","visualizationParams","href","fallback","str","IceCreamControls","xVariable","reverseX","yVariable","reverseY","sizeVariable","colorVariable","labelVariable","rotateMode","onToggleRotateMode","onXVariableChange","onYVariableChange","onColorVariableChange","onSizeVariableChange","onLabelVariableChange","onToggleReverseX","onToggleReverseY","IceCreamContainer","smallestDimension","WIDTH","HEIGHT","MIN_RADIUS","MAX_RADIUS","MARGIN","xRange","yRange","reverse","highlightedIndex","getX","getY","getSize","getColor","datum","transform","x1","x2","y1","y2","stroke","ticks","tick","opacity","r","fill","dimensions","PlainPage","routes","contents","Component","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatRotateMode","thatSearchString","IceCream","App","renderRoute","ThatComponent","process","React","lazy","repository","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","VisualizationControlContext","createContext"],"mappings":"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","file":"static/js/main.890ab38c.chunk.js","sourcesContent":["import { uniq } from \"lodash\";\nimport {min, max} from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${\n  Object.entries(props)\n  .filter(([_key, val]) => {\n    return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n  })\n  .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n  .join(' \\n  ')\n  .trim()\n}\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch(type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n    \n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props =  {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n      cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({...res, [cat.id]: cat}), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatches = filters.find(({attribute, value}) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatches;\n  } else {\n    const oneFilterMatches = filters.find(({attribute, value}) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}","var map = {\n\t\"./00_home.mdx\": [\n\t\t164,\n\t\t10\n\t],\n\t\"./01_couverture_media.mdx\": [\n\t\t165,\n\t\t11\n\t],\n\t\"./02_detectcritic.mdx\": [\n\t\t166,\n\t\t12\n\t],\n\t\"./03_graphclusters.mdx\": [\n\t\t167,\n\t\t3\n\t],\n\t\"./04_timelineclusters.mdx\": [\n\t\t168,\n\t\t13\n\t],\n\t\"./05_toporobotalgo.mdx\": [\n\t\t169,\n\t\t4\n\t],\n\t\"./06_explore_entities.mdx\": [\n\t\t170,\n\t\t5\n\t],\n\t\"./07_IssueVERB.mdx\": [\n\t\t171,\n\t\t6\n\t],\n\t\"./08_NERdate.mdx\": [\n\t\t172,\n\t\t14\n\t],\n\t\"./dates-analysis.mdx\": [\n\t\t173,\n\t\t7\n\t],\n\t\"./graph-critics.mdx\": [\n\t\t174,\n\t\t8\n\t],\n\t\"./verbs-analysis.mdx\": [\n\t\t175,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 160;\nmodule.exports = webpackAsyncContext;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    if (url) {\n      axios.get(url, {\n        onDownloadProgress: progressEvent => {\n          const status = progressEvent.loaded / progressEvent.total;\n          setLoadingFraction(status);\n        }\n      })\n      .then(({data: inputData}) => {\n        setTimeout(() => {\n          let data = inputData;\n          if (url.split('.').pop() === 'csv') {\n            data = csvParse(inputData);\n          } else if (url.split('.').pop() === 'tsv') {\n            data = tsvParse(inputData);\n          }\n          setData(data);\n        })\n      })\n    }\n  }, [url]);\n\n  if (!url) {\n    return children();\n  }\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND' : 'OR'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions.map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","\nimport React from 'react';\n\nexport default function ColorLegend ({\n  colorPalette\n}) {\n  return (\n    <ul className=\"ColorLegend\">\n      {\n        Object.entries(colorPalette)\n        .map(([modality, color]) => (\n          <li key={modality}>\n            <span className=\"legend-color\" style={{background: color}} />\n            <span className=\"legend-modality\">{modality}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n}","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions,\n  filters = [],\n  onFiltersChange,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  }\n                ],\n              }\n            }\n          />\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n          }\n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n      </ul>\n    </>\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // hidden\n    if (filters.length && evalIfNodeMatches(attr, filters, filtersModeAnd) === false) {\n      renderedNode.hidden = true;\n      renderedNode.label = '';\n    } else {\n      renderedNode.hidden = false;\n      // Label\n      if (!nodeLabel) {\n        renderedNode.label = attr.label || key;\n      } else {\n        renderedNode.label = attr[nodeLabel.name] || '<no-label>';\n      }\n    }\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd,\n  edgesMap\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const biggerNode = sourceNodeSize > targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (biggerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = biggerNode.color || DEFAULT_NODE_COLOR;\n      } else {\n        renderedEdge.color =\n          nodeColor.palette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1) return SINGLE_COLOR_PALETTE;\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer, createEdgeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './GraphContainer.css';\n\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nexport default function GraphContainer({\n  graph,\n  // nodeColor,\n  // nodeSize,\n  nodeLabel,\n  labelDensity,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n}) {\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n      m.set(edge, {sourceNode: sourceAttributes, targetNode: targetAttributes})\n    });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  // const previousNodeLabel = usePrevious(nodeLabel);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n    filters,\n    filtersModeAnd,\n  });\n  \n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    // nodeSize,\n    // nodeLabel,\n    // extents,\n    filters,\n    filtersModeAnd,\n    edgesMap\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      // previousNodeLabel !== nodeLabel ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer, edgeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n          {\n            ...{\n              searchString,\n              onSearchStringChange,\n              filtersModeAnd,\n              onToggleFiltersModeAnd,\n              filtersOptions,\n              filters,\n              onFiltersChange,\n              nodeSizeVariable,\n              nodeColorVariable,\n              onNodeSizeVariableChange,\n              onNodeColorVariableChange,\n              colorPalette: nodeColor && nodeColor.palette,\n            }\n          }\n        />\n      )}\n    </div>\n  );\n}","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import FooterNav from './FooterNav';\n\nexport default FooterNav;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cx from 'classnames'\n\nconst FooterNav = ({\n  prevPage,\n  nextPage\n}) => {\n  return (\n    <footer className={cx(\"FooterNav\", {'start-page': !prevPage})}>\n      <ul>\n        {\n          prevPage ?\n            <li className=\"previous-page\">\n              <h5>\n                <Link to={prevPage.route}>\n                  <div className=\"marker\">{'<'}</div>\n                  <div className=\"page-content\">\n                    <div className=\"page-label\"><i>Page précédente</i></div>\n                    <div>\n                        {prevPage.title}\n                    </div>\n                  </div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n        {\n          nextPage ?\n            <li className=\"next-page\">\n              <h5>\n                <Link to={nextPage.route}>\n                  <div>\n                    <div className=\"page-label\"><i>Page suivante</i></div>\n                    <div className=\"page-content\">\n                        {nextPage.title}\n                    </div>\n                  </div>\n                  <div className=\"marker\">{'>'}</div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n      </ul>\n    </footer>\n  )\n}\n\nexport default FooterNav;","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect, Suspense} from 'react';\nimport {extent} from 'd3-array';\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from '../Graph';\nimport FooterNav from '../FooterNav';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst GraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, data), [graph, data]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable,\n    nodeSizeVariable,\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(nodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n  }\n  const onSearchStringChange = str => {\n    setSearchString(str);\n\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        nodeSizeVariable,\n        nodeColorVariable,\n        filtersModeAnd,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                filtersModeAnd,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                \n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {min, extent} from 'd3-array';\n\nimport IceCreamControls from './IceCreamControls';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './IceCreamContainer.css';\n\nfunction IceCreamContainer({\n\n  width, height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  filtersOptions = {},\n}) {\n  const smallestDimension = min([width, height])\n  const WIDTH = smallestDimension;\n  const HEIGHT = smallestDimension;\n  const MIN_RADIUS = smallestDimension / 100;\n  const MAX_RADIUS = smallestDimension / 50;\n  const MARGIN = smallestDimension / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN ];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain(extent(data.map(d => +d[xVariable]))) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain(extent(data.map(d => +d[yVariable]))) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ?  scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_RADIUS, MAX_RADIUS]) : () => 0;\n\n  let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n  let getColor = () => 'grey';\n  let colorPalette;\n  if (palette) {\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n    getColor = val => {\n      return colorPalette[val]\n    }\n  }\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  return (\n    <>\n        <svg className=\"scatterplot\" width={WIDTH} height={HEIGHT} transform={rotateMode ? 'rotate(-45)' : ''}>\n          <g transform={`translate(${WIDTH/20}, 0)scale(.9)`}>\n            <g className=\"axis axis-left\">\n              <line x1={MARGIN} x2={MARGIN} y1={MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n                  const y = getY(tick);\n                  return (\n                    <g key={tick} transform={`translate(0, ${y})`}>\n                      <text transform={rotateMode ? `rotate(45)translate(${MARGIN/4}, ${-MARGIN/3})`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={MARGIN * 0.8}\n                        x2={MARGIN}\n                        y1={0}\n                        y2={0}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text \n                className=\"axis-variable-name\" \n                x={0} \n                y={MARGIN / 2 - 2} \n                transform={rotateMode ? `rotate(90)translate(${(HEIGHT - MARGIN) * .5}, ${-MARGIN * .7})` : ''}\n              >\n                {yVariable}\n              </text>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line x1={MARGIN} x2={WIDTH - MARGIN * 2} y1={HEIGHT - MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const x = getX(tick);\n                  return (\n                    <g key={tick} transform={`translate(${x}, ${HEIGHT})`}>\n                      <text y={-MARGIN / 3} transform={rotateMode ? `rotate(45)translate(${-MARGIN * .4}, 0)`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={0}\n                        x2={0}\n                        y1={-MARGIN}\n                        y2={-MARGIN * .8}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text className=\"axis-variable-name\" \n                x={WIDTH - MARGIN * 1.5} \n                y={HEIGHT - MARGIN / 3 - 2}\n                transform={rotateMode ? `translate(${-(WIDTH - MARGIN) / 2}, ${MARGIN/3})` : ''}\n              >\n                {xVariable}\n              </text>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n                \n                  getY.ticks &&\n                  getY.ticks()\n                  .map(tick => (\n                    <line \n                      key={tick}\n                      x1={MARGIN}\n                      x2={WIDTH - MARGIN}\n                      y1={getY(tick)}\n                      y2={getY(tick)}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n                \n                getX.ticks &&\n                getX.ticks()\n                .map(tick => (\n                  <line \n                    key={tick}\n                    y1={MARGIN}\n                    y2={WIDTH - MARGIN}\n                    x1={getY(tick)}\n                    x2={getY(tick)}\n                    stroke=\"lightgrey\"\n                  />\n                ))\n            }\n            </g>\n            <g className=\"plot-objects-container\">\n            {\n              data.map((datum, index) => {\n                return (\n                  <g \n                    key={index} \n                    className=\"plot-object\"\n                    transform={`translate(${getX(datum[xVariable])}, ${getY(datum[yVariable])})`}\n                    opacity={!highlightedIndex || highlightedIndex.has(index) ? 1 : .2}\n                  >\n                    <circle \n                      r={getSize(datum[sizeVariable])} \n                      fill={getColor(datum[colorVariable])} \n                      opacity={.8}\n                    />\n                    <text x={getSize(datum[sizeVariable]) + smallestDimension / 100}>\n                      {datum[labelVariable]}\n                    </text>\n                  </g>\n                )\n              })\n            }\n            </g>\n          </g>\n        </svg>\n        <IceCreamControls\n          {\n            ...{\n              xVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n\n              rotateMode,\n              searchString,\n\n              onSearchStringChange,\n              onToggleRotateMode,\n              \n              onXVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleReverseX,\n              onToggleReverseY,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <IceCreamContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import IceCreamContainer from './IceCreamContainer';\n\nexport default IceCreamContainer;","import React, {useState, Suspense} from 'react';\nimport FooterNav from '../FooterNav';\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  prevPage,\n  nextPage\n}) => {\n  const [helpVisible, setHelpVisible] = useState(false);\n  return (\n    <div className=\"slide-container without-visualization\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n      </aside>\n  </div>\n  )\n}\n\nexport default PlainPage;","import GraphAnnotation from './components/GraphAnnotation';\nimport IceCreamAnnotation from './components/IceCreamAnnotation';\nimport PlainPage from './components/PlainPage';\n\nconst routes = [\n  {\n    title: 'Introduction',\n    route: '/introduction',\n    contents: '00_home.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '1. Couverture médias',\n    route: '/01-couverture-media',\n    contents: '01_couverture_media.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '2. Détecter les critiques',\n    route: '/02-detect-critic',\n    contents: '02_detectcritic.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '3. Graphe clusters',\n    route: '/03-graph-clusters',\n    contents: '03_graphclusters.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '4. Évolution de l\\'agenda médiatique',\n    route: '/04-timeline-clusters',\n    contents: '04_timelineclusters.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '5. Topologie du réseau',\n    route: '/05-topologie',\n    contents: '05_toporobotalgo.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '6. Agents calculateurs',\n    route: '/06-agents',\n    contents: '06_explore_entities.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '7. Verbes de troubles',\n    route: '/07-verbs',\n    contents: '07_IssueVERB.mdx',\n    data: 'df_AB_tfidf_verbs_freq_count.csv',\n    Component: IceCreamAnnotation\n  },\n  {\n    title: '8. Temporalité',\n    route: '/08-temporalite',\n    contents: '08_NERdate.mdx',\n    Component: PlainPage\n  },\n  // {\n  //   title: 'Graphe des critiques anglophones',\n  //   route: '/graph-critic-en',\n  //   contents: 'graph-critics.mdx',\n  //   data: 'Graph_Critic_EN_algopress_webV2.gexf',\n  //   Component: GraphAnnotation\n  // },\n  // {\n  //   title: 'Analyse des dates (fichier \"date_ner_tfidf_v3\")',\n  //   route: '/dates-analysis',\n  //   contents: 'dates-analysis.mdx',\n  //   data: 'date_ner_tfidf_v3.tsv',\n  //   Component: IceCreamAnnotation\n  // },\n  // {\n  //   title: 'Analyse des verbes (fichier \"df_AB_tfidf_verbs_freq_count.csv\")',\n  //   route: '/verbs-analysis',\n  //   contents: 'verbs-analysis.mdx',\n  //   data: 'df_AB_tfidf_verbs_freq_count.csv',\n  //   Component: IceCreamAnnotation\n  // }\n]\n\nexport default routes;","import PlainPage from './PlainPage';\n\nexport default PlainPage;","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\n\nimport IceCreamVis from '../IceCream';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n  }) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId)\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n\n        rotateMode,\n        searchString,\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <IceCreamVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n\n                rotateMode,\n                searchString,\n\n                onSearchStringChange,\n                onToggleRotateMode: () => setRotateMode(!rotateMode),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onSizeVariableChange: (val) => setSizeVariable(val),\n                onLabelVariableChange: (val) => setLabelVariable(val),\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link,\n  Redirect,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport {repository} from '../package.json';\n\nimport DataLoader from './components/DataLoader';\n\nimport routes from './summary'\n\n\nexport default function App() {\n  const renderRoute = ({\n    data, \n    contentsURL, \n    Content, \n    ThatComponent,\n    prevPage,\n    nextPage\n  }) => (\n      <DataLoader url={data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined}>\n        {\n          data => (\n            <ThatComponent\n              {\n                ...{\n                  contentsURL,\n                  Content,\n                  prevPage,\n                  nextPage,\n                  data\n                }\n              }\n            />\n          )\n        }\n      </DataLoader>\n  )\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            {\n              routes.map(({title, route}, index) => (\n                <li key={index} className=\"navitem-container\">\n                  <Link to={route}>\n                    {title}\n                  </Link>\n                </li>\n              ))\n            }\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              routes.map(({\n                // title,\n                route, \n                contents,\n                data,\n                Component: ThatComponent\n              }, index) => {\n                const prevPage = index > 0 ? routes[index - 1] : undefined;\n                const nextPage = index < routes.length - 1 ? routes[index + 1] : undefined;\n                const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${contents}`))\n                const contentsURL = `${repository}/blob/main/src/contents/${contents}`;\n                return (\n                  <Route key={index} path={route}>\n                    {renderRoute({data, contentsURL, Content, ThatComponent, prevPage, nextPage})}\n                  </Route>\n                )\n              } )\n              \n            }\n            <Redirect to={routes[0].route} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})"],"sourceRoot":""}