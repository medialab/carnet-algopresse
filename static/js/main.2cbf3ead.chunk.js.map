{"version":3,"sources":["components/GraphBlock/GraphBlock.js","components/GraphBlock/index.js","helpers/misc.js","contexts.js","contents/fr/footer.mdx","contents/en/footer.mdx","contents/fr/chapo.mdx","contents/en/headline.mdx","contents/fr/00_home.mdx","contents/fr/01_couverture_media.mdx","contents/fr/02_detectcritic.mdx","contents/fr/03_graphclusters.mdx","contents/fr/04_timelineclusters.mdx","contents/fr/05_toporobotalgo.mdx","contents/fr/06_explore_entities.mdx","contents/fr/07_IssueVERB.mdx","contents/fr/08_NERdate.mdx","contents/fr/references.mdx","contents/en/00_home.mdx","contents/en/01_couverture_media.mdx","contents/en/02_detectcritic.mdx","contents/en/03_graphclusters.mdx","contents/en/04_timelineclusters.mdx","contents/en/05_toporobotalgo.mdx","contents/en/06_explore_entities.mdx","contents/en/07_IssueVERB.mdx","contents/en/08_NERdate.mdx","contents/en/references.mdx","components/IceCreamBlock/IceCreamBlock.js","components/IceCreamBlock/index.js","components/LinearGraphBlock/LinearGraphBlock.js","components/LinearGraphBlock/index.js","../ /^/.//.*$/ groupOptions: {} namespace object","components/Loader/index.js","components/Loader/Loader.js","components/DataLoader/index.js","components/DataLoader/DataLoader.js","components/Nav/index.js","components/Nav/Nav.js","contents/fr/metadata.js","contents/en/metadata.js","components/GraphAnnotation/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/ColorLegend.js","components/ColorLegend/index.js","components/GraphAnnotation/GraphControls.js","components/GraphAnnotation/icons/magnifier-with-an-eye.svg","components/GraphAnnotation/icons/add-searching.svg","components/GraphAnnotation/icons/delete-searching.svg","components/GraphAnnotation/icons/validate-search.svg","components/GraphAnnotation/icons/magnifier-and-delete-mark.svg","components/GraphAnnotation/GraphNav.js","components/GraphAnnotation/reducers.js","helpers/palettes.js","components/DebouncedInput/index.js","components/DebouncedInput/DebouncedInput.js","components/GraphAnnotation/GraphContainer.js","components/Header/Header.js","components/Header/index.js","components/Footer/index.js","components/Footer/Footer.js","components/LinearGraphAnnotation/LinearGraphControls.js","components/LinearGraphAnnotation/LinearGraphContainer.js","components/IceCreamAnnotation/IceCreamControls.js","components/IceCreamAnnotation/IceCreamContainer.js","components/VisualizationController/VisualizationController.js","components/VisualizationController/index.js","components/FooterNav/index.js","components/FooterNav/FooterNav.js","components/GraphAnnotation/GraphAnnotation.js","components/GraphAnnotation/index.js","components/IceCreamAnnotation/index.js","components/IceCreamAnnotation/IceCreamAnnotation.js","components/LinearGraphAnnotation/index.js","components/LinearGraphAnnotation/LinearGraphAnnotation.js","components/PlainPage/index.js","components/PlainPage/PlainPage.js","summary.js","components/PresentationWrapper/PresentationWrapper.js","components/PresentationWrapper/index.js","App.js","reportWebVitals.js","index.js","components/VisBlock/VisBlock.js","components/VisBlock/index.js"],"names":["GraphBlock","inputProps","ref","useRef","useContext","VisualizationControlContext","onVisualizationUpdate","focusedVisualizationId","onRegisterVisualization","onUnregisterVisualization","setFocusedVisualizationId","visualizationParams","presentationMode","PresentationContext","useState","id","setId","copied","setCopied","useEffect","newId","genId","setTimeout","payload","visType","isFocused","props","VisBlock","onClick","className","cx","title","buildGraphCode","e","preventDefault","stopPropagation","navigator","clipboard","writeText","buildComponentCode","componentName","Object","entries","filter","val","undefined","Array","isArray","length","map","key","JSON","stringify","serializeValue","join","trim","buildIceCreamScatterPlotCode","buildLinearGraphCode","computeFiltersOptions","type","args","computeTableOptions","computeGraphFiltersOptions","data","columns","reduce","res","options","uniq","d","find","o","isNaN","Number","isInteger","includes","min","max","graph","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","forEach","attr","getAttribute","push","Set","forEachNode","_node","cat","has","add","evalIfNodeMatches","attributes","filters","filtersModeAnd","attribute","value","cartesianToPolar","x","y","distance","Math","sqrt","radians","atan2","degrees","PI","radiansToDegrees","polarToCartesian","degreesToRadians","cos","sin","transformGeometry","rotate","translate","finalDegrees","newX","newY","React","createContext","LanguageContext","readingTime","layoutProps","MDXContent","components","mdxType","target","rel","href","src","alt","parentName","isMDXComponent","tableOfContents","frontMatter","graphType","xVariable","xLabelVariable","yVariable","colorVariable","legend","level","children","colorPalette","normalizeY","ratio","displayAllLabels","nodeColorVariable","nodeLabelVariable","labelDensity","reverseY","sizeVariable","labelVariable","rotateMode","colorScaleType","reverseFlickering","IceCreamBlock","LinearGraphBlock","webpackAsyncContext","req","__webpack_require__","Promise","resolve","then","Error","code","ids","all","slice","keys","module","exports","Loader","percentsLoaded","style","width","DataLoader","url","setData","loadingFraction","setLoadingFraction","axios","get","onDownloadProgress","progressEvent","status","loaded","total","inputData","split","pop","csvParse","tsvParse","Nav","lang","routes","onRouteNav","isDeployed","isHidden","activeSectionIndex","route","routeIndex","metadata","usePrevious","current","ControlButton","FiltersEditor","onToggleFiltersModeAnd","filtersOptions","onFiltersChange","isOpen","setIsOpen","newFilterAttribute","setNewFilterAttribute","newFilterOptions","option","index","newFilters","f","i","onChange","sort","a","b","VariablesEditor","variables","isNotAllDefault","v","localOptions","activeOptions","getOptions","label","newVal","ColorItemHandler","modality","color","isEdited","setEdited","editedColor","setEditedColor","debouncedOnChange","debounce","background","newColor","hex","ColorLegend","SLIDER_MARKS","DebouncedSlider","defaultValue","setValue","step","newValue","marks","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","nodeSizeVariable","onNodeSizeVariableChange","onNodeColorVariableChange","onNodeLabelVariableChange","onLabelDensityChange","onColorPaletteChange","onDisplayAllLabelsChange","isMinified","setIsMinified","onSubmit","placeholder","GraphNav","isLocked","onToggleLock","disabled","minus","plus","eye","activate","deactivate","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","DebouncedInput","propsValue","propsOnChange","rest","propagateChange","useMemo","handleChange","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","height","lockCamera","extents","onCameraUpdate","showNav","onToggleCameraLock","cameraPosition","updateTimestamp","onTitleChange","onLegendChange","CELL_HEIGHT_RANGE","CELL_WIDTH_RANGE","cellHeightScale","scaleLinear","domain","range","cellWidthScale","nodeSize","values","from","nodeColor","colors","size","palette","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","previousNodeSize","previousNodeLabelVariable","previousLabelDensity","previousSearchString","previousFilters","previousColorPalette","previousFiltersModeAnd","previousDisplayAllLabels","nodeReducer","nodeLabel","nodeSizeFactor","nodeSizeScale","renderedNode","hidden","createNodeReducer","edgeReducer","el1","el2","renderedEdge","biggerNode","Color","lighten","rgb","string","createEdgeReducer","container","setRenderer","camera","enable","animate","getState","disable","enabled","needToRefresh","settings","actualLabelDensity","cellWidth","cellHeight","labelGrid","cell","displayedLabels","highlightedNodes","displayedLabel","highlightNode","unhighlightNode","toLowerCase","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","labelSize","labelFont","setState","on","state","bind","GraphContainerWithDimensions","dimensions","GraphWrapper","gexf","parse","Graph","sizes","sizeExtent","extent","LanguageToggler","to","Header","isVisible","graphData","onScrollToTop","onScrollToFirstSection","meta","frMetadata","enMetadata","description","creators","generalAuthor","publicationDate","Chapo","contentsCompiled","Helmet","charSet","content","schema","group","people","total2","homepage","itemProp","property","role","person","onScroll","preventScroll","Footer","LinearGraphControls","useRelativeScale","onToggleUseRelativeScale","onGraphTypeChange","onXVariableChange","onXLabelVariableChange","onYVariableChange","onColorVariableChange","onNormalizeYChange","LinearGraphContainer","getX","getY","reverseX","inputColorPalette","onSizeVariableChange","onLabelVariableChange","onToggleReverseX","onToggleReverseY","WIDTH","HEIGHT","MARGIN","xRange","yRange","xLabelMap","dict","datum","dataGroups","_id","ys","sum","filteredY","xValue","xMap","res2","transformedValue","xValues","yPropToFilter","xExtent","nice","uniqBy","item","filtersAffectingColor","colorValue","newValues","highlightedIndex","getYHisto","getColor","reverse","prev","yDisplace","sumFiltered","maxStacked","transform","ticks","tick","textAnchor","x1","y1","x2","y2","stroke","strokeDasharray","firstX","firstY","path","fill","cy","r","index2","LinearGraphContainerWithDimensions","IceCreamControls","labelsOnTheSide","onToggleRotateMode","onToggleLabelsOnTheSide","onColorScaleTypeChange","onReverseFlickeringChange","IceCreamContainer","zoomedIndex","setZoomedIndex","enableZoom","setEnableZoom","updateActive","existing","found","smallestDimension","parseInt","MIN_AREA","MAX_AREA","continuousColorScale","getSize","colorRange","rotateTransform","transf","point1X","point1Y","point2X","point2Y","point3X","point3Y","point4X","point4Y","points","onMouseEnter","onMouseLeave","radius","xForXAxis","yForXAxis","xForYAxis","yForYAxis","labelX","labelY","pointerStartCoords","opacity","isMatching","isZoomed","fontSize","IceCreamContainerWithDimensions","setCameraPosition","pos","buildImprint","VisualizationController","activeImprint","datasets","visualizations","activeVisualization","setLockCamera","firstInstanceOfEachVisualization","groupBy","imprint","firstInstance","renderVisualization","vis","defaultVisualization","FooterNav","prevPage","nextPage","messages","next","fr","en","GraphAnnotation","Content","contentsURL","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setColorPalette","setNodeSizeVariable","setNodeLabelVariable","setLabelDensity","setTitle","setLegend","setDisplayAllLabels","hasLoadedFirstVis","setHasLoadedFirstVis","registeredVisualizations","setRegisteredVisualizations","newSearchString","newFiltersModeAnd","newNodeColorVariable","newColorPalette","newTitle","newLegend","newDisplayAllLabels","thatId","Provider","copyOfRegistered","fallback","str","IceCreamAnnotation","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setLabelsOnTheSide","setColorScaleType","setReverseFlickering","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatLabelsOnTheSide","thatColorScaleType","thatRotateMode","thatSearchString","thatColorPalette","theseFilters","theseFiltersModeAnd","thisTitle","thisLegend","thatReverseFlickering","LinearGraphAnnotation","setXLabelVariable","setGraphType","setUseRelativeScale","setNormalizeY","thatXLabelVariable","thatGraphType","thatUseRelativeScale","thatNormalizeY","finalPalette","PlainPage","contents","Component","buildRouteId","_index","encodeURIComponent","Sections","setVisualizations","sectionsRef","params","finalParams","sectionIndex","omit","PresentationWrapper","match","sectionId","visualizationIndex","createRef","setActiveVisualization","activeVisualizationIndex","setActiveVisualizationIndex","activeSection","setActiveSection","setActiveSectionIndex","setDatasets","history","useHistory","inHeader","setInHeader","inFooter","setInFooter","useReducer","newState","scrollRef","scrollY","useScrollYPosition","newSection","newSectionIndex","relevantVisualization","relevantVisualizations","t","visY","getBoundingClientRect","document","body","top","window","scrollTo","left","innerHeight","el","sectionY","pathname","cur","reject","process","globalFraction","loadedData","catch","newDatasets","console","log","newActiveRouteIndex","newActiveVisualizationIndex","newActiveRoute","newActiveVisualization","DISPLACE_Y","initialSectionY","handleRouteNav","behavior","onBlockClick","LANGUAGES","App","setLang","renderRoute","ThatComponent","onLangChange","ln","otherLang","pathOtherLang","location","routeItem","component","inputRoute","lazy","repository","PresentationContainer","exact","Wrapper","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","forwardRef","filterColorPalette"],"mappings":"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","file":"static/js/main.2cbf3ead.chunk.js","sourcesContent":["import React, {useContext, useEffect, useState, useRef} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext, PresentationContext} from '../../contexts'\nimport {buildGraphCode} from '../../helpers/misc';\n\nimport VisBlock from '../VisBlock';\n\n\nconst GraphBlock = (inputProps) => {\n  const ref = useRef(null);\n\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const {\n    presentationMode\n  } = useContext(PresentationContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => {\n      let payload = {...inputProps};\n      if (presentationMode) {\n        payload = {\n          ...payload,\n          visType: 'networkGraph',\n          ref,\n          id: newId\n        }\n      }\n      onRegisterVisualization(newId, {...payload})\n    })\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [/*id, inputProps, onRegisterVisualization, onUnregisterVisualization*/])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildGraphCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return presentationMode ? (\n    <VisBlock  ref={ref} {...props} id={id}  />\n  )\n  : (\n    <div id={id} ref={ref} onClick={handleClick} className={cx(\"VisualizationBlock GraphBlock\", {'is-focused': isFocused})}>\n      {\n        props.title ?\n        <h2 className=\"block-title\">{props.title}</h2>\n        : null\n      }\n      <pre>\n        <code>\n          {buildGraphCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default GraphBlock;","import GraphBlock from './GraphBlock';\n\nexport default GraphBlock;","import { uniq } from \"lodash\";\nimport { min, max } from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${Object.entries(props)\n    .filter(([_key, val]) => {\n      return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n    })\n    .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n    .join(' \\n  ')\n    .trim()\n  }\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\nexport const buildLinearGraphCode = props => buildComponentCode('LinearGraphBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch (type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n\n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props = {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n        cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({ ...res, [cat.id]: cat }), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (!filters.length) {\n    return true;\n  }\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatch = filters.find(({ attribute, value }) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatch;\n  } else {\n    const oneFilterMatches = filters.find(({ attribute, value }) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}\n\nconst radiansToDegrees = radians => radians * (180 / Math.PI);\nexport const degreesToRadians = degrees => degrees * (Math.PI / 180);\n\nexport const cartesianToPolar = (x, y) => {\n  const distance = Math.sqrt(x * x + y * y);\n  const radians = Math.atan2(y, x);\n  const degrees = radiansToDegrees(radians);\n  return { distance, radians, degrees }\n}\n\nexport const polarToCartesian = (distance, degrees) => {\n  const radians = degreesToRadians(degrees);\n  return {\n    x: distance * Math.cos(radians),\n    y: distance * Math.sin(radians)\n  }\n}\n\nexport const transformGeometry = ({ x, y }, { rotate, translate }) => {\n  const { degrees, distance } = cartesianToPolar(x, y);\n  let finalDegrees = degrees;\n  if (rotate) {\n    finalDegrees += rotate;\n  }\n  let { x: newX, y: newY } = polarToCartesian(distance, finalDegrees);\n  if (translate) {\n    if (translate.x) {\n      newX += translate.x;\n    }\n    if (translate.y) {\n      newY += translate.y;\n    }\n  }\n  return { x: newX, y: newY }\n}\n\nexport function parseQuery(queryString) {\n  const pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');\n  return pairs.filter((k) => k.length)\n  .reduce((res, input) => {\n    const pair = input.split('=');\n    return {\n      ...res,\n      [decodeURIComponent(pair[0])]: decodeURIComponent(pair[1] || '')\n    };\n  }, {})\n}\n","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})\n\nexport const LanguageContext = React.createContext({\n\n})\n\nexport const PresentationContext = React.createContext({\n\n})","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.69,\"time\":41400,\"words\":138}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div className=\"column\">\nCes travaux de recherche ont été réalisés dans le cadre de la Chaire «Good In Tech : repenser l’innovation et les technologies comme moteurs d’un monde meilleur pour et par l’humain » placée sous l’égide de la Fondation du Risque en partenariat avec l’Institut Mines-Télécom et Sciences Po.\n      <div className=\"logos-container\">\n  <a target=\"blank\" rel=\"noopener\" href=\"https://www.goodintech.org/?lng=fr\">\n    <img src=\"https://www.goodintech.org/uploads/1580497528960-Logo.png\" alt=\"logo good in tech\" />\n  </a>\n  <a target=\"blank\" rel=\"noopener\" href=\"https://www.imt.fr/\">\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/IMT_logo_2017.png\" alt=\"logo institut mines télécom\" />\n  </a>\n  <a target=\"blank\" rel=\"noopener\" href=\"https://www.medialab.sciencespo.fr\">\n    <img src=\"https://medialab.sciencespo.fr/img/cover-twitter.png\" alt=\"logo médialab\" />\n  </a>\n      </div>\n    </div>\n    <div className=\"column\">\n      <p>{`Projet `}<strong parentName=\"p\">{`Algoglitch - médialab Sciences Po`}</strong></p>\n      <p>{`Auteurs `}<strong parentName=\"p\">{`Maxime Crépel, Dominique Cardon`}</strong></p>\n      <p>{`Traitement de données `}<strong parentName=\"p\">{`Yannis Bouachera, Salomé Do, Jean-Philippe Cointet`}</strong></p>\n      <p>{`Visualisation `}<strong parentName=\"p\">{`Donato Ricci, Robin De Mourat`}</strong></p>\n      <p>{`Les contenus de ce site sont partagés sous la license `}<a parentName=\"p\" {...{\n          \"href\": \"https://creativecommons.org/licenses/by-nc-sa/4.0/\"\n        }}>{`Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) `}</a></p>\n      <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n            \"href\": \"https://github.com/medialab/carnet-algopresse\"\n          }}>{`Code source de ce site`}</a></strong></p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.69,\"time\":41400,\"words\":138}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <div className=\"column\">\nCes travaux de recherche ont été réalisés dans le cadre de la Chaire «Good In Tech : repenser l’innovation et les technologies comme moteurs d’un monde meilleur pour et par l’humain » placée sous l’égide de la Fondation du Risque en partenariat avec l’Institut Mines-Télécom et Sciences Po.\n      <div className=\"logos-container\">\n  <a target=\"blank\" rel=\"noopener\" href=\"https://www.goodintech.org/?lng=fr\">\n    <img src=\"https://www.goodintech.org/uploads/1580497528960-Logo.png\" alt=\"logo good in tech\" />\n  </a>\n  <a target=\"blank\" rel=\"noopener\" href=\"https://www.imt.fr/\">\n    <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b0/IMT_logo_2017.png\" alt=\"logo institut mines télécom\" />\n  </a>\n  <a target=\"blank\" rel=\"noopener\" href=\"https://www.medialab.sciencespo.fr\">\n    <img src=\"https://medialab.sciencespo.fr/img/cover-twitter.png\" alt=\"logo médialab\" />\n  </a>\n      </div>\n    </div>\n    <div className=\"column\">\n      <p>{`Projet `}<strong parentName=\"p\">{`Algoglitch - médialab Sciences Po`}</strong></p>\n      <p>{`Auteurs `}<strong parentName=\"p\">{`Maxime Crépel, Dominique Cardon`}</strong></p>\n      <p>{`Traitement de données `}<strong parentName=\"p\">{`Yannis Bouachera, Salomé Do, Jean-Philippe Cointet`}</strong></p>\n      <p>{`Visualisation `}<strong parentName=\"p\">{`Donato Ricci, Robin De Mourat`}</strong></p>\n      <p>{`Les contenus de ce site sont partagés sous la license `}<a parentName=\"p\" {...{\n          \"href\": \"https://creativecommons.org/licenses/by-nc-sa/4.0/\"\n        }}>{`Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0) `}</a></p>\n      <p><strong parentName=\"p\"><a parentName=\"strong\" {...{\n            \"href\": \"https://github.com/medialab/carnet-algopresse\"\n          }}>{`Code source de ce site`}</a></strong></p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.645,\"time\":38700,\"words\":129}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Ce site présente une partie des résultats de travaux réalisés dans le cadre du projet  `}<a parentName=\"p\" {...{\n        \"href\": \"https://medialab.sciencespo.fr/activites/algoglitch/\"\n      }}>{`Algoglitch`}</a>{` au médialab de Sciences Po. Il articule des analyses descriptives et des visualisations de données, portant sur un corpus d’articles de presse sur le thème de l’IA et des algorithmes couvrant une période de 5 années aux États-Unis et au Royaume-Uni. A partir de méthode de traitement automatique du langage sur un corpus de presse, cette recherche vise à explorer les discours critiques sur l’IA dans la sphère médiatique. `}</p>\n    <p>{`Citer cette recherche : `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Crépel, M., Cardon D. (2021). Criticism and prophecy in media coverage of AI. Annual Meeting of the Society for Social Studies of Science (4S), Toronto, Canada.`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Crépel, M., Cardon D. (2021). Critique de l’IA dans la presse. `}<a parentName=\"p\" {...{\n          \"href\": \"https://medialab.github.io/carnet-algopresse/#/publication/fr/\"\n        }}>{`https://medialab.github.io/carnet-algopresse/#/publication/fr/`}</a></p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.02,\"time\":1200,\"words\":4}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Headline here (1 paragraph)`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.275,\"time\":136500,\"words\":455}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`En rendant visible les débats des experts et des chercheurs autour des enjeux éthiques (Jobin et al, 2019,  Mittelstadt, 2019) mais aussi en médiatisant les controverses qui émergent parfois au sein des communautés d’utilisateurs sur les effets négatifs des technologies de calcul, les médias contribuent à forger les représentations et à définir les formes d’acceptabilité de l’IA dans nos sociétés. Des travaux ont montré une visibilité croissante du sujet de l’IA dans la couverture médiatique ces dernières années (Brennen et al, 2018), se concentrant principalement sur les avancées technologiques et sur les développements potentiels dans les secteurs du commerce et de l’industrie. Pourtant, les questions éthiques et les problèmes sociaux, tels que les risques de discrimination, les biais, la vie privée sont des thématiques également présentes au sein de la sphère médiatique bien que sous-représentées.`}</p>\n    <p>{`Notre recherche vise à explorer les discours critiques sur l’IA dans la sphère médiatique : Quelles sont les controverses produites par ces technologies qui sont médiatisées dans la presse ? De quoi est constitué le discours médiatique critique sur ces technologies ? Quels types d’agents techniques et humains sont impliqués dans ces controverses ? Quels troubles sont-ils accusés de produire dans la société ?`}</p>\n    <p>{`A partir de méthode de traitement automatique du langage sur un corpus de presse, nous montrons que le thème de l’IA occupe un espace de plus en plus important dans la presse depuis 5 ans et que deux régimes de critique cohabitent au sein de l’espace médiatique, l’un fondé sur les injustices produites par les algorithmes et l’autre portant sur les peurs de l’autonomie de l’IA et des robots. `}</p>\n    <p>{`L’espace médiatique se structure de manière thématique autour de différentes technologies de calcul et domaines d’applications et peut être divisé en deux sous-ensembles sémantiques. L’analyse comparée de ces deux espaces sémantiques rend compte de deux régimes de critique dominants, mobilisant une variété d’entités techniques et humaines, ainsi que des temporalités et des enjeux différents. D’une part, les algorithmes façonnant nos environnements de calcul quotidiens sont associés à un discours critique portant sur les biais, les discriminations, la surveillance et la censure dont des populations spécifiques sont victimes. D’autre part, les robots et l’IA, en tant qu’entités techniques autonomes, incarnées et indépendantes, sont associés à un discours prophétique, alertant sur notre capacité à contrôler ces agents simulant ou dépassant nos capacités physiques et cognitives, mettant ainsi en péril notre sécurité physique, notre modèle économique et menaçant ainsi l’humanité tout entière.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Ces travaux de recherche ont été réalisés dans le cadre de la Chaire «Good In Tech : repenser l’innovation et les technologies comme moteurs d’un monde meilleur pour et par l’humain » placée sous l’égide de la Fondation du Risque en partenariat avec l’Institut Mines-Télécom et Sciences Po`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.16,\"time\":189600,\"words\":632}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport LinearGraphBlock from '../../components/LinearGraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"quelle-est-la-couverture-médiatique-de-lia-\"\n    }}>{`Quelle est la couverture médiatique de l’IA ?`}</h2>\n    <p>{`Notre recherche a consisté à extraire un large corpus de 29 342 d’articles de presse portant sur  l’IA et les algorithmes sur une période de 5 années, réalisée sur l’agrégateur de presse Factiva sur un ensemble de 47 sources de presse généraliste aux États unis et au Royaume Uni (27 sources pour USA et 20 sources pour UK).`}</p>\n    <LinearGraphBlock graphType={'histogram'} xVariable={'month'} xLabelVariable={'fullName'} yVariable={'value'} colorVariable={'default'} title={'Distribution du nombre  d\\'articles sur la requête IA (2015-2019)'} legend={'nombre d\\'articles par mois'} mdxType=\"LinearGraphBlock\" />\n    <p>{`Aujourd’hui, le terme d’IA est largement utilisé pour désigner des dispositifs de calcul allant de simples algorithmes à des systèmes plus complexes basés sur des technologies de deep learning. Afin de donner une définition large et opérationnelle de l’IA nous utilisons ce terme comme “agent de calcul”, en considérant toutes les techniques qui, par le biais d’un calcul automatisé, produisent un résultat à partir de n’importe quel type de données. Cette définition large nous permet de comprendre comment les acteurs eux-mêmes définissent ces technologies et les relient à une pluralité d’activités et d’entités socio-techniques (Seaver, 2017).`}</p>\n    <p>{`La distribution temporelle des données fait apparaître une augmentation du volume d’articles portant sur l’IA - telle que définie par notre requête (voir section méthode) - sur la période d’observation. Cette augmentation atteste de la place de plus en plus importante du thème des algorithmes et de l’IA dans l’espace médiatique ces dernières années. Afin de contrôler cette augmentation au sein de notre corpus, nous avons comparé avec d’autres requêtes effectuées sur la même période et des sources identiques, pour lesquelles on attend une distribution stable. L’observation du volume d’articles extraits à partir de notre requête montre une augmentation significative de 163% entre 2015 et 2019 des publications portant sur l’IA et les algorithmes alors que les articles consacrés à l’art (-9%), la culture (+2%), l’économie (+0%) ou la technologie (+14%) restent relativement stables. `}</p>\n    <p>{`Ce constat d’une augmentation de la visibilité croissante du thème de l’IA a été observé dans d’autres travaux à partir d’analyses statistiques portants sur différentes sources informationnelles (Perrault et al, 2019). Tout d’abord dans presse anglophone, à l’échelle mondiale, à partir d’analyses statistiques produites par le projet GDELT, on observe une croissance du thème de l’IA et des termes associés tels que Deep learning, Machine Learning entre 2017 et 2019. Cette augmentation de la présence du terme de l’IA est aussi largement visible à partir des statistiques de requêtes effectuées sur le moteur de recherche Google aux USA et analysables via le service Google trends sur la période allant de 2015 à 2019. Enfin, le même constat est également fait d’une augmentation entre 2017 et 2019 de la fréquence d’apparition des termes AI et Machine Learning dans différents corpus de documents issus par exemple d’organisations gouvernementales aux USA, au Canada, et au Royaume Uni, mais également dans les appels de fonds des entreprises américaines.`}</p>\n    <div className=\"methodo-container\">\n  <h2 id=\"m-thode-extraction-de-corpus\">Méthode : Extraction de corpus</h2>\n      <p><strong>Requête utilisée sur Factiva</strong> : &quot;artificial intelligence&quot; OR &quot;AI&quot; OR &quot;algorithm<em>&quot; OR &quot;machine learning&quot; OR &quot;deep learning&quot; OR &quot;neural network</em>&quot; -&quot;amnesty international&quot; -&quot;weiwei&quot; -&quot;air india&quot;</p> \n      <p><strong>Période d&#39;extraction</strong> : du 01/01/2015 au 31/12/2019</p>\n      <p><strong>Volume d&#39;articles extraits</strong> : 29 342 articles</p>\n      <p><strong>Sources UK (n=20)</strong> : Daily Mail, Daily Record, Daily star, Economist, Evening Standard, Evening Times, Express, Guardian, Independent, Mail online, Morning Star, Observer, Sunday Mall, Telegraph, The Mirror, The Sunday Mirror, The Sun, The Sunday Times, The Times, Which</p>\n      <p><strong>Sources USA (n=27)</strong> : ABCNEWS, Barron&#39;s, Business Insider, CBS News, Chicago Tribune, CNN, Dailynews, Forbes, Fox News , Los Angeles Times, MSNBC News, New York Newsday, New York Post, New York Times, Newsweek, Politico, Rochester Democrat Chronicle, Slate, The Huffington Post, The Verge, Time Magazine, USA Today, Vice News, Wall Street Journal Online, Wall Street Journal, Washington Post, Washington Times</p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quelle-est-la-couverture-médiatique-de-lia-\",\n    level: 2,\n    title: \"Quelle est la couverture médiatique de l’IA ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.7,\"time\":222000,\"words\":740}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport LinearGraphBlock from '../../components/LinearGraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-détecter-le-discours-critique-dans-les-médias-\"\n    }}>{`Comment détecter le discours critique dans les médias ?`}</h2>\n    <p>{`En s’appuyant sur des outils d’annotations par apprentissage supervisé, un sous corpus d’articles produisant un discours critique des algorithmes et de l’IA a été constitué. `}</p>\n    <p>{`Dans un premier temps, à partir de l’annotation manuelle de 2000 titres d’articles de presse jugés “critiques”, nous avons construit un modèle d’apprentissage automatique. Ensuite, en réalisant plusieurs itérations, incluant des phases de contrôle des résultats, le modèle de détection des articles “critiques” a été optimisé progressivement (voir section méthode). Tous les titres d’articles comportant des arguments ou éléments sémantiques négatifs portant explicitement sur une forme de calculateur (algorithme, IA, robot, etc.) ont été annotés comme critiques. À l’inverse ont été annotés comme non critiques ou ignorés les titres d’articles aux énoncés neutres, positifs, ambigus ou n’évoquant pas directement un calculateur. Par exemple les titres “Robocops to replace british bobbies on the streets, police force reveals” ou “Growth of ai could boost cybercrime and security threats , report warns”  ont été annotés comme critiques, alors que “AI to create more than 7m jobs” ou “Google so advanced stores will pack your products before you’ve thought of ordering them” ont été annotés non critiques. `}</p>\n    <LinearGraphBlock graphType={'histogram'} xVariable={'index'} xLabelVariable={'fullName'} yVariable={'value'} colorVariable={'type'} colorPalette={{\n      \"not critic\": \"#c5c9c9\",\n      \"critic\": \"#e60c26\"\n    }} filtersModeAnd={true} title={'Distribution du taux d\\'articles critiques et non critiques (2015-2019) '} legend={'Fréquence en % des articles critiques et non critiques détectés par le modèle validés manuellement'} normalizeY={true} mdxType=\"LinearGraphBlock\" />\n    <p>{`Étant donné le travail de sourcing manuel du corpus de départ et l’usage de méthode d’annotation par apprentissage supervisé, ce corpus ne prétend pas à une quelconque exhaustivité ou représentativité. Notre démarche permet en revanche d’appréhender avec la plus large diversité possible les thèmes associés à la critique de l’IA et des algorithmes. `}</p>\n    <p>{`A partir de ce protocole de catégorisation, un sous corpus de 2 091 articles de presse catégorisés comme critiques a été constitué. Le taux d’articles annotés comme critiques est de 7,1% en moyenne sur l’ensemble du corpus et présente une assez forte stabilité durant la période observée (écart type de +/- 2,2%). Des travaux portant sur l’analyse de la couverture médiatique du thème de l’IA en Grande Bretagne ont montré qu’une très large majorité des publications portaient sur les avancées technologiques et les développements dans le secteur économique, les questions éthiques associées au déploiement de ces technologies sont sous représentés dans la presse (Brennen et al, 2018). `}</p>\n    <div className=\"methodo-container\">\n  <h2 id=\"m-thode-d-tection-du-discours-critique-par-apprentissage-supervis-\">Méthode : Détection du discours critique par apprentissage supervisé</h2>\n  <p><strong>Modèle utilisé pour la détection du discours critique :</strong> FastText - <a href=\"https://fasttext.cc\">https://fasttext.cc</a></p>\n  <p><strong>Corpus d&#39;apprentissage :</strong> 2000 articles annotés manuellement via prodigy - <a href=\"https://prodi.gy\">https://prodi.gy</a></p>\n  <p><strong>Règles de codage des articles :</strong> </p>\n  <ul>\n  <li>Critique : énoncés critiques ou réponse à une critique  (champ sémantique ou arguments critiques), évocation d’un calculateur ( algorithme, IA, robot, etc.). Exemple : « Robots put jobs at risk », \n  « Robot lawyers: how humans can fight back »</li>\n  <li>Non critique : énoncés neutres ou positifs, pas d’évocation d’un calculateur. Exemple : « AI to &#39;create more than 7m jobs’ », \n  « In the 2020s, artificial intelligence will transform the work of lawyers »</li>\n  <li>Ignore : énoncés ambigus, pas d’évocation d’un calculateur. Exemple : « Restaurants are now employing robots – should chefs be worried? », « Need a lawyer? There&#39;s an algorithm for that »</li>\n  </ul>\n  <p><strong>Comparaison des modèles de détection de la critique :</strong> \n  Afin de s’assurer de la variété et de la précision des articles différents modèles d’annotation ont été comparés et améliorés par itérations successives et un contrôle manuel systématique des résultats produits par ces modèles ont été effectués. C&#39;est finalement le modèle FastText qui a produit la détection la plus précise des articles critiques</p>\n  <p><strong>Résultats du modèle FasText de détection de la critique : </strong> \n <ul>\n <li>Precision : 0,94</li>\n <li>Recall : 0,79</li>\n <li>F1-score : 0,86</li>\n </ul>\n    \n  Cette approche méthodologique a permis de traiter une large base de données qui aurait été difficilement catégorisable manuellement. En revanche, les outils mobilisés de catégorisation automatique par apprentissage supervisé comportent un risque potentiel de ne pas détecter certains articles critiques dans le corpus. Pourtant, les itérations successives réduisent ce biais car les résultats obtenus à chaque itération montrent un épuisement des capacités du modèle à détecter de nouveaux articles critiques. Par ailleurs, des opérations de contrôle manuel systématique de l’ensemble des résultats produits par l‘algorithme ont permis de s’assurer que le sous corpus d’articles catégorisés comme critiques ne contenait pas de faux positifs. </p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-détecter-le-discours-critique-dans-les-médias-\",\n    level: 2,\n    title: \"Comment détecter le discours critique dans les médias ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"9 min read\",\"minutes\":8.27,\"time\":496200,\"words\":1654}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"quels-sont-les-thèmes-sur-lesquels-porte-la-critique-\"\n    }}>{`Quels sont les thèmes sur lesquels porte la critique ?`}</h2>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} displayAllLabels={true} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'2991 noeuds, 54062 liens de cooccurrences, couleurs relatives aux clusters, taille des relative fréquence des termes dans le corpus '} mdxType=\"GraphBlock\" />\n    <p>{`A partir d’une extraction des termes les plus représentés au sein du contenu des 2 091articles annotés comme critiques, on produit un réseau sémantique constitué de 2 991 termes (ou suites de termes) reliés entre eux par 54 062 liens de cooccurrences. La spatialisation est basée sur une variante de l’algorithme Fruchterman Reingold. La position des nœuds est optimisée par leur appartenance aux clusters détectés automatiquement par l’algorithme de Louvain. La couleur des nœuds est relative à chacun des clusters ainsi détectés et leur taille est relative à leur fréquence dans le corpus. `}</p>\n    <p>{`À partir des termes les plus représentés au sein de chacun des clusters on peut interpréter et nommer les thèmes qui structurent l’espace sémantique de ce corpus d’articles critiques de l’IA et des algorithmes. La cartographie est constituée de 23 clusters thématiques de tailles variées qui représentent des types de calculateurs ou des domaines d’application différents. Chaque terme est associé à un unique cluster, même s’il peut entretenir des liens de cooccurrence avec d’autres termes appartenant à des clusters différents. De la même manière, à chaque article du corpus, en fonction des termes qu’il contient, lui est associé un cluster. Une première lecture du réseau consiste à décrire les thèmes les plus présents au sein du corpus en nombre d’articles et d’en proposer une illustration succincte à partir d’exemples de titres prototypiques qui leurs sont associés.`}</p>\n    <p>{`Les deux plus importants clusters du graphe en nombre d’articles forment deux pôles opposés. `}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Web_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Future_of_AI\"\n    }]} displayAllLabels={true} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={0.25} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} title={'Filtrage de clusters sur le réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Clusters Future_of_AI, Web_Algorithms'} mdxType=\"GraphBlock\" />\n    <p>{`Le plus important nommé `}<strong parentName=\"p\">{`“Web Algorithms\"`}</strong>{`, représentant 22% des articles du corpus critique, comporte des articles qui traitent des troubles produits par les algorithmes du web tels que les techniques de classement du newsfeed de Facebook (`}<em parentName=\"p\">{`Facebook accused of censoring conservatives, report says`}</em>{` - The Guardian - 10/05/16), les recommandations de vidéos sur Youtube (`}<em parentName=\"p\">{`YouTube, the Great Radicalizer`}</em>{` - The New York Times - 11/03/18) ou encore les moteurs de recherche comme Google (`}<em parentName=\"p\">{`Google results claim that the Holocaust didn’t happen, and company won’t change it`}</em>{` - Independent Online - 15/12/16). `}</p>\n    <p>{`À l’extrémité opposée du réseau, on trouve le second plus important cluster nommé `}<strong parentName=\"p\">{`“Future of AI”`}</strong>{` qui représente 18% des articles du corpus, évoquant les risques de l’émergence d’intelligences artificielles et de machines autonomes imitant ou surpassant les capacités humaines (`}<em parentName=\"p\">{`AI will create “useless class” of human, predicts bestselling historian`}</em>{` - The Guardian - 20/05/16) ou menaçant l’humanité d’extinction (`}<em parentName=\"p\">{`End of Humanity ? Artificial Intelligence could destroy us ‘within decades’ warns expert`}</em>{` - express.co.uk - 15/04/16).`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Facial_Recognition\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Job_Automation\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Killer_Robots\"\n    }]} displayAllLabels={true} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={0.25} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} title={'Filtrage de clusters sur le réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Clusters Job_Automation, Facial_Recognition, Killer_Robots'} mdxType=\"GraphBlock\" />\n    <p>{`Parmi les plus importants clusters, on trouve trois autres thèmes largement représentés dans le corpus. `}</p>\n    <p>{`Le cluster `}<strong parentName=\"p\">{`“Job automation”`}</strong>{` (14% des articles) contient des articles alertant sur les risques de mutation du marché de l’emploi face à la robotisation et au déploiement de l’IA dans le monde du travail (`}<em parentName=\"p\">{`Robots and AI are threatening close to a third of UK jobs, study reveals`}</em>{` - Independent Online - 24/03/17). `}</p>\n    <p>{`Le cluster `}<strong parentName=\"p\">{`“Killer robots”`}</strong>{` (11% des articles) est constitué d’articles sur les risques du déploiement de l’IA et de machines autonomes dans le cadre de conflits armés (`}<em parentName=\"p\">{`Top scientists call for ban on killer robots to prevent apocalyptic war`}</em>{` - dailystar.co.uk - 20/08/17). `}</p>\n    <p>{`Enfin, le cluster `}<strong parentName=\"p\">{`“Facial recognition”`}</strong>{`, qui représente 10% des articles du corpus, porte sur différents développements des technologies de reconnaissance faciale dans l’espace public, dans des logiciels ou sur les plateformes du Web (`}<em parentName=\"p\">{`China is now using facial recognition cameras to monitor Uighur Muslims across the country, report claims`}</em>{` - Mail Online - 15/04/19). `}</p>\n    <p>{`L’ensemble de ces 5 plus grands clusters thématiques domine largement l’espace médiatique car ces derniers constituent 75,6% du total des articles du corpus critique (1581 articles) et représentent 46,4% des termes du réseau sémantique (1389 termes).`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Autonomous_Cars\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Voice_Assistant\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Sex_Robots\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Health_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Deepfake\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Predictive_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Chatbot\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Game_&_Education\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Profiling_Algorthms\"\n    }]} displayAllLabels={true} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} title={'Filtrage de clusters sur le réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Clusters associés entre 1% et 4% des articles du corpus'} mdxType=\"GraphBlock\" />\n    <p>{`Un second ensemble, bien que très hétérogène du point de vue des thématiques déployées et de leur position au sein du réseau, est constitué de 9 clusters qui représentent respectivement entre 1% et 4% du nombre d’articles du corpus. L’ensemble de ces thèmes représente 21,6% des articles du corpus (452 articles) et 38 % des termes du réseau sémantique (1136 termes). Dans ce sous-ensemble se trouvent les clusters :`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Voice Assistant”`}</strong>{` : `}<em parentName=\"li\">{`Google’s Nest microphone intensifies privacy concerns`}</em>{` -  `}<em parentName=\"li\">{`The Washington Post`}</em>{` - 25/02/19`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Autonomous Cars”`}</strong>{` : `}<em parentName=\"li\">{`Self-driving cars will need to be programmed to kill their owners, academics warn, and people will have to choose who will die`}</em>{` - Independent Online - 27/10/15`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Sex Robots”`}</strong>{` : `}<em parentName=\"li\">{`Sex robots could lead to population crisis as men opt for virtual girlfriends`}</em>{` - Mirror.co.uk - 27/01/19`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Health_Algorithms”`}</strong>{` : `}<em parentName=\"li\">{`Racial bias in a medical algorithm favors white patients over sicker black patients`}</em>{` - `}<em parentName=\"li\">{`The Washington Post`}</em>{`  - 25/10/19`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Deepfake”`}</strong>{` : `}<em parentName=\"li\">{`You thought fake news was bad? Deep fakes are where truth goes to die`}</em>{` -  `}<em parentName=\"li\">{`The Guardian`}</em>{`  - 2/11/18`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Predictive Algorithms”`}</strong>{` : `}<em parentName=\"li\">{`Criminal justice software algorithm used across the US is biased against black inmates, study finds`}</em>{` - Independent Online - 27/06/16`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Chatbot”`}</strong>{` : `}<em parentName=\"li\">{`Microsoft “deeply sorry” after AI becomes “Hitler-loving sex robot”`}</em>{` - The Telegraph Online - 26/03/16`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Game and Education”`}</strong>{` : `}<em parentName=\"li\">{`Korean Go master quits the game because AI 'cannot be defeated`}</em>{` - CNN Wire - 28/11/19`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Profiling Algorithms”`}</strong>{` : `}<em parentName=\"li\">{`Artificial intelligence can identify “gay faces” from a picture, study claims`}</em>{` - Independent Online - 08/09/17`}</li>\n    </ul>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Robo-Advisers\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"DeepDream_Nightmares\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Deep_Voice\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Scientific_Research\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Market_&_Prices\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Image_Search\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Email\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Music\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Consumer_&_Copyright\"\n    }]} displayAllLabels={true} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} title={'Filtrage de clusters sur le réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Clusters associés entre 0,1% et 0,8% des articles du corpus'} mdxType=\"GraphBlock\" />\n    <p>{`Enfin, le graphe se compose de 9 autres clusters de taille très réduite, entre 0,8% et 0,1% des articles pour chaque cluster (58 articles au total). Les termes extraits de ces articles représentent pourtant 15,6% (466 termes au total) de la totalité des termes du graphe. Ces thématiques peuvent s’apparenter à des signaux faibles d’un discours critique sur les algorithmes et l’IA détectés par notre méthode d’extraction de termes, pourtant sous représentés en volume d’articles. Ces clusters se centrent autour de thématiques très spécifiques, évoquant parfois des types de calculateurs mais le plus souvent des domaines d’application :`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Robot-Advisers”`}</strong>{` : `}<em parentName=\"li\">{`Mortgage algorithms found to have racial bias`}</em>{` - The Washington Post - 15/11/18`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“DeepDream Nightmares”`}</strong>{` : `}<em parentName=\"li\">{`The AI 'nightmare machine’: Spooky Google algorithm transforms famous sights into horror scenes`}</em>{` - Mail Online - 25/10/16`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Deep Voice”`}</strong>{` : `}<em parentName=\"li\">{`Creepy AI can clone anyone’s voice with just one minute of audio`}</em>{` - Mail Online - 25/04/17`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Scientific Research”`}</strong>{` : `}<em parentName=\"li\">{`Facebook shuts down chatbot experiment after AIs spontaneously develop their own language`}</em>{` - London Evening Std Online - 01/08/17`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Market and Prices”`}</strong>{` : `}<em parentName=\"li\">{`Artificial Intelligence - Beware Algorithms That Could Collude To Unfairly Raise Prices`}</em>{` - The Wall Street Journal - 02/04/19`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Image Search”`}</strong>{` : `}<em parentName=\"li\">{`Three black teenagers’: anger as Google image search shows police mugshots`}</em>{` - The Guardian - 10/06/16`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Email”`}</strong>{` : `}<em parentName=\"li\">{`Google expands “creepy” Gmail AI that can automatically reply to emails for you`}</em>{` - Mail Online - 31/08/18`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Music”`}</strong>{` : `}<em parentName=\"li\">{`Why “random” shuffle feels far from random`}</em>{` - Independent Online - 24/02/15`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`“Consumer and Copyright”`}</strong>{` : `}<em parentName=\"li\">{`Apple is forced to change its App Store search algorithm after it emerged its own products were being ranked significantly higher`}</em>{` - Mail Online - 09/09/19`}</li>\n    </ul>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} displayAllLabels={true} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'2991 noeuds, 54062 liens de cooccurrences, couleur relative aux clusters, taille des relative fréquence des termes dans le corpus '} mdxType=\"GraphBlock\" />\n    <div className=\"methodo-container\">\n  <h2 id=\"m-thode-extraction-et-visualisation-du-graphe-de-termes\">Méthode : Extraction et visualisation du réseau de termes</h2>\n      <p><strong>Extraction de termes du corpus : </strong>\nL’analyse sémantique du corpus critique a été réalisée à partir du logiciel Cortext - <a href=\"https://www.cortext.net\">https://www.cortext.net</a> en effectuant une extraction de termes sur le texte complet des articles (titre, lead paragraph et texte) puis un nettoyage des listes de termes extraites par suppression de stopwords (balises des fichiers vidéo ou éléments de timecode non nettoyés dans Factiva). \nL’extraction de termes a été réalisée à partir de la méthode “pigeon holes” (favorisant la spécificité des termes et leur occurrence par document) au niveau des phrases. 6000 termes incluant des monogrammes ainsi que les bigrammes et trigrammes ont été extraits. S'il peut paraitre étrange que certains termes assez proches ont été conservés, par exemple toutes les variantes de facial recognition, nous avons fait le choix de conserver cette hétérogénéité afin de rendre compte de la diversité des manières de définir les agents calculateurs au sein des articles.\n      </p>\n      <p><strong>Spatialisation du réseau sémantique et clustering : </strong>\nA partir d’une extraction des termes les plus représentés au sein du contenu des 2 091 articles annotés comme critiques, on produit un réseau sémantique constitué de 2 991 termes (ou suites de termes) reliés entre eux par 54 062 liens de cooccurrences. La spatialisation est basée sur une variante de l’algorithme Fruchterman Reingold. La position des nœuds est optimisée par leur appartenance aux clusters détectés automatiquement par l’algorithme de Louvain. La couleur des nœuds est relative à chacun des clusters ainsi détectés et leur taille est relative à leur fréquence dans le corpus.</p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quels-sont-les-thèmes-sur-lesquels-porte-la-critique-\",\n    level: 2,\n    title: \"Quels sont les thèmes sur lesquels porte la critique ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.38,\"time\":142800,\"words\":476}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport LinearGraphBlock from '../../components/LinearGraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-évolue-lagenda-médiatique-\"\n    }}>{`Comment évolue l’agenda médiatique ?`}</h2>\n    <LinearGraphBlock graphType={'linegraph'} xVariable={'month'} xLabelVariable={'fullName'} yVariable={'value'} colorVariable={'topic'} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} filters={[{\n      \"attribute\": \"topic\",\n      \"value\": \"Web_Algorithms\"\n    }, {\n      \"attribute\": \"topic\",\n      \"value\": \"Future_of_AI\"\n    }]} title={'Distribution du nombre d\\'articles critiques par clusters (2015-2019)'} legend={'Clusters Web_Algorithms, Future_of_AI'} mdxType=\"LinearGraphBlock\" />\n    <p>{`L’analyse de la distribution temporelle du nombre d’articles des dix plus importants clusters sur la période de 5 années que couvre le corpus critique laisse apparaître trois profils distincts. On observe une distribution assez stable sur la période de la répartition des articles des deux plus grands clusters structurants de la cartographie que sont les “Web Algortihms” et “Future of AI”. La distribution de ces deux plus grands clusters montre qu’il existe une production régulière d’articles critiques sur les troubles liés aux algorithmes du web et aux craintes relatives aux développements futurs de l’intelligence artificielle et des robots. Ces thèmes concentrent le plus grand nombre d’articles et forment deux pôles sur lesquels s’établit de façon récurrente un discours critique. `}</p>\n    <LinearGraphBlock graphType={'linegraph'} xVariable={'month'} xLabelVariable={'fullName'} yVariable={'value'} colorVariable={'topic'} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} filters={[{\n      \"attribute\": \"topic\",\n      \"value\": \"Deepfake\"\n    }, {\n      \"attribute\": \"topic\",\n      \"value\": \"Facial_Recognition\"\n    }]} title={'Distribution du nombre d\\'articles critiques par clusters (2015-2019)'} legend={'Clusters Deepfake, Facial_Recognition'} mdxType=\"LinearGraphBlock\" />\n    <p>{`Un second profil de distribution concerne les clusters “Facial recognition” et “Deepfake” qui connaissent une hausse importante du volume d’articles publiés sur l’année 2019.`}</p>\n    <p>{`Enfin le troisième profil de distribution montre une hausse du nombre d’articles qui se concentrent sur les années 2017 et 2018 et une baisse significative sur l’année 2019. Ce type de distribution concerne les clusters “Job Automation”, “Killer Robots”, “Autonomous Cars”, “Sex Robots”, “Voice Assistant”, “Predictive Algorithms”.`}</p>\n    <LinearGraphBlock graphType={'linegraph'} xVariable={'month'} xLabelVariable={'fullName'} yVariable={'value'} colorVariable={'topic'} colorPalette={{\n      \"Future_of_AI\": \"#f17325\",\n      \"Profiling_Algorthms\": \"#2cab57\",\n      \"Job_Automation\": \"#f5253e\",\n      \"Market_&_Prices\": \"#6bc06c\",\n      \"Predictive_Algorithms\": \"#adcd24\",\n      \"Web_Algorithms\": \"#d8dd0d\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#106f88\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#e9c33f\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#32968a\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#19d2d4\",\n      \"Sex_Robots\": \"#e94d6c\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#2ea2b3\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} filters={[{\n      \"attribute\": \"topic\",\n      \"value\": \"Killer_Robots\"\n    }, {\n      \"attribute\": \"topic\",\n      \"value\": \"Job_Automation\"\n    }, {\n      \"attribute\": \"topic\",\n      \"value\": \"Voice_Assistant\"\n    }, {\n      \"attribute\": \"topic\",\n      \"value\": \"Sex_Robots\"\n    }]} title={'Distribution du nombre d\\'articles critiques par clusters (2015-2019)'} legend={'Clusters Job_Automation, Killer_Robots, Sex_Robots, Voice_Assistant'} mdxType=\"LinearGraphBlock\" />\n    <p>{`Il est plus difficile d’interpréter ces distributions irrégulières étant donné la méthode d’annotation du corpus utilisée, mais elles semblent montrer la manière dont la presse, en focalisant son attention sur certaines technologies plutôt que d’autres, constitue un agenda médiatique sur lequel se déploie également un discours critique. Afin de vérifier cette hypothèse d’une distribution concentrée sur des périodes spécifiques, focalisant l’attention médiatique sur certaines technologies, indépendamment de la production d’un discours critique, nous avons tenté d’observer les distributions de certains termes constitutifs de ces clusters au sein du corpus d’articles étiquetés comme non-critique. Ces distributions montrent une répartition similaire à celle observée pour les clusters du corpus critique. Par exemple, les termes relatifs aux “deepkakes” et à la “facial recognition” connaissent une fréquence d’apparition croissante au sein des articles non critiques entre 2018 et 2019. L’ensemble des termes associés aux robots sexuels, aux voitures autonomes et assistants vocaux présents dans le corpus étiqueté comme non critique connaissent leur plus forte fréquence sur les années 2017 et 2018 avant de diminuer en 2019. Cette analyse comparative entre la distribution des articles critiques et non critiques nécessite d’être approfondie mais elle semble renforcer l’idée d’un agenda médiatique, indépendant de la production d’un discours critique, se focalisant sur des technologies qui gagnent en visibilité pendant certaines périodes. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-évolue-lagenda-médiatique-\",\n    level: 2,\n    title: \"Comment évolue l’agenda médiatique ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"5 min read\",\"minutes\":4.295,\"time\":257700,\"words\":859}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"que-nous-apprend-la-topologie-du-réseau-\"\n    }}>{`Que nous apprend la topologie du réseau ?`}</h2>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1} displayAllLabels={true} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\",\n      \"Intermed\": \"#a39f9f\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'2991 noeuds, 54062 liens de cooccurrences, couleurs relatives aux meta-clusters, taille des relative fréquence des termes dans le corpus '} mdxType=\"GraphBlock\" />\n    <p>{`La dispersion des clusters dans l’espace topologique laisse apparaître une opposition entre deux principaux types de calculateurs. On observe ainsi un déplacement entre la partie droite du graphe qui comporte des articles mettant en scène des techniques de calcul algorithmique incorporées dans l’environnement de l’utilisateur pour guider, orienter ou calculer ses comportements, vers la partie gauche qui comporte des articles qui se caractérisent par la personnification de l’IA dans une entité incarnée et autonome à l’égard des humains.`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1} displayAllLabels={true} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\",\n      \"Intermed\": \"#a39f9f\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Filtrage par meta-cluster \"algorithmes\"'} mdxType=\"GraphBlock\" />\n    <p>{`La première zone à droite concerne exclusivement des algorithmes, qu’ils s’agissent des algorithmes du Web comme le fil d’actualité de Facebook, la section trending topic de Twitter, les algorithmes de recherche d’images et de sites web de Google. La plupart de ces agents algorithmiques constituent les couches techniques de services déployés dans nos environnements numériques quotidiens. D’autres représentent des technologies plus émergentes qui font l’objet de développements et d’expérimentations plus localisées et régulées tels les algorithmes de police ou de justice prédictive, de détection des images dans les systèmes de reconnaissance faciale ou les deepfakes.`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1} displayAllLabels={true} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\",\n      \"Intermed\": \"#a39f9f\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Filtrage par meta-cluster \"robots\"'} mdxType=\"GraphBlock\" />\n    <p>{`Dans la partie la plus à gauche, à l’opposé du réseau, les clusters se concentrent autour d’agents calculateurs qui sont davantage incarnés sous forme de machines ou de robots. Les entités qui peuplent cette zone sont personnifiées dans des dispositifs physiques séparés de nos équipements numériques habituels que sont nos ordinateurs et nos smartphones. Ces dispositifs sont équipés d’une capacité d’agir autonome via de systèmes de calcul basés sur l’IA. En simulant à la fois le corps et les capacités cognitives des humains, ils sont en mesure de produire certaines actions sans intervention humaine dans différents domaines telles que le transport avec les voitures autonomes, la défense avec les robots tueurs et les drones, le travail avec l’automatisation des tâches ou encore les relations physiques avec les robots sexuels.`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Intermed\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1} displayAllLabels={true} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\",\n      \"Intermed\": \"#a39f9f\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Filtrage par meta-cluster \"intermédiaire\"'} mdxType=\"GraphBlock\" />\n    <p>{`Entre ces deux pôles, il existe une zone intermédiaire plus difficilement identifiable, constituée de dispositifs à mi-chemin entre les machines autonomes et les algorithmes de nos environnements numériques quotidiens. Parmi les agents calculateurs présents dans cet espace on retrouve par exemple les assistants vocaux pouvant être embarqués dans nos smartphone ou dans des dispositifs du type enceinte connectées, les chatbots du Web, les robo-advisors qui sont les algorithmes effectuant des opérations dans le domaine de la finance ou encore des technologies de deep learning comme le dispositif Deep Dream de Google. Ces technologies bien qu’assez accessibles au grand public sont souvent encore émergentes. Elles ont la capacité de gérer un certain nombre de tâches parfois basiques de manière autonome mais ne sont pas toujours incarnées dans des dispositifs physiques, elles sont encore le plus souvent implémentées et accessibles via nos ordinateurs et smartphones.`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} nodeColorVariable={'algo_robot'} nodeLabelVariable={'cluster_label'} labelDensity={1} displayAllLabels={true} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'Filtrage par meta-cluster'} mdxType=\"GraphBlock\" />\n    <p>{`La tendance du graphe à séparer des dispositifs de calcul aux propriétés différenciées, nous amène à explorer ces dimensions de manière plus approfondie. Afin de réaliser une analyse comparative entre les deux pôles qui se dégagent de l’analyse topologique, le choix a été fait de découper le réseau en deux sous-ensembles comparables en volume d’articles, de clusters et de termes. Ainsi, l’espace intitulé «Robots» compte 52% des articles du corpus, 9 clusters principaux (de taille supérieure à 1%) et 1790 termes. L’espace intitulé « Algorithmes » représente quant à lui 48% articles, 8 clusters principaux et 1201 termes. Par une approche comparative, ce découpage en deux sous-ensembles équivalents permet d’explorer les différents attributs qui peuplent ces deux espaces sémantiques.`}</p>\n    <div className=\"methodo-container\">\n  <h2 id=\"m-thode-division-du-graphe-et-du-corpus-selon-la-topologie\">Méthode : Division du réseau et du corpus selon la topologie</h2>\n  <p>Pour faciliter une analyse comparative entre l&#39;espace sémantique interprété comme lié aux &quot;robots&quot; et l&#39;espace lié aux &quot;algorithmes&quot; chaque cluster a été associé à l&#39;une ou l&#39;autre de ces catégories. Les deux sous-ensembles sont comparables en volume d’articles, de clusters et de termes. </p>\n  <p>L&#39;espace intitulé “robots” compte : </p>\n  <ul>\n  <li>9 clusters principaux (de taille supérieure à 1% du corpus d&#39;articles)</li>\n  <li>52% des articles du corpus (chaque article étant associé à un unique cluster)</li>\n  <li>1790 termes au sein du réseau (chaque terme étant associé à un unique cluster). </li>\n  </ul>\n  <p>L’espace intitulé “algorithmes” compte : </p>\n  <ul>\n  <li>8 clusters principaux (de taille supérieure à 1% du corpus d&#39;articles)</li>\n  <li>48% articles (chaque article étant associé à un unique cluster)</li>\n  <li>1201 termes au sein du réseau (chaque terme étant associé à un unique cluster).</li>\n  </ul>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"que-nous-apprend-la-topologie-du-réseau-\",\n    level: 2,\n    title: \"Que nous apprend la topologie du réseau ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"9 min read\",\"minutes\":8.97,\"time\":538200,\"words\":1794}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"quelles-entités-peuplent-le-réseau-sémantique-\"\n    }}>{`Quelles entités peuplent le réseau sémantique ?`}</h2>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} displayAllLabels={true} nodeColorVariable={'algo_robot'} nodeLabelVariable={'cluster_label'} labelDensity={1} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'2991 noeuds, 54062 liens de cooccurrences, couleurs relatives aux meta-clusters, taille des relative fréquence des termes dans le corpus '} mdxType=\"GraphBlock\" />\n    <p>{`Pour mettre en évidence les caractéristiques de ces deux espaces de critique, nous avons entrepris d’identifier systématiquement la manière dont sont désignées les entités techniques, la société qui les abrite et la façon dont les premiers ont des effets sur la seconde. Tous ces discours critiques cherchent à qualifier la manière dont des Agents produisent des Victimes en exerçant un type particulier d’opération, ces dernières sont constitutives d’un ensemble de troubles révélant autant de défis ou d’enjeux produits par le déploiement des techniques d’IA dans nos sociétés (Cardon, Crépel, 2019).`}</p>\n    <p>{`Afin de différencier ces entités au sein du réseau, la plupart des termes, ne souffrants pas trop d’ambiguïté (66% des termes du graphe), ont été annotés manuellement en dix catégories distinctes. Parmi ces catégories, notre analyse consiste à comparer trois d’entre elles qui apparaissent particulièrement pertinentes pour différencier les deux espaces. La catégorie “Technical” renvoie à ce que nous avons désigné comme agents calculateurs, elle concerne tous les termes relatifs aux entités techniques tels que les algorithmes, les machines, les fonctionnalités ou services techniques, les terminaux mais également les technologies issues de startup, parfois difficiles à différencier des entités économiques. La seconde catégorie relative aux agents humains, nommée “People”, concerne tous les termes désignant des personnes ou groupes de personnes non nominatives (à la différence des catégories “Person” pour les noms propres et “Institutions” pour les groupes ou structures ayant une existence juridique). Enfin, la troisième catégorie, nommée “Issues”, permet d’identifier les termes qui désignent des enjeux, des difficultés ou des problèmes extraits au sein des articles. `}</p>\n    <h2 {...{\n      \"id\": \"quelles-sont-les-entités-techniques-\"\n    }}>{`Quelles sont les entités techniques ?`}</h2>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} labelDensity={0.98} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"techinal\"'} mdxType=\"GraphBlock\" />\n    <p>{`Si l’on compare les termes les plus fréquents catégorisés en tant qu’entités techniques, ce qui caractérise la zone « Robots » de notre cartographie est le très haut degré d’intelligence et d’autonomie des IA, ainsi que leur capacité à être incarnées sous la forme de machines. Que ce soit pour la conduite automobile, le sexe, la guerre ou la production industrielle, ces entités techniques sont dotées de capacité d’initiatives autonomes. `}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} filtersModeAnd={true} labelDensity={0.98} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"techinal\" et meta-cluster \"robots\"'} mdxType=\"GraphBlock\" />\n    <p>{`On observe que dans l’espace « Robots » les calculateurs renvoient le plus souvent à des dispositifs incarnés tels que les `}<em parentName=\"p\">{`robots`}</em>{`, `}<em parentName=\"p\">{`machines`}</em>{`, `}<em parentName=\"p\">{`computers`}</em>{`, `}<em parentName=\"p\">{`cars`}</em>{`, `}<em parentName=\"p\">{`weapons`}</em>{`, `}<em parentName=\"p\">{`drones`}</em>{` ou `}<em parentName=\"p\">{`dolls`}</em>{`. D’autres entités techniques se distinguent car elles renvoient à une définition très abstraite et générique des calculateurs qui sont désignés en tant que `}<em parentName=\"p\">{`system`}</em>{`, `}<em parentName=\"p\">{`artificial intelligence`}</em>{` ou encore comme `}<em parentName=\"p\">{`automation`}</em>{` ou `}<em parentName=\"p\">{`model`}</em>{`.`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} filtersModeAnd={true} labelDensity={0.98} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"techinal\" et meta-cluster \"algortihmes\"'} mdxType=\"GraphBlock\" />\n    <p>{`En revanche, les entités techniques de la zone « Algorithmes » de notre cartographie sont davantage définies comme des parties ou des éléments de systèmes socio-techniques distribués dans des environnements numériques. Dans cet espace, on retrouve des dénominations abstraites mais ces entités ne constituent pas systématiquement des objets autonomes (`}<em parentName=\"p\">{`algorithm`}</em>{`, `}<em parentName=\"p\">{`devices`}</em>{`, `}<em parentName=\"p\">{`program`}</em>{`, `}<em parentName=\"p\">{`bot`}</em>{` ou `}<em parentName=\"p\">{`phone`}</em>{`). La majorité des termes se distingue par le fait qu’elle relève de technologies beaucoup plus spécifiques, renvoyant le plus souvent à des dispositifs technologiques précis tels que `}<em parentName=\"p\">{`facial recognition`}</em>{`, `}<em parentName=\"p\">{`deepfake`}</em>{`, `}<em parentName=\"p\">{`social network`}</em>{`, `}<em parentName=\"p\">{`chatbot`}</em>{`, `}<em parentName=\"p\">{`criminal justice algortihm`}</em>{` et de manière encore plus spécifique à des fonctionnalités de certains services embarqués dans nos terminaux mobiles ou sur le web, parfois associés à des marques, tels que `}<em parentName=\"p\">{`Siri`}</em>{`, `}<em parentName=\"p\">{`Search engine`}</em>{`, `}<em parentName=\"p\">{`Trending topics`}</em>{`, `}<em parentName=\"p\">{`Google assistant`}</em>{`, `}<em parentName=\"p\">{`Iphone`}</em>{`, `}<em parentName=\"p\">{`recommendation algorithm`}</em>{`, `}<em parentName=\"p\">{`Facebook messenger`}</em>{`, `}<em parentName=\"p\">{`Google images`}</em>{`, `}<em parentName=\"p\">{`image search`}</em>{`. Ces qualifications n’isolent pas les IA mais les incorporent dans un environnement sociotechnique dans lequel le calcul joue un rôle de plus en plus intense pour assister, trouver de l’information, guider ou prévenir un comportement.`}</p>\n    <h2 {...{\n      \"id\": \"qui-sont-les-agents-humains-\"\n    }}>{`Qui sont les agents humains ?`}</h2>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"People\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} labelDensity={0.95} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"people\"'} mdxType=\"GraphBlock\" />\n    <p>{`La catégorie “People” à partir de laquelle ont été annotés les termes désignant des agents humains, personnes ou groupes de personnes permet d’observer la manière dont est composé le monde social dans lequel les IA ont été introduites. Elle fait apparaître une autre différence entre les deux espaces sémantiques. `}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"People\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} filtersModeAnd={true} labelDensity={0.99} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"people\" et meta-cluster \"robots\"'} mdxType=\"GraphBlock\" />\n    <p>{`Du côté de l’espace « Robots » on observe parmi les termes les plus fréquents une forte présence de références à l’humanité, telles que `}<em parentName=\"p\">{`humans`}</em>{`, `}<em parentName=\"p\">{`humankind`}</em>{`, `}<em parentName=\"p\">{`human civilisation`}</em>{`, `}<em parentName=\"p\">{`human driver`}</em>{`, `}<em parentName=\"p\">{`human supervisor`}</em>{`. À la lecture du contenu de certains articles associés à cet espace, on constate que face aux agents calculateurs incarnés par des machines, la notion d’humanité est en fait une expression très générique de la société humaine tout entière sur laquelle ces agents font peser une menace. D’autres termes assez génériques sont également présents dans cet espace mais relèvent d’une définition plus centrée sur des domaines dans lesquels les technologies robotiques sont amenées à se déployer, tels que la finance, le marché du travail, la défense et les transports. On retrouve ainsi des termes tels que `}<em parentName=\"p\">{`workers`}</em>{`, `}<em parentName=\"p\">{`customers`}</em>{`, `}<em parentName=\"p\">{`employees`}</em>{`, `}<em parentName=\"p\">{`drivers`}</em>{`, `}<em parentName=\"p\">{`retailers`}</em>{`, `}<em parentName=\"p\">{`soldiers`}</em>{`, `}<em parentName=\"p\">{`passengers`}</em>{`, `}<em parentName=\"p\">{`brokers`}</em>{`, `}<em parentName=\"p\">{`traders`}</em>{`, `}<em parentName=\"p\">{`farmers`}</em>{`.`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"People\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} filtersModeAnd={true} labelDensity={0.95} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"people\" et meta-cluster \"algorithmes\"'} mdxType=\"GraphBlock\" />\n    <p>{`L’espace associé aux « Algorithmes » est quant à lui peuplé de termes beaucoup moins génériques que dans l’espace « Robots ». Les agents humains sont ici désignés de manière beaucoup plus précise et font référence à des personnes mieux identifiées. On retrouve ainsi, parmi les termes fréquents, des entités faisant référence aux plateformes numériques `}<em parentName=\"p\">{`users`}</em>{`, `}<em parentName=\"p\">{`accounts`}</em>{`, `}<em parentName=\"p\">{`Facebook users`}</em>{`, `}<em parentName=\"p\">{`Youtube users`}</em>{`. Les termes qui désignent ces entités humaines permettent dans la grande majorité des cas de les qualifier en fonction de propriétés comme l’âge (`}<em parentName=\"p\">{`children, child, kids, parents`}</em>{`), le genre (`}<em parentName=\"p\">{`women, men`}</em>{`) l’appartenance éthique (`}<em parentName=\"p\">{`black people, black patients, african-americans`}</em>{`), l’orientation politique (`}<em parentName=\"p\">{`white supremacists, black defendants, illuminati`}</em>{`) ou sexuelle (`}<em parentName=\"p\">{`gays, lesbian, trans people`}</em>{`).`}</p>\n    <p>{`L’analyse topologique des clusters faisant apparaître une opposition entre les machines ou intelligences autonomes et les environnements numériques algorithmiques, est renforcée par cette analyse plus spécifique des termes les plus fréquents qui peuplent ces deux espaces. En effet, on observe dans l’espace sémantique intitulé « Robots » une forme d’abstraction et d’incarnation des agents techniques et une généricité dans la manière de désigner les agents humains qui apparaissent comme les victimes des troubles potentiels tels qu’ils sont dénoncés dans les articles critiques. À l’inverse, dans l’espace lié aux « Algorithmes », les agents techniques sont davantage spécifiés et renvoient le plus souvent à des services ou des fonctionnalités techniques très précises qui sont mises en cause dans les articles. Les agents humains associés à ces entités techniques algorithmiques ne réfèrent pas à des catégories génériques comme l’humanité mais sont qualifiés par une variété d’attributs qui permettent de les identifier de manière beaucoup plus précise.  `}</p>\n    <h2 {...{\n      \"id\": \"quelles-sont-les-difficultés-causées-par-ces-entités-techniques-\"\n    }}>{`Quelles sont les difficultés causées par ces entités techniques ?`}</h2>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Issue\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} labelDensity={0.97} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"issues\"'} mdxType=\"GraphBlock\" />\n    <p>{`La catégorie intitulée “Issues” permet une lecture comparée des termes relatifs aux troubles et aux enjeux qui sont associés aux agents techniques sur lesquels porte la critique. `}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Issue\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} filtersModeAnd={true} labelDensity={0.97} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"issues\" et meta-cluster \"robots\"'} mdxType=\"GraphBlock\" />\n    <p>{`Du côté de l’espace sémantique « Robots », c’est l’affrontement entre les humains et les IA qui est constamment appelé comme enjeu. On observe la présence de termes tels que `}<em parentName=\"p\">{`attack`}</em>{`, `}<em parentName=\"p\">{`safety`}</em>{`, `}<em parentName=\"p\">{`arms race`}</em>{`, `}<em parentName=\"p\">{`Cold war`}</em>{`, `}<em parentName=\"p\">{`human extinction`}</em>{`, `}<em parentName=\"p\">{`extinction`}</em>{`, `}<em parentName=\"p\">{`natural disasters`}</em>{`, `}<em parentName=\"p\">{`AI-powered horror`}</em>{`, `}<em parentName=\"p\">{`mass extinction`}</em>{`, `}<em parentName=\"p\">{`physical damage`}</em>{`, qui renvoient le plus souvent au registre de la guerre ou de la destruction à l’échelle planétaire, faisant peser un risque existentiel sur l’avenir de l’humanité (Singler, 2019). Ces menaces font émerger des enjeux de contrôle de ces technologies autonomes, tels que `}<em parentName=\"p\">{`ban`}</em>{`, `}<em parentName=\"p\">{`petition`}</em>{`, `}<em parentName=\"p\">{`human oversight`}</em>{`, `}<em parentName=\"p\">{`lack of accountability`}</em>{`, `}<em parentName=\"p\">{`superintelligence control problem`}</em>{`, `}<em parentName=\"p\">{`control problem`}</em>{`. D’autres termes relèvent de troubles assez visibles dans cet espace sémantique associés au remplacement, au dépassement et à une perte de contrôle de l’homme par les machines, notamment dans le domaine de l’économie, avec des termes tels que `}<em parentName=\"p\">{`job losses`}</em>{`, `}<em parentName=\"p\">{`surge pricing`}</em>{`, `}<em parentName=\"p\">{`pay gap`}</em>{`.`}</p>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.8} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Issue\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot'} nodeLabelVariable={'label_copy'} filtersModeAnd={true} labelDensity={0.97} colorPalette={{\n      \"Robot\": \"#fa1633\",\n      \"Algo\": \"#992ef6\"\n    }} title={'Réseau sémantique du contenu des articles critiques sur l’IA'} legend={'filtrage par tag \"issues\" et meta-cluster \"algorithmes\"'} mdxType=\"GraphBlock\" />\n    <p>{`Les termes relatifs aux troubles et enjeux constitutifs du sous-ensemble nommé « Algorithmes » laissent apparaître d’autres formes de discours de critique davantage imprégnées de références juridiques et légales. En effet, on trouve dans cette partie du réseau parmi les termes fréquents un champ sémantique constitué de références juridiques telles que `}<em parentName=\"p\">{`crime`}</em>{`, `}<em parentName=\"p\">{`law enforcement`}</em>{`, `}<em parentName=\"p\">{`Human Rights`}</em>{`, `}<em parentName=\"p\">{`lawsuit`}</em>{`, `}<em parentName=\"p\">{`Civil Liberties`}</em>{`, `}<em parentName=\"p\">{`prejudice`}</em>{`, `}<em parentName=\"p\">{`fraud`}</em>{`, `}<em parentName=\"p\">{`public interest`}</em>{`. Les troubles produits par les agents techniques dénoncés au sein des articles associés à cet espace concernent les discriminations (`}<em parentName=\"p\">{`bias`}</em>{`, `}<em parentName=\"p\">{`biases`}</em>{`, `}<em parentName=\"p\">{`discrimination`}</em>{`, `}<em parentName=\"p\">{`antisemitic`}</em>{`, `}<em parentName=\"p\">{`race or gender`}</em>{`, `}<em parentName=\"p\">{`fair use`}</em>{`, `}<em parentName=\"p\">{`risk score`}</em>{`, `}<em parentName=\"p\">{`liberal bias`}</em>{`), les enjeux de privacy (`}<em parentName=\"p\">{`privacy`}</em>{`, `}<em parentName=\"p\">{`surveillance`}</em>{`, `}<em parentName=\"p\">{`Big Brother`}</em>{`, `}<em parentName=\"p\">{`privacy issues`}</em>{`), les difficultés de filtrage ou d’exposition à de contenus inappropriés (`}<em parentName=\"p\">{`violence`}</em>{`, `}<em parentName=\"p\">{`inappropriate content`}</em>{`, `}<em parentName=\"p\">{`nudity`}</em>{`, `}<em parentName=\"p\">{`age restriction`}</em>{`, `}<em parentName=\"p\">{`violent crime`}</em>{`) et frauduleux (`}<em parentName=\"p\">{`fake news`}</em>{`, `}<em parentName=\"p\">{`misinformaton`}</em>{`, `}<em parentName=\"p\">{`conspiracy theories`}</em>{`, `}<em parentName=\"p\">{`revenge porn`}</em>{`, `}<em parentName=\"p\">{`filter bubble`}</em>{`), ou encore de censure et de liberté d’expression (`}<em parentName=\"p\">{`free expression`}</em>{`)`}</p>\n    <div className=\"methodo-container\">\n  <h2 id=\"m-thode-tagging-des-entit-s-du-graphe\">Méthode : Tagging des entités du graphe</h2>\n      <p>Pour chacun des 2991 termes du réseau une catégorisation manuelle a été réalisée à pour différencier le type d’entités, de sorte que 66% des termes du réseaux ont été catégorisés à partir de 10 catégories distinctes : </p>\n      <ul>\n        <li>Technical (15%) : calculateur, machine, fonctionnalité, device, service technique, dispositifs techniques de startup difficiles à différencier de l&#39;entité économique</li>\n        <li>Company (5%) : entreprises, start-up, domaine d&#39;entreprise</li>\n        <li>Fiction (1%): personnages, films, jeux vidéo</li>\n        <li>Person (6%) : personnalités politique, médiatique, recherche, noms propres</li>\n        <li>People (8%) :  personne ou groupe de personnes non nommée</li>\n        <li>Institution (4%) : agence gouvernementale, ONG, association, université, textes juridiques</li>\n        <li>Locality (1%) : lieux</li>\n        <li>Data_inout (10%) : données, traces    </li>\n        <li>Topic (10%) : domaine, thèmes</li>\n        <li>Issues (7%) :  enjeux et problèmes</li>\n      </ul>\n      <p>Une 11ème catégorie rassemble les termes difficilement interprétables et non catégorisables</p>\n      <ul>\n        <li>NC terms (34%) : termes non classés car trop ambigus ou non pertinents </li>\n      </ul>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quelles-entités-peuplent-le-réseau-sémantique-\",\n    level: 2,\n    title: \"Quelles entités peuplent le réseau sémantique ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"quelles-sont-les-entités-techniques-\",\n    level: 2,\n    title: \"Quelles sont les entités techniques ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"qui-sont-les-agents-humains-\",\n    level: 2,\n    title: \"Qui sont les agents humains ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"quelles-sont-les-difficultés-causées-par-ces-entités-techniques-\",\n    level: 2,\n    title: \"Quelles sont les difficultés causées par ces entités techniques ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.63,\"time\":217800,\"words\":726}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-sont-exprimés-les-troubles-produits-par-ces-technologies-\"\n    }}>{`Comment sont exprimés les troubles produits par ces technologies ?`}</h2>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} title={'Scores TF-IDF des verbes de troubles dans les articles selon les méta-clusters'} legend={'Taille des noeuds relative à la fréqeunce du terme dans le coprus'} mdxType=\"IceCreamBlock\" />\n    <p>{`Une autre manière de poursuivre cette analyse comparative des troubles et des formes d’agentivité associés aux calculateurs consiste en l’exploration d’une autre entité sémantique au sein du corpus d’articles que sont les verbes. Après avoir réalisé une extraction d’une liste de verbes interprétables comme étant potentiellement de bons candidats aux troubles produits par les dispositifs techniques, nous avons calculé et comparé leur score tf-idf au sein des deux sous-ensembles d’articles constitutifs des deux pôles mis en évidence par la topologie du réseau.`}</p>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"robot\"\n    }]} title={'Scores TF-IDF des verbes de troubles dans les articles selon les méta-clusters'} legend={'Filtrage du meta-cluster \"robots\" - taille des noeuds relative à la fréqeunce du terme dans le coprus'} mdxType=\"IceCreamBlock\" />\n    <p>{`Les verbes dont les scores tf-idf sont les plus importants dans les articles qui composent l’espace sémantique « Robots » viennent conforter l’analyse des troubles effectuée à partir des termes catégorisés comme “Issues” au sein du graphe. En effet, on observe une plus forte représentation de verbes exprimant une menace de la part des machines et intelligences autonomes relevant d’un discours prophétique, voire apocalyptique. Parmi les verbes sélectionnés comme bons candidats à l’expression de troubles ayant les plus importants scores tf-idf, on trouve des verbes qui expriment des notions de destruction (`}<em parentName=\"p\">{`doom`}</em>{`, `}<em parentName=\"p\">{`destroy`}</em>{`, `}<em parentName=\"p\">{`eradicate`}</em>{`, `}<em parentName=\"p\">{`kill`}</em>{`, `}<em parentName=\"p\">{`eliminate`}</em>{`) et de domination des machines sur l’homme (`}<em parentName=\"p\">{`enslave`}</em>{`, `}<em parentName=\"p\">{`dominate`}</em>{`), mais également de dépassement ou de remplacement des hommes par les ces agents techniques (`}<em parentName=\"p\">{`overtake`}</em>{`, `}<em parentName=\"p\">{`surpass`}</em>{`, `}<em parentName=\"p\">{`replace`}</em>{`, `}<em parentName=\"p\">{`defeat`}</em>{`). D’autres verbes davantage représentés dans le sous ensemble « Robots » renvoient à des notions de transformation et de changement (`}<em parentName=\"p\">{`reshape`}</em>{`, `}<em parentName=\"p\">{`transform`}</em>{`, `}<em parentName=\"p\">{`disrupt`}</em>{`) ou aux capacités de ces agents techniques à imiter ou simuler les comportements humains (`}<em parentName=\"p\">{`ressemble`}</em>{`, `}<em parentName=\"p\">{`simulate`}</em>{`, `}<em parentName=\"p\">{`reproduce`}</em>{`, `}<em parentName=\"p\">{`mimic`}</em>{`).`}</p>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"algo\"\n    }]} title={'Scores TF-IDF des verbes de troubles dans les articles selon les méta-clusters'} legend={'Filtrage du meta-cluster \"algorithmes - taille des noeuds relative à la fréqeunce du terme dans le coprus'} reverseFlickering={true} mdxType=\"IceCreamBlock\" />\n    <p>{`Dans le sous-ensemble d’articles associés aux « Algorithmes » on retrouve également des verbes qui viennent conforter les analyses précédentes réalisées à partir de la catégories “Issues” dans le réseau de termes. En effet, les verbes qui présentent les plus hauts scores de tf-idf dans cette partie du corpus renvoient aux questions de filtrage et de censure de l’information (`}<em parentName=\"p\">{`filter`}</em>{`, `}<em parentName=\"p\">{`delete`}</em>{`, `}<em parentName=\"p\">{`supress`}</em>{`, `}<em parentName=\"p\">{`censor`}</em>{`), aux problèmes de surveillance et de privacy (`}<em parentName=\"p\">{`profile`}</em>{`, `}<em parentName=\"p\">{`suspect`}</em>{`, `}<em parentName=\"p\">{`spy`}</em>{`, `}<em parentName=\"p\">{`target`}</em>{`, `}<em parentName=\"p\">{`track`}</em>{`), à la dénonciation des formes de discrimination (`}<em parentName=\"p\">{`bias`}</em>{`, `}<em parentName=\"p\">{`discriminate`}</em>{`) ou encore aux phénomènes de propagation et d’amplification de contenus frauduleux (`}<em parentName=\"p\">{`promote`}</em>{`, `}<em parentName=\"p\">{`amplify`}</em>{`, `}<em parentName=\"p\">{`spread`}</em>{`).`}</p>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} title={'Scores TF-IDF des verbes de troubles dans les articles selon les méta-clusters'} legend={'Taille des noeuds relative à la fréqeunce du terme dans le coprus'} mdxType=\"IceCreamBlock\" />\n    <div className=\"methodo-container\">\n  <h2 id=\"m-thode-extraction-des-verbes-de-troubles-et-calcul-des-tf-idf-sur-le-corpus\">Méthode : Extraction des verbes de troubles et calcul des TF-IDF sur le corpus</h2>\n      <p>L’analyse des verbes de troubles a été réalisée en effectuant une première extraction de 1000 verbes sur le texte complet des articles critiques du corpus en employant la méthode “pigeon holes” via le logiciel Cortext (identique à la méthode d'extraction des termes du graphe). La liste de verbes produite a d’abord été manuellement annotée afin d’extraire une liste de verbes pouvant être interprétés comme des problèmes, des difficultés ou des troubles. Une liste restreinte de 66 verbes explicitement interprétables comme troubles a été sélectionnée.\n  \nLe score Tf-idf des verbes est calculé sur les articles des 17 plus importants clusters (supérieur à 1% des articles du corpus), composant les deux grands sous-ensembles « Robots » et « Algorithmes » définis en suivant la topologie. Il est obtenu à partir du module TfidfTransformer <a href=\"https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html\">https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html</a> en conservant les options par défaut (intégrant la fonction smooth_idf=True, la constante &quot;1&quot; est ajoutée au numérateur et au dénominateur de l&#39;idf comme si l&#39;on voyait un document supplémentaire contenant chaque terme de la collection exactement une fois, ce qui évite les divisions par zéro : </p>\n      <blockquote>\n        <p>idf(t) = log [ (1 + n) / (1 + df(t)) ] + 1.</p>\n      </blockquote>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-sont-exprimés-les-troubles-produits-par-ces-technologies-\",\n    level: 2,\n    title: \"Comment sont exprimés les troubles produits par ces technologies ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"5 min read\",\"minutes\":4.945,\"time\":296700,\"words\":989}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-est-exprimée-la-temporalité-\"\n    }}>{`Comment est exprimée la temporalité ?`}</h2>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} title={'Scores TF-IDF des marqueurs de temps \"Date\" dans les articles selon les méta-clusters'} legend={'Taille des noeuds relative à la fréqeunce du terme dans le coprus'} mdxType=\"IceCreamBlock\" />\n    <p>{`Des travaux portant sur les formes argumentatives en sociologie des controverses nous invitent à nous intéresser à la manière dont sont déployées les échelles temporelles et les régimes d’énonciation du futur qui leur sont associés (Chateauraynaud, 2013, 2019). Les épreuves de cohérence et de crédibilité dans les controverses nécessitent de définir des échelles temporelles qui vont venir modifier les jugements. C’est en mobilisant des marqueurs temporels qui articulent des références au passé et une projection à plus ou moins long terme dans le temps que les acteurs sont en mesure de constituer des prises sur le futur qui vont venir moduler le type d’action à entreprendre et l’urgence à agir pour faire face à une situation. `}</p>\n    <p>{`A partir de notre corpus, nous avons extrait 1000 entités nommées qui sont des marqueurs temporels présents au sein des articles. De la même manière que pour les verbes, nous avons calculé leur score tf-idf sur l’ensemble des articles constituant les deux sous-ensembles intitulés « Robots » et « Algorithmes ». La liste des entités extraite a été filtrée manuellement afin de ne conserver que les marqueurs temporels interprétables en dehors de leur contexte d’énonciation. L’analyse comparative de la distribution entre les deux sous-ensembles des scores tf-idf des marqueurs temporels laisse apparaître deux régimes distincts de référence au temps au sein des deux sous-ensembles d’articles. `}</p>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"robot\"\n    }]} title={'Scores TF-IDF des marqueurs de temps \"Date\" dans les articles selon les méta-clusters'} legend={'Filtrage du meta-cluster \"robots\" - Taille des noeuds relative à la fréqeunce du terme dans le coprus'} mdxType=\"IceCreamBlock\" />\n    <p>{`Du côté des articles associés au sous-ensemble « Robots » les marqueurs de temps relèvent d’une temporalité sur le long terme, qu’ils fassent référence au passé ou au futur. Ainsi la grande majorité des marqueurs se structurent autour d’expressions sur le futur qui mobilisent la figure “the next” associé à des temporalités qui se comptent souvent en dizaines d’années ou centaines d’années (`}<em parentName=\"p\">{`the next 10 years, the next 30 years, the next 100 years, the next 1,000 years`}</em>{`). D’autre part, les énoncés qui ont les plus importants scores dans cet espace ont comme particularité le plus souvent de ne pas définir précisément les échéances auxquelles ils renvoient (`}<em parentName=\"p\">{`the next decades, coming decades, next century, this century`}</em>{`). D’autres marqueurs également présents dans ce sous-ensemble ne font pas référence au futur mais au passé et ils sont caractérisés par le fait de référer également à une projection lointaine dans le temps passé (`}<em parentName=\"p\">{`30 years ago, 150 years ago, the last 20 years, the past 25 years, the past 15 years`}</em>{`). Les entités dans ce sous-ensemble ont donc comme particularité de majoritairement exprimer un futur lointain et souvent peu précis et lorsque les entités font référence au passé, elles sont également projetées dans une temporalité lointaine.`}</p>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"algo\"\n    }]} title={'Scores TF-IDF des marqueurs de temps \"Date\" dans les articles selon les méta-clusters'} legend={'Filtrage du meta-cluster \"algortihmes\" - Taille des noeuds relative à la fréqeunce du terme dans le coprus'} reverseFlickering={true} mdxType=\"IceCreamBlock\" />\n    <p>{`Au sein du sous-ensemble d’articles associés aux « Algorithmes » les marqueurs temporels extraits ayant les scores tf-idf les plus importants se distinguent des précédents car ils renvoient majoritairement au présent (`}<em parentName=\"p\">{`this day, these days, that year`}</em>{`), à un passé proche souvent exprimé en jour, semaine ou mois (`}<em parentName=\"p\">{`recent days, just last week, a few weeks ago, just a month, six months ago, the end of last year`}</em>{`), mais également à un futur très proche en comparaison du premier sous-ensemble (`}<em parentName=\"p\">{`the next day, the next few weeks, the coming weeks, the coming months, the following two years`}</em>{`).`}</p>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"From\": \"#fa1633\",\n      \"To\": \"#992ef6\"\n    }} colorScaleType={'continuous'} title={'Scores TF-IDF des marqueurs de temps \"Date\" dans les articles selon les méta-clusters'} legend={'Taille des noeuds relative à la fréqeunce du terme dans le coprus'} mdxType=\"IceCreamBlock\" />\n    <p>{`L’opposition entre les deux espaces sémantiques semble donc dessiner deux régimes d’énonciation distincts qui cohabitent au sein de l’espace médiatique et qui expriment des temporalités différentes. Le premier exprime les peurs projetées dans le futur face à des technologies autonomes focalisant la critique sur leur capacité à simuler, dépasser, remplacer ou exterminer à terme l’espèce humaine et représentant une menace qu’il serait nécessaire de contrôler. L’autre régime est davantage ancré dans une critique sociale plus actuelle, mobilisant le répertoire du droit et des injustices (censure, discrimination, surveillance) envers des populations spécifiques ou relève d’enjeux de régulation quant à la manière de gérer la diffusion de l’information (exposition, amplification).`}</p>\n    <div className=\"methodo-container\">\n  <h2 id=\"m-thode-extraction-des-marqueurs-de-temps-et-calcul-des-tf-idf-sur-le-corpus\">Méthode : Extraction des marqueurs de temps et calcul des TF-IDF sur le corpus</h2>\n      <p>En suivant la même procédure que pour le calcul des scores tf-idf sur les verbes (voir section méthode précédente), un travail de comparaison d’entités nommées “Date” a été réalisé. Afin de lister ces marqueurs de temps, une première extraction de 1000 entités nommées \"Date\" via le modèle Spacy réalisée sur Cortext a été effectuée, puis un nettoyage de cette liste afin de conserver les entités les plus interprétables permettant de qualifier une dimension temporelle sans ambiguïté. Nous avons supprimé les entités produisant des ambiguïtés et moins interprétables comme les dates spécifiques ou chiffrées, les durées (ex: several years, winter), les fréquences (ex : everyday, weekly), les périodes (the late 1980s) les événements spécifiques (ex : Christmas). Pour cette liste de 112 entités “Date” un score de tf-idf a été calculé en suivant la même procédure que pour les entités verbes, soit une séparation du corpus d’articles en deux grands ensembles équivalent suivant la topologie du graphe telle que décrite précédemment et un calcul du score tf-idf pour chaque entité à partir du module TfidfTransformer.</p>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-est-exprimée-la-temporalité-\",\n    level: 2,\n    title: \"Comment est exprimée la temporalité ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.985,\"time\":59100,\"words\":197}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"références\"\n    }}>{`Références`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`J Scott Brennen. An industry-led debate: How uk media cover artificial intelligence. 2018.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Dominique Cardon, Maxime Crépel, Renuka George. Algorithms and Territorial Regulation. Gouverner la ville numérique, Collège de France; Presses Universitaires de France, 2019, 9782130815259`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Francis Chateauraynaud. Regard analytique sur l’activité visionnaire. Du risque à la menace. Penser la catastrophe, Paris, PUF, pages 309–389, 2013.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Francis Chateauraynaud and Josquin Debaz. Agir avant et après la fin du monde, dans l’infinité des milieux en interaction. Multitudes, (3):126–132, 2019.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Anna Jobin, Marcello Ienca, and Effy Vayena. The global landscape of ai ethics guidelines. Nature Machine Intelligence, 1(9):389–399, 2019. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Brent Mittelstadt. Principles alone cannot guarantee ethical ai. Nature Machine Intelligence, 1(11):501–507, 2019. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Raymond Perrault, Yoav Shoham, Erik Brynjolfsson, Jack Clark, John Etchemendy, Barbara Grosz, Terah Lyons, James Manyika, Saurabh Mishra, and Juan Carlos Niebles. The ai index 2019 annual report. AI Index Steering Committee, Human-Centered AI Institute, Stanford University, Stanford, CA, 2019. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Nick Seaver. Algorithms as culture: Some tactics for the ethnography of algorithmic systems. Big Data & Society, 4(2):2053951717738104, 2017.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Beth Singler. Existential hope and existential despair in AI apocalypticism and transhumanism, Zygon, 54 (1), 156–176, 2019.`}</p>\n      </li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"références\",\n    level: 2,\n    title: \"Références\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.81,\"time\":168600,\"words\":562}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"critique-de-lia-dans-la-presse\"\n    }}>{`Critique de l’IA dans la presse`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`IMAGE DE FOND CLUSTERS Graphe sémantique des thématiques des articles “critiques” full`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Projet :`}</strong>{` Algoglitch - médialab Sciences Po`}</p>\n    <p><strong parentName=\"p\">{`Auteurs :`}</strong>{` Maxime Crépel, Dominique Cardon`}</p>\n    <p><strong parentName=\"p\">{`Traitement de données :`}</strong>{` Yannis Bouachera, Salomé Do, Jean-Philippe Cointet `}</p>\n    <p><strong parentName=\"p\">{`Visualisation :`}</strong>{` Donato Ricci, Robin De Mourat `}</p>\n    <p><strong parentName=\"p\">{`Citer cette recherche :`}</strong>{` `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Site\nPapers`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"quel-est-le-discours-critique-de-lia-et-des-algorithmes-dans-la-presse-\"\n    }}>{`Quel est le discours critique de l’IA et des algorithmes dans la presse ?`}</h2>\n    <p>{`Ce site, en articulant analyses et visualisations de données, présente les résultats de travaux réalisés dans le cadre du projet Algoglitch au médialab, portant sur un corpus d’articles de presse sur le thème de l’IA et des algorithmes couvrant une période de 5 ans aux États-unis et au Royaume-Uni. `}</p>\n    <p>{`En rendant visible les débats des experts et chercheurs et en médiatisant les controverses qui émergent parfois au sein des communautés d’utilisateurs sur les effets négatifs de ces technologies, les médias contribuent à forger les représentations et à définir les formes d’acceptabilité de l’IA dans nos sociétés. Des travaux ont montré une visibilité croissante du sujet de l’IA dans la couverture médiatique ces dernières années, se concentrant principalement sur les avancées technologiques dans le domaine et sur les développements potentiels dans les secteurs du commerce et de l’industrie. Pourtant, les questions éthiques et les problèmes sociaux tels que les risques de discrimination, les biais, la vie privée sont des thématiques également présentes au sein de la sphère médiatique mais y sont sous-représentés (Brennen et al, 2018). `}</p>\n    <p>{`Notre recherche vise à analyser les discours critiques sur l’IA dans la sphère médiatique : Quelles sont les controverses produites par ces technologies qui sont médiatisées dans la presse ? De quoi est constitué le discours médiatique critique de ces technologies ? Quels types d’agents techniques et humains sont impliqués dans ces controverses ? Quels troubles sont-ils accusés de produire dans la société ? `}</p>\n    <p>{`A partir de méthode de TAL sur un large corpus de presse, nous montrons qu’il existe deux régimes dominants de critique, l’un fondé sur les injustices produites par les algorithmes et l’autre portant sur les peurs de l’autonomie de l’IA et des robots. Les résultats montrent que le thème des algorithmes et de l’IA occupe un espace de plus en plus important dans la sphère médiatique depuis 5 ans. L’espace médiatique se structure de manière thématique autour de différents types de calculateurs et domaines d’applications se divisant en deux sous-ensembles sémantiques l’un portant sur les algorithmes et l’autre sur les robots. `}</p>\n    <p>{`L’analyse comparée de ces deux espaces sémantiques dominants rend compte de deux régimes discursifs, mobilisant des agents. D’une part, les algorithmes qui façonnent nos environnements de calcul quotidiens sont associés à un discours critique portant sur les biais, les discriminations, la surveillance, la censure et les phénomènes d’amplification dans la diffusion de contenus inappropriés. D’autre part, les robots et l’IA, qui mettent en scène des entités autonomes, incarnées et indépendantes sont associés à un discours prophétique alertant sur notre capacité à contrôler ces agents simulant ou dépassant nos capacités physiques et cognitives et mettant ainsi en péril notre sécurité physique ou notre modèle économique.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Ces travaux de recherche ont été réalisés dans le cadre de la Chaire «Good In Tech : repenser l’innovation et les technologies comme moteurs d’un monde meilleur pour et par l’humain » placée sous l’égide de la Fondation du Risque en partenariat avec l’Institut Mines-Télécom et Sciences Po`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quel-est-le-discours-critique-de-lia-et-des-algorithmes-dans-la-presse-\",\n    level: 2,\n    title: \"Quel est le discours critique de l’IA et des algorithmes dans la presse ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.65,\"time\":159000,\"words\":530}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport LinearGraphBlock from '../../components/LinearGraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"quelle-est-la-couverture-médiatique-de-lia-\"\n    }}>{`Quelle est la couverture médiatique de l’IA ?`}</h2>\n    <p>{`Notre recherche a consisté à extraire un large corpus de 29342 d’articles de presse portant sur  l’IA et les algorithmes sur une période de 5 années, réalisée sur l’agrégateur de presse Factiva sur un ensemble de 47 sources de presse généraliste aux États unis et au Royaume Uni (27 sources pour USA et 20 sources pour UK).`}</p>\n    <p>{`Les données récoltées font apparaître une augmentation du volume d’articles portant sur l’IA - telle que définie par notre requête - sur la période d’observation. Cette augmentation atteste de la place de plus en plus importante du thème des algorithmes et de l’IA dans l’espace médiatique ces dernières années. Afin de contrôler cette augmentation au sein de notre corpus, nous avons comparé avec d’autres requêtes effectuées sur la même période et des sources identiques, pour lesquelles on attend une distribution stable. L’observation du volume d’articles extraits à partir de notre requête montre une augmentation significative de 163% entre 2015 et 2019 des publications portant sur l’IA et les algorithmes alors que les articles consacrés à l’art (-9%), la culture (+2%), l’économie (+0%) ou la technologie (+14%) restent relativement stables. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visuel Comparatif volume articles Les statistiques comparées des différentes requêtes intègrent les doublons présents dans la base Factiva`}</p>\n    </blockquote>\n    <LinearGraphBlock xVariable={'month'} xLabelVariable={'fullName'} yVariable={'value'} mdxType=\"LinearGraphBlock\" />\n    <p>{`Ce constat d’une augmentation de la visibilité croissante du thème de l’IA a été observé dans d’autres travaux à partir d’analyses statistiques portants sur différentes sources informationnelles (Perrault et al, 2019). Tout d’abord dans presse anglophone, à l’échelle mondiale, à partir d’analyses statistiques produites par le projet GDELT, s’observe une croissance du thème de l’IA et des termes associés tels que Deep learning, Machine Learning entre 2017 et 2019. Cette augmentation de la présence du terme de l’IA est aussi largement visible à partir des statistiques de requêtes effectuées sur le moteur de recherche Google aux USA et analysables via le service Google trends sur la période allant de 2015 à 2019. Enfin le même constat est également fait d’une augmentation entre 2017 et 2019 de la fréquence d’apparition des termes AI et Machine Learning dans différents corpus de documents issus par exemple d’organisations gouvernementales aux USA, au Canada, et au Royaume Uni, mais également dans les appels de fonds des entreprises américaines.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-de-corpus\"\n    }}>{`Méthode : Extraction de corpus`}</h2>\n    <p><strong parentName=\"p\">{`Requête utilisée sur Factiva`}</strong>{` : “artificial intelligence” OR “AI” OR \"algorithm`}<em parentName=\"p\">{`“ OR \"machine learning” OR “deep learning” OR \"neural network`}</em>{`“ -\"amnesty international” -\"weiwei\" -\"air india\"\n`}<strong parentName=\"p\">{`Période d’extraction`}</strong>{` : du 01/01/2015 au 31/12/2019\n`}<strong parentName=\"p\">{`Volume d’articles extraits`}</strong>{` : 29 342 articles`}</p>\n    <p><strong parentName=\"p\">{`Sources UK (n=20)`}</strong>{` : Daily Mail, Daily Record, Daily star, Economist, Evening Standard, Evening Times, Express, Guardian, Independent, Mail online, Morning Star, Observer, Sunday Mall, Telegraph, The Mirror, The Sunday Mirror, The Sun, The Sunday Times, The Times, Which`}</p>\n    <p><strong parentName=\"p\">{`Sources USA (n=27)`}</strong>{` : ABCNEWS, Barron’s, Business Insider, CBS News, Chicago Tribune, CNN, Dailynews, Forbes, Fox News , Los Angeles Times, MSNBC News, New York Newsday, New York Post, New York Times, Newsweek, Politico, Rochester Democrat Chronicle, Slate, The Huffington Post, The Verge, Time Magazine, USA Today, Vice News, Wall Street Journal Online, Wall Street Journal, Washington Post, Washington Times`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quelle-est-la-couverture-médiatique-de-lia-\",\n    level: 2,\n    title: \"Quelle est la couverture médiatique de l’IA ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-de-corpus\",\n    level: 2,\n    title: \"Méthode : Extraction de corpus\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.76,\"time\":225600,\"words\":752}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport LinearGraphBlock from '../../components/LinearGraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-détecter-le-discours-critique-dans-les-médias-\"\n    }}>{`Comment détecter le discours critique dans les médias ?`}</h2>\n    <p>{`En s’appuyant sur des outils d’annotations par apprentissage supervisé, un sous corpus d’articles produisant un discours critique des algorithmes et de l’IA a été constitué. À partir de l’annotation manuelle de 2000 titres d’articles de presse jugés “critiques”, nous avons construit un modèle d’apprentissage automatique en réalisant plusieurs itérations incluant des phases de contrôle des résultats afin d’optimiser le modèle de détection des articles “critiques”. Tous les titres d’articles comportant des arguments ou éléments sémantiques négatifs portant explicitement sur une forme de calculateur (algorithme, IA, robot, etc.) ont été annotés comme critiques. À l’inverse ont été annotés comme non critiques ou ignorés les titres d’articles aux énoncés neutres, positifs, ambigus ou n’évoquant pas directement un calculateur. Par exemple les titres “Robocops to replace british bobbies on the streets, police force reveals” ou “Growth of ai could boost cybercrime and security threats , report warns”  ont été annotés comme critiques, alors que “AI to create more than 7m jobs” ou “Google so advanced stores will pack your products before you’ve thought of ordering them” ont été annotés non critiques. Étant donné le travail de sourcing manuel du corpus de départ et l’usage de méthode d’annotation par apprentissage supervisé, ce corpus ne prétend pas à une quelconque exhaustivité ou représentativité. Notre démarche permet en revanche d’appréhender avec la plus large diversité possible les thèmes associés à la critique de l’IA et des algorithmes. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visuel taux sur la période et nb articles critic non critic`}</p>\n    </blockquote>\n    <LinearGraphBlock xVariable={'index'} xLabelVariable={'fullName'} yVariable={'value'} colorVariable={'type'} colorPalette={{\n      \"not critic\": \"#c2873d\",\n      \"critic\": \"#c3897e\",\n      \"Total\": \"#ffab77\"\n    }} mdxType=\"LinearGraphBlock\" />\n    <p>{`A partir de ce protocole de catégorisation, un sous corpus de 2 091 articles de presse catégorisés comme critiques a été constitué. Le taux d’articles annotés comme critiques de la base initiale est de 7,1% en moyenne sur l’ensemble du corpus et présente une assez forte stabilité durant la période (écart type de +/- 2,2%). Si le volume d’articles portant sur l’IA et les algorithmes augmente significativement, le taux d’articles détectés par le modèle comme contenant un discours critique augmente simultanément durant la période. Des travaux portant sur l’analyse de la couverture médiatique du thème de l’IA en Grande Bretagne ont montré qu’une très large majorité des publications portaient sur les avancées technologiques dans le domaine et sur les potentiels développement que ces derniers permettent dans les secteurs du commerce et de l’industrie. Les questions éthiques et les problèmes sociaux tels que les risques de discrimination associés au déploiement de ces technologies sont sous représentés au sein de l’espace médiatique (Brennen et al, 2018). `}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--détection-du-discours-critique-par-apprentissage-supervisé\"\n    }}>{`Méthode : Détection du discours critique par apprentissage supervisé`}</h2>\n    <p><strong parentName=\"p\">{`Modèle utilisé pour la détection du discours critique :`}</strong>{` fastText - `}<a parentName=\"p\" {...{\n        \"href\": \"https://fasttext.cc\"\n      }}>{`https://fasttext.cc`}</a></p>\n    <p><strong parentName=\"p\">{`Corpus d’apprentissage :`}</strong>{` 2000 articles annotés manuellement via prodigy - `}<a parentName=\"p\" {...{\n        \"href\": \"https://prodi.gy\"\n      }}>{`https://prodi.gy`}</a></p>\n    <p><strong parentName=\"p\">{`Règles de codage des articles :`}</strong>{` `}</p>\n    <ul>\n      <li parentName=\"ul\">{`CRITIQUE : énoncés critiques ou réponse à une critique  (champ sémantique ou arguments critiques), évocation d’un calculateur ( algorithme, IA, robot, etc.). Exemple : « Robots put jobs at risk »,\n« Robot lawyers: how humans can fight back »`}</li>\n      <li parentName=\"ul\">{`NON CRITIQUE : énoncés neutres ou positifs, pas d’évocation d’un calculateur. Exemple : « AI to 'create more than 7m jobs’ »,\n« In the 2020s, artificial intelligence will transform the work of lawyers »`}</li>\n      <li parentName=\"ul\">{`IGNORE : énoncés ambigus, pas d’évocation d’un calculateur. Exemple : « Restaurants are now employing robots – should chefs be worried? », « Need a lawyer? There’s an algorithm for that »`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Comparaison des modèles de détection de la critique :`}</strong>{`\nAfin de s’assurer de la variété et de la précision des articles différents modèles d’annotation ont été comparés et améliorés par itérations successives et un contrôle manuel systématique des résultats produits par ces modèles ont été effectués. C’est finalement le modèle fastText qui a produit la détection la plus précise des articles critiques`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Tableau résutats comparatifs`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Contrôle des résultats du modèle :`}</strong>{`\nCette approche méthodologique a permis de traiter une large base de données qui aurait été difficilement catégorisable manuellement. En revanche, les outils mobilisés de catégorisation automatique par apprentissage supervisé comportent un risque potentiel de ne pas détecter certains articles critiques dans le corpus. Pourtant, les itérations successives réduisent ce biais car les résultats obtenus à chaque itération montrent un épuisement des capacités du modèle à détecter de nouveaux articles critiques. Par ailleurs, des opérations de contrôle manuel systématique de l’ensemble des résultats produits par l‘algorithme ont permis de s’assurer que le sous corpus d’articles catégorisés comme critiques ne contenait pas de faux positifs. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-détecter-le-discours-critique-dans-les-médias-\",\n    level: 2,\n    title: \"Comment détecter le discours critique dans les médias ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--détection-du-discours-critique-par-apprentissage-supervisé\",\n    level: 2,\n    title: \"Méthode : Détection du discours critique par apprentissage supervisé\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"9 min read\",\"minutes\":8.595,\"time\":515700,\"words\":1719}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"quels-sont-les-thèmes-sur-lesquels-porte-la-critique-\"\n    }}>{`Quels sont les thèmes sur lesquels porte la critique ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Graphe sémantique des thématiques des articles “critiques” full\nRQ afficher label cluster ++ Probleme larger page `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Future_of_AI\": \"#e97f3e\",\n      \"Profiling_Algorthms\": \"#53cb7b\",\n      \"Job_Automation\": \"#eb102b\",\n      \"Market_&_Prices\": \"#d08be8\",\n      \"Predictive_Algorithms\": \"#a3bf28\",\n      \"Web_Algorithms\": \"#e7eb2a\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#108cac\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#d3a715\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#1b90be\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#00c8cc\",\n      \"Sex_Robots\": \"#db7187\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#6deeff\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} mdxType=\"GraphBlock\" />\n    <p>{`Le réseau sémantique obtenu à partir des 2 091 articles annotés comme critiques repose sur une extraction de termes les plus représentés au sein des articles. Il est constitué de 2 991 termes (ou suite de termes) reliés entre eux par 54 062 liens de cooccurrences. La spatialisation  est basée sur une variante de l’algorithme de spatialisation Fruchterman Reingold, incluant le poids des cooccurrences entre les termes du réseau ; la position est optimisée par leur appartenance aux clusters détectés automatiquement par l’algorithme de Louvain. La couleur des nœuds est relative à chacun des clusters ainsi détectés et leur taille est relative à la somme des cooccurrences. `}</p>\n    <p>{`À partir des termes les plus représentés au sein de chacun des clusters on peut interpréter et nommer les thèmes qui structurent l’espace sémantique de ce corpus d’articles critiques de l’IA et des algorithmes. La cartographie est constituée de 23 clusters thématiques de tailles variées qui représentent des types de calculateurs ou des domaines d’application différents. Pour chaque article, en fonction des termes mobilisés, il lui est assigné un seul et unique cluster. De la même manière chaque terme est associé à un unique cluster même s’il peut entretenir des liens de cooccurrence avec d’autres termes appartenant à des clusters différents. Une première lecture du réseau consiste à décrire les thèmes les plus présents au sein du corpus en nombre d’articles et d’en proposer une illustration succincte à partir d’exemples de titres prototypiques qui leurs sont associés.`}</p>\n    <p>{`Le deux plus importants clusters du graphe en nombre d’articles forment deux pôles opposés. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” - Cluster AlgoWeb & AI\nRQ les noms des termes filtrés restent affichés `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Web_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Future_of_AI\"\n    }]} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Future_of_AI\": \"#e97f3e\",\n      \"Profiling_Algorthms\": \"#53cb7b\",\n      \"Job_Automation\": \"#eb102b\",\n      \"Market_&_Prices\": \"#d08be8\",\n      \"Predictive_Algorithms\": \"#a3bf28\",\n      \"Web_Algorithms\": \"#e7eb2a\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#108cac\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#d3a715\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#1b90be\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#00c8cc\",\n      \"Sex_Robots\": \"#db7187\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#6deeff\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Le plus important nommé “Web Algorithms\", représentant 22% des articles du corpus critique, comporte des articles qui traitent des troubles produits par les algorithmes du web tels que par exemple les techniques de classement du newsfeed de Facebook (`}<em parentName=\"li\">{`Facebook accused of censoring conservatives, report says`}</em>{` - The Guardian - 10/05/16), les recommandations des vidéos sur Youtube (`}<em parentName=\"li\">{`YouTube, the Great Radicalizer`}</em>{` - The New York Times - 11/03/18) ou encore des moteurs de recherche comme Google (`}<em parentName=\"li\">{`Google results claim that the Holocaust didn’t happen, and company won’t change it`}</em>{` - Independent Online - 15/12/16). `}</li>\n      <li parentName=\"ul\">{`À l’extrémité opposée du graphe, on trouve le second plus important cluster nommé “Future of AI” qui représente 18% du corpus d’articles, évoquant les risques de l’émergence d’intelligences artificielles et de machines autonomes imitant ou surpassant les capacités humaines (`}<em parentName=\"li\">{`AI will create “useless class” of human, predicts bestselling historian`}</em>{` - The Guardian - 20/05/16) ou menaçant l’humanité d’extinction (`}<em parentName=\"li\">{`End of Humanity ? Artificial Intelligence could destroy us ‘within decades’ warns expert`}</em>{` - express.co.uk - 15/04/16).`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” x 3 - Cluster Jobauto / Killerrobots / Facialreco / `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Facial_Recognition\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Job_Automation\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Killer_Robots\"\n    }]} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Future_of_AI\": \"#e97f3e\",\n      \"Profiling_Algorthms\": \"#53cb7b\",\n      \"Job_Automation\": \"#eb102b\",\n      \"Market_&_Prices\": \"#d08be8\",\n      \"Predictive_Algorithms\": \"#a3bf28\",\n      \"Web_Algorithms\": \"#e7eb2a\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#108cac\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#d3a715\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#1b90be\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#00c8cc\",\n      \"Sex_Robots\": \"#db7187\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#6deeff\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} mdxType=\"GraphBlock\" />\n    <p>{`Parmi les plus importants clusters on trouve trois autres thèmes largement représentés dans le corpus. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Le cluster “Job automation” (14% des articles) contient des articles alertant sur les risques de mutation du marché de l’emploi face à la robotisation et au déploiement de l’IA dans le monde du travail (`}<em parentName=\"li\">{`Robots and AI are threatening close to a third of UK jobs, study reveals`}</em>{` - Independent Online - 24/03/17). `}</li>\n      <li parentName=\"ul\">{`Le cluster “Killer robots” (11% des articles) est constitué d’articles sur les risques du déploiement de l’IA et de machines autonomes dans le cadre de conflits armés (`}<em parentName=\"li\">{`Top scientists call for ban on killer robots to prevent apocalyptic war`}</em>{` - dailystar.co.uk - 20/08/17). `}</li>\n      <li parentName=\"ul\">{`Enfin, le cluster “Facial recognition” qui représente 10% des articles du corpus porte sur différents développements des technologies de reconnaissance faciale dans l’espace public, dans des logiciels ou sur les plateformes du Web (`}<em parentName=\"li\">{`China is now using facial recognition cameras to monitor Uighur Muslims across the country, report claims`}</em>{` - Mail Online - 15/04/19). `}</li>\n    </ul>\n    <p>{`L’ensemble de ces 5 plus grands clusters thématiques domine largement l’espace médiatique car ces derniers ne constituent pas moins de 75,6% du total des articles du corpus critique (1581 articles) et représentent sur le graphe 46,4% du réseau de termes extraits (1389 termes).`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” x 9 clusters + de 1%\nRQ probleme overlaping / et nom des clusters absents ou nom des termes absents !! `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Autonomous_Cars\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Voice_Assistant\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Sex_Robots\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Health_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Deepfake\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Predictive_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Chatbot\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Game_&_Education\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Profiling_Algorthms\"\n    }]} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Future_of_AI\": \"#e97f3e\",\n      \"Profiling_Algorthms\": \"#53cb7b\",\n      \"Job_Automation\": \"#eb102b\",\n      \"Market_&_Prices\": \"#d08be8\",\n      \"Predictive_Algorithms\": \"#a3bf28\",\n      \"Web_Algorithms\": \"#e7eb2a\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#108cac\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#d3a715\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#1b90be\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#00c8cc\",\n      \"Sex_Robots\": \"#db7187\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#6deeff\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} mdxType=\"GraphBlock\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” x 9 clusters - de 1%\nRQ probleme overlaping / et nom des clusters absents ou nom des termes absents !! `}</p>\n    </blockquote>\n    <p>{`Un second ensemble, bien que très hétérogène du point de vue des thématiques déployées et de leur position au sein du graphe, est constitué de 9 clusters qui représentent respectivement entre 1% et 4% du nombre d’articles du corpus. L’ensemble de ces thèmes représente 21,6% des articles du corpus (452 articles) et 38 % des termes du graphe (1136 termes). Dans ce sous-ensemble se trouvent les clusters :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`“Voice Assistant” : `}<em parentName=\"li\">{`Google’s Nest microphone intensifies privacy concerns`}</em>{` -  `}<em parentName=\"li\">{`The Washington Post`}</em>{` - 25/02/19`}</li>\n      <li parentName=\"ul\">{`“Autonomous Cars” : `}<em parentName=\"li\">{`Self-driving cars will need to be programmed to kill their owners, academics warn, and people will have to choose who will die`}</em>{` - Independent Online - 27/10/15`}</li>\n      <li parentName=\"ul\">{`“Sex Robots” : `}<em parentName=\"li\">{`Sex robots could lead to population crisis as men opt for virtual girlfriends`}</em>{` - Mirror.co.uk - 27/01/19`}</li>\n      <li parentName=\"ul\">{`“Health`}<em parentName=\"li\">{`Algorithms” : `}<em parentName=\"em\">{`Racial bias in a medical algorithm favors white patients over sicker black patients`}</em>{` - _The Washington Post`}</em>{`  - 25/10/19`}</li>\n      <li parentName=\"ul\">{`“Deepfake” : `}<em parentName=\"li\">{`You thought fake news was bad? Deep fakes are where truth goes to die`}</em>{` -  `}<em parentName=\"li\">{`The Guardian`}</em>{`  - 2/11/18`}</li>\n      <li parentName=\"ul\">{`“Predictive Algorithms” : `}<em parentName=\"li\">{`Criminal justice software algorithm used across the US is biased against black inmates, study finds`}</em>{` - Independent Online - 27/06/16`}</li>\n      <li parentName=\"ul\">{`“Chatbot” : `}<em parentName=\"li\">{`Microsoft “deeply sorry” after AI becomes “Hitler-loving sex robot”`}</em>{` - The Telegraph Online - 26/03/16`}</li>\n      <li parentName=\"ul\">{`“Game and Education” : `}<em parentName=\"li\">{`Korean Go master quits the game because AI 'cannot be defeated`}</em>{` - CNN Wire - 28/11/19`}</li>\n      <li parentName=\"ul\">{`“Profiling Algorthms” : `}<em parentName=\"li\">{`Artificial intelligence can identify “gay faces” from a picture, study claims`}</em>{` - Independent Online - 08/09/17`}</li>\n    </ul>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Robo-Advisers\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"DeepDream_Nightmares\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Deep_Voice\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Scientific_Research\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Market_&_Prices\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Image_Search\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Email\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Music\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Consumer_&_Copyright\"\n    }]} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Future_of_AI\": \"#e97f3e\",\n      \"Profiling_Algorthms\": \"#53cb7b\",\n      \"Job_Automation\": \"#eb102b\",\n      \"Market_&_Prices\": \"#d08be8\",\n      \"Predictive_Algorithms\": \"#a3bf28\",\n      \"Web_Algorithms\": \"#e7eb2a\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#108cac\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#d3a715\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#1b90be\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#00c8cc\",\n      \"Sex_Robots\": \"#db7187\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#6deeff\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} mdxType=\"GraphBlock\" />\n    <p>{`Enfin, le graphe se compose de 9 autres clusters de taille très réduite, entre 0,8% et 0,1% des articles pour chaque cluster (58 articles au total). Les termes extraits de ces articles représentent pourtant 15,6% (466 termes au total) de la totalité des termes du graphe. Ces thématiques peuvent s’apparenter à des signaux faibles d’un discours critique sur les algorithmes et l’IA détectés par notre méthode d’extraction de termes mais pourtant sous représentés en volume d’articles. Ces clusters se centrent autour de thématiques très spécifiques, évoquant parfois des types de calculateurs mais le plus souvent des domaines d’application :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`“Robot-Advisers” : `}<em parentName=\"li\">{`Mortgage algorithms found to have racial bias`}</em>{` - The Washington Post - 15/11/18`}</li>\n      <li parentName=\"ul\">{`“DeepDream Nightmares” : `}<em parentName=\"li\">{`The AI 'nightmare machine’: Spooky Google algorithm transforms famous sights into horror scenes`}</em>{` - Mail Online - 25/10/16`}</li>\n      <li parentName=\"ul\">{`“Deep Voice” : `}<em parentName=\"li\">{`Creepy AI can clone anyone’s voice with just one minute of audio`}</em>{` - Mail Online - 25/04/17`}</li>\n      <li parentName=\"ul\">{`“Scientific Research” : `}<em parentName=\"li\">{`Facebook shuts down chatbot experiment after AIs spontaneously develop their own language`}</em>{` - London Evening Std Online - 01/08/17`}</li>\n      <li parentName=\"ul\">{`“Market and Prices” : `}<em parentName=\"li\">{`Artificial Intelligence - Beware Algorithms That Could Collude To Unfairly Raise Prices`}</em>{` - The Wall Street Journal - 02/04/19`}</li>\n      <li parentName=\"ul\">{`“Image Search” : `}<em parentName=\"li\">{`Three black teenagers’: anger as Google image search shows police mugshots`}</em>{` - The Guardian - 10/06/16`}</li>\n      <li parentName=\"ul\">{`“Email” : `}<em parentName=\"li\">{`Google expands “creepy” Gmail AI that can automatically reply to emails for you`}</em>{` - Mail Online - 31/08/18`}</li>\n      <li parentName=\"ul\">{`“Music” : `}<em parentName=\"li\">{`Why “random” shuffle feels far from random`}</em>{` - Independent Online - 24/02/15`}</li>\n      <li parentName=\"ul\">{`“Consumer and Copyright” : `}<em parentName=\"li\">{`Apple is forced to change its App Store search algorithm after it emerged its own products were being ranked significantly higher`}</em>{` - Mail Online - 09/09/19`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Graphe sémantique des thématiques des articles “critiques” full\nRQ probleme overlaping / et nom des clusters absents ou nom des termes absents !! `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} nodeColorVariable={'cluster_rename'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Future_of_AI\": \"#e97f3e\",\n      \"Profiling_Algorthms\": \"#53cb7b\",\n      \"Job_Automation\": \"#eb102b\",\n      \"Market_&_Prices\": \"#d08be8\",\n      \"Predictive_Algorithms\": \"#a3bf28\",\n      \"Web_Algorithms\": \"#e7eb2a\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#108cac\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#d3a715\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#1b90be\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#00c8cc\",\n      \"Sex_Robots\": \"#db7187\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#6deeff\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} mdxType=\"GraphBlock\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-et-visualisation-du-graphe-de-termes\"\n    }}>{`Méthode : Extraction et visualisation du graphe de termes`}</h2>\n    <p><strong parentName=\"p\">{`Extraction de termes dans le corpus :`}</strong>{`\nL’analyse sémantique du corpus critique a été effectuée à partir du logiciel Cortext en effectuant une extraction de termes sur le texte complet des articles (titre, lead paragraph et texte de l’article) puis un nettoyage des listes de termes extraites suppression de stopwords (balises des fichiers vidéo ou élément de timecode non nettoyés dans factiva).\nL’extraction de termes a été réalisée à partir de la méthode “pigeon holes” (favorisant la spécificité des termes et leur occurrence par document) au niveau des phrases. 6000 noms incluant des monogrammes ainsi que les bigrammes et trigrammes. S’il peut paraitre étrange que certains termes assez proches ont étés conservés, par exemple toutes les variantes de facial recognition, nous avons fait le choix de conserver cette hétérogénéité afin de rendre compte de diversité des manières de définir les agents calculateurs.`}</p>\n    <p><strong parentName=\"p\">{`Production du réseau de cooccurrence et clustering :`}</strong>{`\nL’analyse du corpus a été réalisée à partir d’un graphe de 2 991 termes reliés entre eux par 54 062 liens de cooccurrences. La spatialisation produite par le logiciel Cortext - `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.cortext.net\"\n      }}>{`https://www.cortext.net`}</a>{`, puis visualisée dans le logiciel Gephi - `}<a parentName=\"p\" {...{\n        \"href\": \"https://gephi.org\"\n      }}>{`https://gephi.org`}</a>{`, est basée sur une variante de l’algorithme de spatialisation Fruchterman Reingold dont la position des nœuds est optimisée par leur appartenance aux clusters détectés automatiquement par l’algorithme de Louvain. La couleur des nœuds est relative à chacun des clusters ainsi détectés et leur taille est relative à la somme des occurrences du terme au sein du corpus. Chaque article du corpus est ainsi associé à un unique cluster d’appartenance en fonction des termes qu’il contient. Les clusters ont été interprétés qualitativement et nommés en fonction de leur cohérence thématique, qualifiable à partir des termes les plus fréquents au sein de chacun des clusters.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quels-sont-les-thèmes-sur-lesquels-porte-la-critique-\",\n    level: 2,\n    title: \"Quels sont les thèmes sur lesquels porte la critique ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-et-visualisation-du-graphe-de-termes\",\n    level: 2,\n    title: \"Méthode : Extraction et visualisation du graphe de termes\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.52,\"time\":151200,\"words\":504}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport LinearGraphBlock from '../../components/LinearGraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-évolue-lagenda-médiatique-\"\n    }}>{`Comment évolue l’agenda médiatique ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles 3 profils`}</p>\n    </blockquote>\n    <LinearGraphBlock graphType={'histogram'} xVariable={'month'} yVariable={'value'} xLabelVariable={'fullName'} colorVariable={'topic'} colorPalette={{\n      \"Future_of_AI\": \"#e97f3e\",\n      \"Profiling_Algorthms\": \"#53cb7b\",\n      \"Job_Automation\": \"#eb102b\",\n      \"Market_&_Prices\": \"#d08be8\",\n      \"Predictive_Algorithms\": \"#a3bf28\",\n      \"Web_Algorithms\": \"#e7eb2a\",\n      \"Facial_Recognition\": \"#54a5e8\",\n      \"Voice_Assistant\": \"#108cac\",\n      \"DeepDream_Nightmares\": \"#e1194a\",\n      \"Health_Algorithms\": \"#fa8566\",\n      \"Autonomous_Cars\": \"#d3a715\",\n      \"Game_&_Education\": \"#a1943c\",\n      \"Chatbot\": \"#1b90be\",\n      \"Consumer_&_Copyright\": \"#f49c57\",\n      \"Killer_Robots\": \"#4650ee\",\n      \"Robo-Advisers\": \"#00c8cc\",\n      \"Sex_Robots\": \"#db7187\",\n      \"Deepfake\": \"#4f990f\",\n      \"Image_Search\": \"#6deeff\",\n      \"Scientific_Research\": \"#cff157\",\n      \"Music\": \"#18a1bc\",\n      \"Email\": \"#ffb7e0\",\n      \"Deep_Voice\": \"#799c89\"\n    }} mdxType=\"LinearGraphBlock\" />\n    <LinearGraphBlock xVariable={'month'} yVariable={'value'} xLabelVariable={'fullName'} colorVariable={'topic'} mdxType=\"LinearGraphBlock\" />\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles profils n°1 stable future of ai et web algo `}</p>\n    </blockquote>\n    <p>{`L’analyse de la distribution temporelle du nombre d’articles des dix plus importants clusters sur la période de 5 années que couvre le corpus critique laisse apparaître trois profils distincts. On observe une distribution assez stable sur la période de la répartition des articles des deux plus grands clusters structurants de la cartographie que sont les “Web Algortihms” et “Future of AI”. La distribution de ces deux plus grands clusters montre qu’il existe une production régulière d’articles critiques sur les troubles liés aux algorithmes du web et aux craintes relatives aux développements futurs de l’intelligence artificielle et des robots. Ces thèmes concentrent le plus grand nombre d’articles et forment deux pôles sur lesquels s’établit de façon récurrente un discours critique. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles profils n°1 hausse 2019 facial reco + Deepfake `}</p>\n    </blockquote>\n    <p>{`Un second profil de distribution concerne les clusters “Facial recognition” et “Deepfake” qui connaissent une hausse importante du volume d’articles publiés sur l’année 2019. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles profils n°1 hausse 2017/18 cf texte pour exemples `}</p>\n    </blockquote>\n    <p>{`Enfin le troisième profil de distribution montre une hausse du nombre d’articles qui se concentrent sur les années 2017 et 2018 et une baisse significative sur l’année 2019. Ce type de distribution concerne les clusters “Job Automation”, “Killer Robots”, “Autonomous Cars”, “Sex Robots”, “Voice Assistant”, “Predictive Algorithms”. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline Termes related non critique clusters profils identique aux variation (voir si on intégre les requêtes problème mesure cf JPC ou image dans le texte comparaison `}</p>\n    </blockquote>\n    <p>{`Il est plus difficile d’interpréter ces distributions irrégulières étant donné la méthode d’annotation du corpus utilisée, mais elles semblent montrer la manière dont la presse, en focalisant son attention sur certaines technologies plutôt que d’autres, constitue un agenda médiatique sur lequel se déploie également un discours critique. Afin de vérifier cette hypothèse d’une distribution concentrée sur des périodes spécifiques, focalisant l’attention médiatique sur certaines technologies, indépendamment de la production d’un discours critique, nous avons tenté d’observer les distributions de certains termes constitutifs de ces clusters au sein du corpus d’articles étiquetés comme non-critique. Ces distributions montrent une répartition similaire à celle observée pour les clusters du corpus critique. Ainsi les “deepkake” connaissent une fréquence d’apparition croissante au sein des articles non critiques entre 2018 et 2019. La même distribution est observable également pour le terme “facial recognition” qui croît progressivement jusqu’en 2019. L’ensemble des termes associés aux robots sexuels présents dans le corpus étiqueté comme non critique connaissent leur plus forte fréquence sur les années 2017 et 2018 avant de diminuer en 2019, on observe également le même phénomène de concentration de la fréquence d’apparition des termes relatifs aux voitures autonomes sur les années 2017 et 2018, ou encore pour les termes relatifs aux assistants vocaux dont la plus forte distribution se concentre sur la même période.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-évolue-lagenda-médiatique-\",\n    level: 2,\n    title: \"Comment évolue l’agenda médiatique ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.98,\"time\":358800,\"words\":1196}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"quest-ce-que-la-topologie-du-réseau-nous-apprend-de-la-critique-médiatique-\"\n    }}>{`Qu’est-ce que la topologie du réseau nous apprend de la critique médiatique ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR full algo robot intermed\nRQ probeme couleur choisies dans sigma ou gexf ? + Afficher label cluster (ou en surcouche plus les termes `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#eb2941\",\n      \"Algo\": \"#9e41f0\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <p>{`La dispersion des clusters dans l’espace topologique laisse apparaître une opposition entre deux principaux types de calculateurs. On observe ainsi un déplacement entre la partie droite du graphe qui comporte des articles mettant en scène des techniques de calcul algorithmique incorporées dans l’environnement de l’utilisateur pour guider, orienter ou calculer ses comportements, vers la partie gauche qui comporte des articles qui se caractérisent par la personnification de l’IA dans une entité incarnée et autonome à l’égard des humains.  `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR droite web algo et al\nRQ : estce qu’on zoom ou pas pour eviter de perdre la lsibilité de la topologie ? `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#eb2941\",\n      \"Algo\": \"#9e41f0\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`La première zone à droite concerne exclusivement des algorithmes, qu’ils s’agissent des algorithmes du Web comme le fil d’actualité de Facebook, la section trending topic de Twitter, les algorithmes de recherche d’images et de sites web de Google. La plupart de ces agents algorithmiques constituent les couches techniques de services largement déployés dans nos environnements numériques quotidiens. D’autres représentent des technologies plus émergentes qui font l’objet de développements et d’expérimentations plus localisées et plus régulées tels les algorithmes de police ou de justice prédictive, de détection des images dans les systèmes de reconnaissance faciale ou les deepfakes.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR gauche AI robots\nRQ : idem `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#eb2941\",\n      \"Algo\": \"#9e41f0\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Dans la partie la plus à gauche, à l’opposé du graphe, les clusters se concentrent autour d’agents calculateurs qui sont davantage incarnés sous forme de machines ou de robots. Les entités qui peuplent cette zone sont personnifiées dans des dispositifs physiques séparés de nos équipements numériques habituels que sont nos ordinateurs et nos smartphones. Ces dispositifs, en plus d’être incarnés physiquement sont équipés d’une capacité d’agir autonome via de systèmes de calcul basés sur l’IA. En simulant à la fois le corps et les capacités cognitives des humains ils sont en mesure de produire certaines actions sans intervention humaine dans différents domaines telles que le transport avec les voitures autonomes, la défense avec les “robots tueurs” et les drones, le travail avec l’automatisation des tâches professionnelles ou encore les relations physiques avec les robots sexuels.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR centre zone grise ??? mettre en gris les zone intérmédiaire ??? ou possibilité d’annotation\nRQ idem `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Intermed\"\n    }]} nodeColorVariable={'algo_robot_intermed'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#eb2941\",\n      \"Algo\": \"#9e41f0\",\n      \"Intermed\": \"#9b9b9b\"\n    }} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Entre ces deux pôles existe une zone intermédiaire plus difficilement identifiable, constituée de dispositifs à mi-chemin entre les machines autonomes et les algorithmes de nos environnements numériques quotidiens. Parmi les agents calculateurs présents dans cet espace on retrouve par exemple les assistants vocaux pouvant être embarqués dans nos smartphone ou dans des dispositifs du type enceinte connectées, les chatbots du Web, les robo-advisors qui sont les algorithmes effectuant des opérations dans le domaine de la finance ou encore des technologies de deep learning comme le dispositif Deep Dream de Google. Ces technologies bien qu’assez accessibles au grand public sont souvent encore émergentes. Elles sont en capacité de gérer un certain nombre de tâches parfois basiques de manière autonome mais ne sont pas toujours incarnées dans des dispositifs physiques, elles sont encore le plus souvent implémentées et accessibles via nos ordinateurs et smartphones.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR full\nProbleme couleur affichage label idem et taille du graphe zoom si on enleve les slides à droite coordonnées pas bonnes `}</p>\n    </blockquote>\n    <GraphBlock x={0.4588867805186573} y={0.5190807505798019} ratio={0.80} nodeColorVariable={'algo_robot'} nodeLabelVariable={'cluster_label'} labelDensity={1.5} colorPalette={{\n      \"Robot\": \"#eb2941\",\n      \"Algo\": \"#9e41f0\"\n    }} mdxType=\"GraphBlock\" />\n    <p>{`La tendance du graphe à séparer des dispositifs de calcul aux propriétés différenciées, nous amène à explorer ces dimensions de manière plus approfondie. Afin de réaliser une analyse comparative entre les deux pôles qui se dégagent de l’analyse topologique, le choix a été fait de découper le réseau en deux sous-ensembles comparables en volume d’articles, de clusters et de termes. Ainsi, l’espace intitulé “robots” compte 52% des articles du corpus, 9 clusters principaux (de taille supérieure à 1%) et 1790 termes. L’espace intitulé “algorithmes” représente quant à lui 48% articles, 8 clusters principaux et 1201 termes. Par une approche comparative, ce découpage en deux sous-ensembles équivalents permet d’explorer les différents attributs qui peuplent ces deux espaces sémantiques.`}</p>\n    <p>{`Les méthodes de traitement automatique du langage permettent une analyse des éléments des discours critiques, à partir des termes saillants extraits au sein des articles, peuplant ces deux espaces sémantiques. Pour mettre en évidence les caractéristiques de ces deux espaces de critique, nous avons entrepris d’identifier systématiquement la manière dont sont désignées les entités techniques, la société qui les abrite et la façon dont les premiers ont des effets sur la seconde. Tous ces discours critiques cherchent à qualifier la manière dont des Agents produisent des Victimes en exerçant un type particulier d’opération ; ces dernières sont constitutives d’un ensemble de troubles révélant autant de nouveaux défis, ou d’enjeux, produits par le déploiement des techniques d’IA dans nos sociétés (Cardon, Crépel, 2019).`}</p>\n    <p>{`Afin de différencier ces entités au sein du graphe, la plupart des termes, ne souffrants pas trop d’ambiguïté (66% des termes du graphe), ont été annotés manuellement en dix catégories distinctes. Parmi ces catégories, notre analyse consiste à comparer trois d’entre elles qui apparaissent particulièrement pertinentes pour différencier les deux espaces. La catégorie “Technical” renvoie à ce que nous avons désigné comme agents calculateurs, elle concerne toutes les termes relatifs aux entités techniques tels que les algorithmes, les machines, les fonctionnalités ou services techniques, les terminaux mais également les produits ou services issus le plus souvent de startup qui sont parfois difficiles à différencier de l’entité économique qui les a produit. La seconde catégorie relative aux agents humains, nommée “People”, concerne tous les termes désignant des personnes ou groupes de personnes non nommées (à la différence des catégories “Person” pour les noms propres et “Institutions” pour les groupes ou structures ayant une existence juridique). Enfin, la troisième catégorie que nous présenterons par la suite, nommée “Issues”, permet d’identifier les termes qui désignent des enjeux, des difficultés ou des problèmes extraits au sein des articles. `}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--division-du-graphe-et-du-corpus-selon-la-topologie\"\n    }}>{`Méthode : Division du graphe et du corpus selon la topologie`}</h2>\n    <p>{`Pour faciliter une analyse comparative entre l’espace sémantique interprété comme lié aux “robots” et l’espace lié aux “algorithmes” chaque cluster a été associé à l’une ou l’autre de ces catégories. Les deux sous-ensembles sont comparables en volume d’articles, de clusters et de termes. `}</p>\n    <p>{`L’espace intitulé “robots” compte : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`9 clusters principaux (de taille supérieure à 1% du corpus d’articles)`}</li>\n      <li parentName=\"ul\">{`52% des articles du corpus (chaque article étant associé à un unique cluster)`}</li>\n      <li parentName=\"ul\">{`1790 termes au sein du réseau (chaque terme étant associé à un unique cluster). `}</li>\n    </ul>\n    <p>{`L’espace intitulé “algorithmes” compte `}</p>\n    <ul>\n      <li parentName=\"ul\">{`8 clusters principaux (de taille supérieure à 1% du corpus d’articles)`}</li>\n      <li parentName=\"ul\">{`48% articles (chaque article étant associé à un unique cluster)`}</li>\n      <li parentName=\"ul\">{`1201 termes au sein du réseau (chaque terme étant associé à un unique cluster).`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quest-ce-que-la-topologie-du-réseau-nous-apprend-de-la-critique-médiatique-\",\n    level: 2,\n    title: \"Qu’est-ce que la topologie du réseau nous apprend de la critique médiatique ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--division-du-graphe-et-du-corpus-selon-la-topologie\",\n    level: 2,\n    title: \"Méthode : Division du graphe et du corpus selon la topologie\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"8 min read\",\"minutes\":7.44,\"time\":446400,\"words\":1488}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"qui-sont-les-agents-calculateurs-\"\n    }}>{`Qui sont les agents calculateurs ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Technical Tag BICOLOR full\nprobleme affichage label des noeuds filtrés + couleurs idem et zoom ++ je ne sais pas si interessant de conserver la topologie 2 block coloré facon tagcloud ou liste serait surement plus efficace : ideal effet de retriage du graphe en grappe ou liste (enore plus vrai pour people et issue car peu peuplé`}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }]} nodeColorVariable={'algo_robot'} mdxType=\"GraphBlock\" />\n    <p>{`La décomposition des qualifications des Agents de l’IA fait apparaître des entités techniques aux propriétés très différentes. Ce qui caractérise les Agents de la zone “robots” de notre cartographie est le très haut degré d’intelligence et d’autonomie des IA, ainsi que leur capacité à être incarné sous la forme de machines. Le terme de robot domine cet espace et que ce soit pour la conduite automobile, le sexe, la guerre ou la production industrielle, ces Agents sont dotés de capacité d’initiatives autonomes. Les caractéristiques qui leurs sont données contribuent à détacher leur capacité de choisir, de décider et d’agir du système socio-technique qui les a produits ou de l’environnement dans lequel ils se déploient. En revanche, les agents de la zone “algorithmes” de notre cartographie n’ont pas cette autonomie et sont plutôt définies comme des parties ou des éléments de systèmes sociotechniques distribués dans des environnements numériques.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Technical Tag BICOLOR gauche\nRQ : eviter le zoom pour evoter de perdre la topologie d’ensemble mais lecture difficile`}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot'} filtersModeAnd={true} mdxType=\"GraphBlock\" />\n    <p>{`Si l’on compare les termes les plus fréquents catégorisés en tant qu’entité technique, on observe que dans l’espace “Robots” les calculateurs renvoient le plus souvent à des dispositifs incarnés tels que les robots, les machines, les ordinateurs, les voitures, les armes, les drones, les weapons, les dolls. D’autres entités techniques se distinguent car elles renvoient à une définition très abstraite et générique des calculateurs qui sont désignés en tant que system, artificial intelligence ou encore comme automation ou model. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Technical Tag BICOLOR droite\nRQ : idem eviter le zoom pour evoter de perdre la topologie d’ensemble mais lecture difficile`}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot'} filtersModeAnd={true} mdxType=\"GraphBlock\" />\n    <p>{`Dans l’espace sémantique intitulé “Algorithmes” les entités techniques, même sous des dénominations abstraites, ne constituent pas des objets autonomes (algorithm, devices, program, bot ou phone). La majorité des termes se distingue par le fait qu’elle relève de technologies beaucoup plus spécifiques, renvoyant le plus souvent à des dispositifs technologiques précis tels que facial recognition, deepfake, social network, chatbot, criminal justice algortihm et de manière encore plus spécifique à des fonctionnalités de certains services embarqués dans nos terminaux mobiles ou sur le web, parfois associés à des marques, tels que Siri, Search engine, Trending topics, Google assistant, Iphone, recommendation algorithm, Facebook messenger, Google images, image search. Ces qualifications n’isolent pas les IA mais les incorporent dans un environnement sociotechnique dans lequel le calcul joue un rôle de plus en plus intense pour assister, trouver de l’information, guider ou prévenir un comportement. `}</p>\n    <h2 {...{\n      \"id\": \"qui-sont-les-agents-humains-\"\n    }}>{`Qui sont les agents humains ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation People Tag BICOLOR full`}</p>\n    </blockquote>\n    <p>{`La catégorie “People” à partir de laquelle ont été annotés dans les termes désignant des agents humains, personnes ou groupes de personnes non nommées ou n’ayant pas d’existence institutionnelle, permet d’observer la manière dont est composé le monde social dans lequel les IA ont été introduites. Elle fait apparaître une autre différence entre les deux espaces sémantiques. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation People Tag BICOLOR gauche`}</p>\n    </blockquote>\n    <p>{`Du côté de l’espace “Robots” on observe parmi les termes les plus fréquents une forte présence de références à l’humanité, telles que humans, humankind, human civilisation, human driver, human supervisor. À la lecture du contenu de certains articles associés à cet espace, on constate que face aux agents calculateurs incarnés par des machines, tels que décrits précédemment, la notion d’humanité est en fait une expression très générique de la société humaine tout entière sur laquelle ces agents font peser une menace. D’autres termes assez génériques sont également présents dans cet espace mais relèvent d’une définition plus centrée sur des domaines dans lesquels les technologies robotiques sont amenées à se déployer, tels que la finance, le marché du travail, la défense et les transports. On retrouve ainsi des termes tels que workers, customers, employees, drivers, retailers, soldiers, passengers, brokers, traders, farmers. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation People Tag BICOLOR droite`}</p>\n    </blockquote>\n    <p>{`L’espace associé aux “Algorithmes” est quant à lui peuplé de termes beaucoup moins génériques que dans l’espace sémantique des “Robots”. Les agents humains sont ici désignés de manière beaucoup plus précise et font référence à des personnes mieux identifiées. On retrouve ainsi, parmi les termes fréquents, des entités faisant référence aux plateformes numériques users, accounts, Facebook users, Youtube users. Les termes qui désignent ces agents permettent dans la grande majorité de les qualifier en fonction de propriétés comme l’âge (children, child, kids, parents), le genre (women, men) l’appartenance éthnique (black people, black patients, african-americans), l’orientation politique (white supremacists, black defendants, illuminati) ou sexuelle (gays, lesbian, trans people).`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Full Tag BICOLOR /// ou liste reacpitulative cf papier LDK 2021 `}</p>\n    </blockquote>\n    <p>{`L’analyse topologique des clusters faisant apparaître une opposition entre les machines ou intelligences autonomes et les environnements numériques algorithmiques, est renforcée par une analyse plus spécifique des termes les plus fréquents qui peuplent ces deux espaces. En effet, on observe dans l’espace sémantique intitulé “Robots” une forme d’abstraction et d’incarnation des agents techniques et une généricité dans la manière de désigner les agents humains qui apparaissent comme les victimes des troubles potentiels tels qu’ils sont dénoncés dans les articles critiques. À l’inverse, dans l’espace lié aux “Algorithmes”, les agents techniques sont davantage spécifiés et renvoient le plus souvent à des services ou des fonctionnalités techniques très précises qui sont mis en cause dans les articles. Les agents humains associés à ces entités techniques algorithmiques ne réfèrent pas à des catégories génériques comme l’humanité toute entière mais sont qualifiés par une variété d’attributs qui permettent de les identifier de manière beaucoup plus précise.  `}</p>\n    <h2 {...{\n      \"id\": \"quels-sont-les-troubles-produits-par-ces-agents-calculateurs-\"\n    }}>{`Quels sont les troubles produits par ces agents calculateurs ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Issue Tag BICOLOR full`}</p>\n    </blockquote>\n    <p>{`La catégorie intitulée “Issues” permet une lecture comparée des termes relatifs aux troubles et aux enjeux qui sont associés aux agents techniques sur lesquels porte la critique. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Issue Tag BICOLOR gauche`}</p>\n    </blockquote>\n    <p>{`Du côté de l’espace sémantique “Robots”, c’est l’affrontement entre les humains et les IA qui est constamment appelé comme enjeu. On observe la présence de termes tels que attack, safety, arms race, Cold war, human extinction, extinction, natural disasters, AI-powered horror, mass extinction, physical damage, qui renvoient le plus souvent au registre de la guerre ou de destruction à l’échelle planétaire, faisant peser un risque existentiel sur l’avenir de l’humanité. Ces menaces font émerger des enjeux de contrôle de ces technologies autonomes, tels que ban, petition, human oversight, lack of accountability, superintelligence control problem, control problem. D’autres termes relèvent de troubles assez visibles dans cet espace sémantique associés au remplacement, au dépassement et à une perte de contrôle de l’homme par les machines, notamment dans le domaine de l’économie, avec des termes tels que job losses, surge pricing, pay gap.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Issue Tag BICOLOR droite`}</p>\n    </blockquote>\n    <p>{`Les termes relatifs aux troubles et enjeux constitutifs du sous-ensemble nommé “Algorithmes” laissent apparaître d’autres formes de discours de critique davantage imprégnées de références juridiques et légales. En effet, on trouve dans cette partie du graphe parmi les termes fréquents un champ sémantique constitué de références juridiques tels que crime, law enforcement, Human Rights, lawsuit, Civil Liberties, prejudice, fraud, public interest. Les troubles produits par les agents techniques dénoncés au sein des articles associés à cet espace concernent les discriminations (bias, biases, discrimination, antisemitic, race or gender, fair use, risk score, liberal bias), les enjeux de privacy (privacy, surveillance, Big Brother, privacy issues), les difficultés de filtrage ou d’exposition à de contenus innapropriés (violence, inappropriate content, nudity, age restriction, violent crime) et frauduleux (fake news, misinformaton, conspiracy theories, revenge porn, filter bubble), ou encore de censure et de liberté d’expression (free expression)`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--tagging-des-entités-du-graphe\"\n    }}>{`Méthode : Tagging des entités du graphe`}</h2>\n    <p>{`Pour chacun des 2991 termes du réseau une catégorisation manuelle a été réalisée à pour différencier le type d’entités, de sorte que 66% des termes du réseaux ont été catégorisés à partir de 10 catégories distinctes : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Technical (15%) : Calculateur, Machine, Fonctionnalité, Devices, Service Technique, Dispositifs techniques de startup difficiles à différencier de l’entité économique`}</li>\n      <li parentName=\"ul\">{`Company (5%) : Entreprises, Start-up, Domaine d’entreprise`}</li>\n      <li parentName=\"ul\">{`Fiction (1%): personnages, films, jeux vidéo`}</li>\n      <li parentName=\"ul\">{`Person (6%) : Personnalités politique, médiatique, recherche, noms propres`}</li>\n      <li parentName=\"ul\">{`People (8%) :  personne ou groupe de personnes non nommée`}</li>\n      <li parentName=\"ul\">{`Institution (4%) : Agence gouvernementale, ONG, Association, Université, Textes juridiques`}</li>\n      <li parentName=\"ul\">{`Locality (1%) : Lieux`}</li>\n      <li parentName=\"ul\">{`Data_inout (10%) : Données, traces\t`}</li>\n      <li parentName=\"ul\">{`Topic (10%) : Domaine, Thèmes`}</li>\n      <li parentName=\"ul\">{`Issues (7%) :  Enjeux et problèmes`}</li>\n    </ul>\n    <p>{`Une 11ème catégorie rassemble les termes difficilement interprétables et non catégorisables`}</p>\n    <ul>\n      <li parentName=\"ul\">{`NC terms (34%) : Termes non classés car trop ambigus ou non pertinents `}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"qui-sont-les-agents-calculateurs-\",\n    level: 2,\n    title: \"Qui sont les agents calculateurs ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"qui-sont-les-agents-humains-\",\n    level: 2,\n    title: \"Qui sont les agents humains ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"quels-sont-les-troubles-produits-par-ces-agents-calculateurs-\",\n    level: 2,\n    title: \"Quels sont les troubles produits par ces agents calculateurs ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--tagging-des-entités-du-graphe\",\n    level: 2,\n    title: \"Méthode : Tagging des entités du graphe\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.645,\"time\":218700,\"words\":729}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-sont-exprimés-les-verbes-de-troubles-\"\n    }}>{`Comment sont exprimés les verbes de troubles ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles full`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"from\": \"#eb2941\",\n      \"to\": \"#9e41f0\"\n    }} colorScaleType={'continuous'} mdxType=\"IceCreamBlock\" />\n    <p>{`Une autre manière de poursuivre cette analyse comparative des troubles et formes d’agentivité associés aux calculateurs consiste en l’exploration d’une autre entité sémantique au sein du corpus d’articles que sont les verbes mais absente du réseau du fait de la procédure d’extraction. Après avoir réalisé une extraction d’une liste de verbes interprétables comme étant potentiellement de bons candidats aux troubles produits par les dispositifs techniques, nous avons calculé et comparé leur score tf-idf  au sein des deux sous-ensemble d’articles constitutifs du réseau.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles robot`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"robot\"\n    }]} mdxType=\"IceCreamBlock\" />\n    <p>{`Les verbes dont les scores tf-idf sont les plus importants dans les articles qui composent l’espace sémantique “Robots” viennent conforter l’analyse des troubles effectuée à partir des termes catégorisés comme “Issues” au sein du graphe. En effet, on observe une plus forte représentation de verbes exprimant une menace de la part des machines et intelligences autonomes relevant d’un discours prophétique, voire apocalyptique. Parmi les verbes sélectionnés comme bons candidats à l’expression de troubles ayant les plus importants scores, on trouve des verbes qui expriment des notions de destruction (doom, destroy, eradicate, kill, eliminate) et de domination des machines sur l’homme (enslave, dominate), mais également de  dépassement ou de remplacement des hommes par les ces agents techniques (overtake, surpass, replace, defeat). D’autres verbes davantage représentés dans le sous ensemble “robots” renvoient à des notions de transformation et de changement (reshape, transform, disrupt) ou aux capacités de ces agents techniques à imiter ou simuler les comportements humains (ressemble, simulate, reproduce, mimic).`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles algos`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"algo\"\n    }]} mdxType=\"IceCreamBlock\" />\n    <p>{`Dans le sous-ensemble d’articles associés aux “Algorithmes” on retrouve également des verbes qui viennent conforter les analyses précédentes réalisées à partir de la catégories “Issues”. En effet, les verbes qui présentent les plus hauts scores de tf-idf renvoient aux questions de filtrage et de censure de l’information (filter, delete, supress, censor), aux problèmes de surveillance et de privacy (profile, suspect, spy, target, track), à la dénoncitation des formes de discrimination (bias, discriminate) ou encore aux phénomènes de propagation et d’amplification de contenus frauduleux (promote, amplify, spread). `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles full`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"from\": \"#eb2941\",\n      \"to\": \"#9e41f0\"\n    }} colorScaleType={'continuous'} mdxType=\"IceCreamBlock\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-des-verbes-de-troubles-et-calcul-des-tf-idf-sur-le-corpus\"\n    }}>{`Méthode : Extraction des verbes de troubles et calcul des TF-IDF sur le corpus`}</h2>\n    <p>{`L’analyse des verbes de troubles a été réalisée, à partir du logiciel Cortext, en effectuant une première extraction de 1000 verbes sur le texte complet des articles critiques du corpus en employant la méthode “pigeon holes” via le logiciel Cortext (identique à la méthode d’extraction des termes du graphe).\nLa liste de verbes ainsi produite a d’abord été manuellement annotée afin d’extraire une sous liste de 431 verbes pouvant être interprétés comme des problèmes, des difficultés ou des troubles. En effectuant plusieurs itérations de visualisation matricielle via l’outil clustergrammer `}<a parentName=\"p\" {...{\n        \"href\": \"https://maayanlab.cloud/clustergrammer/\"\n      }}>{`https://maayanlab.cloud/clustergrammer/`}</a>{` des scores de tf-idf pour chacun des verbes sur l’ensemble des articles associés aux 17 clusters principaux (supérieur à 1% d’articles du corpus) via l’outil clustergrammer une liste plus restreinte de 66 verbes a été sélectionnée présentant une plus forte saillance dans la matrice et étant plus explicitement interprétables comme troubles.\nLe calcul final du score tf-idf s’effectue en produisant une matrice du nombre d’occurrences brutes des verbes (en ligne) par documents dans chacun des 23 clusters (en colonne). On calcule la somme des occurrences suivant les deux grands sous ensembles définis en suivant la topologie sur l’axe de l’incarnation, produisant deux ensembles comparables en volume d’articles (Robots : 52% articles - 9 clusters > 1% - 1790 termes ; Algorithmes : 48% articles - 8 clusters > 1% - 1201 termes).\nLa matrice finale compte 66 verbes en ligne et deux colonnes correspondant aux deux sous-ensembles algorithmes et robots. Le calcul du score tf-idf est obtenu à partir du module TfidfTransformer `}<a parentName=\"p\" {...{\n        \"href\": \"https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html\"\n      }}>{`https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html`}</a>{` en conservant les options par défaut (intégrant la fonction smooth_idf=True, la constante “1” est ajoutée au numérateur et au dénominateur de l’idf comme si l’on voyait un document supplémentaire contenant chaque terme de la collection exactement une fois, ce qui évite les divisions par zéro : `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`idf(t) = log `}{`[ (1 + n) / (1 + df(t)) ]`}{` + 1.`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-sont-exprimés-les-verbes-de-troubles-\",\n    level: 2,\n    title: \"Comment sont exprimés les verbes de troubles ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-des-verbes-de-troubles-et-calcul-des-tf-idf-sur-le-corpus\",\n    level: 2,\n    title: \"Méthode : Extraction des verbes de troubles et calcul des TF-IDF sur le corpus\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.95,\"time\":357000,\"words\":1190}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-est-exprimée-la-temporalité-\"\n    }}>{`Comment est exprimée la temporalité ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité full`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"from\": \"#eb2941\",\n      \"to\": \"#9e41f0\"\n    }} colorScaleType={'continuous'} mdxType=\"IceCreamBlock\" />\n    <p>{`L’opposition entre les deux espaces sémantiques semble donc dessiner deux régimes d’énonciation distincts qui cohabitent au sein de l’espace médiatique. Le premier exprime les peurs face à des technologies autonomes focalisant la critique sur leur capacité à simuler, dépasser, remplacer ou exterminer à terme l’espèce humaine et représentant une menace qu’il serait nécessaire de contrôler. L’autre régime est davantage ancré dans le répertoire habituel de la critique sociale, mobilisant le répertoire du droit et des  injustices (censure, discrimination, surveillance) envers des populations spécifiques ou relève d’enjeux de régulation quant à la manière de gérer la diffusion de l’information (exposition, amplification).`}</p>\n    <p>{`Cette distinction entre l’énonciation de la peur et de la critique s’exprime également à travers les marqueurs temporels. L’espace intitulé “Robots” évoque majoritairement un ensemble de technologies encore en cours de développement au sein de laboratoires de recherche ou de start-ups qui les destinent à des applications dans des domaines très spécialisés, le monde du travail “job automation”, la défense pour les “Killer Robots”, les marchés financiers pour les “Robo-advisors”, la sexualité “Sex Robots”. On trouve aussi dans cette partie du graphe les clusters “Scientific research” et ”Future of AI” qui portent tous deux sur des recherches plus fondamentales en lien avec les déploiements les plus récents en intelligence artificielle et en robotisation. L’autre partie du graphe intitulée “Algorithmes” se concentre davantage sur des systèmes techniques largement déployés dans l’environnement technologique quotidien et adoptées par les utilisateurs, tels que les algorithmes du Web, l’automatisation des emails, les algorithmes de moteurs de recherche d’image ou encore la synthèse vocale. Dans cet espace sémantique d’autres technologies commencent à se diffuser auprès du grand public tels que les assistants vocaux, les “Deepfake” via des applications mobiles telles que Reface ou Faceswap. Enfin d’autres dispositifs ne sont pas encore démocratisés mais font pour la plupart l’objet d’expérimentation plus ou moins importantes par des institutions et des sociétés tels que la reconnaissance faciale, les algorithmes prédictifs dans le domaine de la police et de la justice par exemple qui connaissent actuellement des développement locaux, à l’échelle d’une institution ou d’un territoire, tout en faisant l’objet d’une attention particulière en terme de régulation et quant aux risques qu’ils font peser sur la société dans leur développement. `}</p>\n    <p>{`Mais plus que cette analyse de l’adoption plus ou moins avancée de ces différentes familles de technologies de calcul, il est intéressant de comprendre la manière dont au sein du discours critique est exprimée la temporalité. Des travaux portant sur les formes argumentatives en sociologie des controverses nous invitent à nous intéresser à la manière dont sont déployées les échelles temporelles et les régimes d’énonciation du futur qui leur sont associés (Chateauraynaud, 2013, 2014 ; Chateauraynaud, Debaz, 2019). Les épreuves de cohérence et de crédibilité dans les controverses nécessitent de définir des échelles temporelles qui vont venir modifier les jugements mais aussi les logiques d’action qui y vont y être associées. C’est en mobilisant des marqueurs temporels qui articulent des références au passé et une projection à plus ou moins long terme dans le temps que les acteurs sont en mesure de constituer des prises sur le futur qui vont venir moduler le type d’action à entreprendre et l’urgence à agir pour faire face à une situation. `}</p>\n    <p>{`A partir de notre corpus, nous avons extrait 500 entités nommées qui sont des marqueurs temporels présents au sein des articles et de la même manière que pour les verbes, nous avons calculé de manière comparative leur score tf-idf sur l’ensemble des articles constituant les deux sous-ensembles intitulés “Robots” et “Algorithmes”. La liste des entités extraite a été filtrer manuellement afin de ne conserver que les marqueurs temporels interprétables en dehors de leur contexte d’énonciation . L’analyse comparative de la distribution entre les deux sous-ensembles des scores tf-idf des marqueurs temporels laisse apparaître deux régimes distincts de référence au temps au sein des articles. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité robot`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"robot\"\n    }]} mdxType=\"IceCreamBlock\" />\n    <p>{`Du côté des articles associés au sous-ensemble “Robots” les marqueurs de temps relèvent d’une temporalité sur le long terme, qu’ils fassent référence au passé ou au futur. Ainsi la grande majorité des marqueurs se structurent autour d’expressions sur le futur qui mobilisent la figure the next associés à des temporalités qui se comptent souvent en dizaines d’années ou centaines d’années (the next 10 years, the next 30 years, the next 100 years, the next 1,000 years). D’autre part, les énoncés qui ont les plus importants scores dans cet espace ont comme particularité le plus souvent de ne pas définir précisément les échéances auxquelles ils renvoient (the next decades, coming decades, next century, this century). D’autres marqueurs également présents dans ce sous-ensemble ne font pas référence au futur mais au passé et ils se caractérisent par le fait de référer également à une projection lointaine dans le temps passé (30 years ago, 150 years ago, the last 20 years, the past 25 years, the past 15 years). Les entités dans ce sous-ensemble ont donc comme particularité de majoritairement exprimer un futur lointain et souvent peu précis. Par ailleurs, lorsque les entités font référence au passé, elles sont également projetées dans une temporalité lointaine.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité algo`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorScaleType={'continuous'} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"algo\"\n    }]} mdxType=\"IceCreamBlock\" />\n    <p>{`Au sein du sous-ensemble d’articles associés aux “Algorithmes” les marqueurs temporels extraits ayant les scores tf-idf les plus hauts se distinguent des premiers car ils renvoient majoritairement au présent (this day, these days, that year), à un passé plus proche souvent exprimé en jour, semaine ou mois (recent days, just last week, a few weeks ago, just a month, six months ago, the end of last year), mais également à un futur très proche en comparaison du premier sous-ensemble (the next day, the next few weeks, the coming weeks, the coming months, the following two years). `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité full`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'algorithms'} yVariable={'robots'} reverseY={true} sizeVariable={'frequency'} colorVariable={'algorithms'} labelVariable={'entity'} rotateMode={true} colorPalette={{\n      \"from\": \"#eb2941\",\n      \"to\": \"#9e41f0\"\n    }} colorScaleType={'continuous'} mdxType=\"IceCreamBlock\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-des-marqueurs-de-temps-et-calcul-des-tf-idf-sur-le-corpus\"\n    }}>{`Méthode : Extraction des marqueurs de temps et calcul des TF-IDF sur le corpus`}</h2>\n    <p>{`En suivant la même procédure que pour le calcul des scores tf-idf sur les verbes, un travail de comparaison d’entités nommées “Date” a été réalisé. Afin de lister ces marqueurs de temps, une première extraction de 500 entités nommées “Date” via le modèle Spacy effectuée sur Cortext a été effectuée, puis un nettoyage de cette liste afin de conserver les entités les plus interprétables permettant de qualifier une dimension temporelle sans ambiguïté. On était supprimées les entités produisant des ambiguïtés et moins interprétables comme les dates spécifique ou chiffrée, les durées (ex: several years, winter), les fréquences (ex : everyday, weekly), les périodes (the late 1980s) événement spécifique (ex : Christmas). Pour cette liste de 112 entités “Date” un score de tf-df a été calculé en suivant la même procédure que pour les entités, soit une séparation du corpus d’articles en deux grand ensemble équivalent suivant la topologie du graphe telle que décrite précédemment et un calcul du score tf-idf pour chaque entité à partir du module TfidfTransformer.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-est-exprimée-la-temporalité-\",\n    level: 2,\n    title: \"Comment est exprimée la temporalité ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-des-marqueurs-de-temps-et-calcul-des-tf-idf-sur-le-corpus\",\n    level: 2,\n    title: \"Méthode : Extraction des marqueurs de temps et calcul des TF-IDF sur le corpus\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.985,\"time\":59100,\"words\":197}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"références\"\n    }}>{`Références`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`J Scott Brennen. An industry-led debate: How uk media cover artificial intelligence. 2018.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Dominique Cardon, Maxime Crépel, Renuka George. Algorithms and Territorial Regulation. Gouverner la ville numérique, Collège de France; Presses Universitaires de France, 2019, 9782130815259`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Francis Chateauraynaud. Regard analytique sur l’activité visionnaire. Du risque à la menace. Penser la catastrophe, Paris, PUF, pages 309–389, 2013.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Francis Chateauraynaud and Josquin Debaz. Agir avant et après la fin du monde, dans l’infinité des milieux en interaction. Multitudes, (3):126–132, 2019.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Anna Jobin, Marcello Ienca, and Effy Vayena. The global landscape of ai ethics guidelines. Nature Machine Intelligence, 1(9):389–399, 2019. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Brent Mittelstadt. Principles alone cannot guarantee ethical ai. Nature Machine Intelligence, 1(11):501–507, 2019. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Raymond Perrault, Yoav Shoham, Erik Brynjolfsson, Jack Clark, John Etchemendy, Barbara Grosz, Terah Lyons, James Manyika, Saurabh Mishra, and Juan Carlos Niebles. The ai index 2019 annual report. AI Index Steering Committee, Human-Centered AI Institute, Stanford University, Stanford, CA, 2019. `}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Nick Seaver. Algorithms as culture: Some tactics for the ethnography of algorithmic systems. Big Data & Society, 4(2):2053951717738104, 2017.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Beth Singler. Existential hope and existential despair in AI apocalypticism and transhumanism, Zygon, 54 (1), 156–176, 2019.`}</p>\n      </li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"références\",\n    level: 2,\n    title: \"Références\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React, {useContext, useEffect, useState, useRef} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext, PresentationContext} from '../../contexts'\nimport {buildIceCreamScatterPlotCode} from '../../helpers/misc';\n\nimport VisBlock from '../VisBlock';\n\nconst IceCreamBlock = (inputProps) => {\n  const ref = useRef(null);\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const {\n    presentationMode\n  } = useContext(PresentationContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => {\n      let payload = {...inputProps};\n      if (presentationMode) {\n        payload = {\n          ...payload,\n          visType: 'icecreamGraph',\n          ref,\n          id: newId\n        }\n      }\n      onRegisterVisualization(newId, {...payload})\n    })\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildIceCreamScatterPlotCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return presentationMode ? (\n    <VisBlock ref={ref} {...props} id={id} />\n  )\n  : (\n    <div ref={ref} id={id} onClick={handleClick} className={cx(\"VisualizationBlock IcecreamBlock\", {'is-focused': isFocused})}>\n      {\n        props.title ?\n        <h2 className=\"block-title\">{props.title}</h2>\n        : null\n      }\n      <pre>\n        <code>\n          {buildIceCreamScatterPlotCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default IceCreamBlock;","import IceCreamBlock from './IceCreamBlock';\n\nexport default IceCreamBlock;","import React, {useContext, useEffect, useState, useRef} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\n\nimport VisBlock from '../VisBlock';\n\n\nimport { VisualizationControlContext, PresentationContext } from '../../contexts';\nimport {buildLinearGraphCode} from '../../helpers/misc';;\n\nconst LinearGraphBlock = (inputProps) => {\n  const ref = useRef(null);\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const {\n    presentationMode\n  } = useContext(PresentationContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => {\n      let payload = {...inputProps};\n      if (presentationMode) {\n        payload = {\n          ...payload,\n          visType: 'linearGraph',\n          ref,\n          id: newId\n        }\n      }\n      onRegisterVisualization(newId, {...payload})\n    })\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildLinearGraphCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return presentationMode ? (\n    <VisBlock ref={ref} {...props} id={id} />\n  )\n  : (\n    <div id={id} ref={ref} onClick={handleClick} className={cx(\"VisualizationBlock LinearGraphBlock\", {'is-focused': isFocused})}>\n      {\n        props.title ?\n        <h2 className=\"block-title\">{props.title}</h2>\n        : null\n      }\n      <pre>\n        <code>\n          {buildLinearGraphCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default LinearGraphBlock;","import LinearGraphBlock from './LinearGraphBlock';\n\nexport default LinearGraphBlock;","var map = {\n\t\"./en/00_home.mdx\": [\n\t\t155\n\t],\n\t\"./en/01_couverture_media.mdx\": [\n\t\t156\n\t],\n\t\"./en/02_detectcritic.mdx\": [\n\t\t157\n\t],\n\t\"./en/03_graphclusters.mdx\": [\n\t\t158\n\t],\n\t\"./en/04_timelineclusters.mdx\": [\n\t\t159\n\t],\n\t\"./en/05_toporobotalgo.mdx\": [\n\t\t160\n\t],\n\t\"./en/06_explore_entities.mdx\": [\n\t\t161\n\t],\n\t\"./en/07_IssueVERB.mdx\": [\n\t\t162\n\t],\n\t\"./en/08_NERdate.mdx\": [\n\t\t163\n\t],\n\t\"./en/footer.mdx\": [\n\t\t142\n\t],\n\t\"./en/headline.mdx\": [\n\t\t144\n\t],\n\t\"./en/metadata\": [\n\t\t236,\n\t\t0\n\t],\n\t\"./en/metadata.js\": [\n\t\t236,\n\t\t0\n\t],\n\t\"./en/references.mdx\": [\n\t\t164\n\t],\n\t\"./fr/00_home.mdx\": [\n\t\t145\n\t],\n\t\"./fr/01_couverture_media.mdx\": [\n\t\t146\n\t],\n\t\"./fr/02_detectcritic.mdx\": [\n\t\t147\n\t],\n\t\"./fr/03_graphclusters.mdx\": [\n\t\t148\n\t],\n\t\"./fr/04_timelineclusters.mdx\": [\n\t\t149\n\t],\n\t\"./fr/05_toporobotalgo.mdx\": [\n\t\t150\n\t],\n\t\"./fr/06_explore_entities.mdx\": [\n\t\t151\n\t],\n\t\"./fr/07_IssueVERB.mdx\": [\n\t\t152\n\t],\n\t\"./fr/08_NERdate.mdx\": [\n\t\t153\n\t],\n\t\"./fr/chapo.mdx\": [\n\t\t143\n\t],\n\t\"./fr/footer.mdx\": [\n\t\t141\n\t],\n\t\"./fr/metadata\": [\n\t\t237,\n\t\t1\n\t],\n\t\"./fr/metadata.js\": [\n\t\t237,\n\t\t1\n\t],\n\t\"./fr/references.mdx\": [\n\t\t154\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 449;\nmodule.exports = webpackAsyncContext;","import Loader from './Loader';\n\nexport default Loader;","const Loader = ({ percentsLoaded = 0 }) => {\n  return (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{ width: percentsLoaded + '%' }} />\n      </div>\n    </div>\n  )\n}\n\nexport default Loader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\nimport Loader from '../Loader';\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    if (url) {\n      axios.get(url, {\n        onDownloadProgress: progressEvent => {\n          const status = progressEvent.loaded / progressEvent.total;\n          setLoadingFraction(status);\n        }\n      })\n      .then(({data: inputData}) => {\n        setTimeout(() => {\n          let data = inputData;\n          if (url.split('.').pop() === 'csv') {\n            data = csvParse(inputData);\n          } else if (url.split('.').pop() === 'tsv') {\n            data = tsvParse(inputData);\n          }\n          setData(data);\n        })\n      })\n    }\n  }, [url]);\n\n  if (!url) {\n    return children();\n  }\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import Nav from './Nav'\n\nexport default Nav;","import cx from 'classnames';\n\n\nconst Nav = ({\n  lang, \n  routes,\n  onRouteNav,\n  isDeployed,\n  isHidden,\n  activeSectionIndex\n}) => {\n  return (\n    <nav className={cx('Nav', {'is-deployed': isDeployed, 'is-hidden': isHidden})}>\n      <ul>\n        {\n          routes.map((route, routeIndex) => {\n            if (routeIndex === 0) {\n              return null;\n            }\n            const handleClick = () => {\n              onRouteNav(routeIndex);\n            }\n            return (\n              <li className={cx({'is-active': activeSectionIndex === routeIndex})} onClick={handleClick} key={routeIndex}>\n                <span className=\"item-number\">{routeIndex}</span>\n                <span className=\"item-label\">\n                  <span>{route.title[lang]}</span>\n                </span>\n              </li>\n            )\n          })\n        }\n      </ul>\n    </nav>\n  )\n}\n\nexport default Nav;","const metadata = {\n  \"generalAuthor\": \"médialab Sciences Po | algoglitch\",\n  \"title\": \"Critique de l’IA dans la presse\",\n  \"description\": \"Une publication numérique sur les critiques de l'IA dans la presse anglophone\",\n  \"publicationDate\": \"2021-06-30\",\n  \"creators\": [\n    {\n      \"role\": \"Auteurs\",\n      \"people\": [\"Maxime Crépel\", \"Dominique Cardon\"]\n    },\n    {\n      \"role\": \"Traitement de données\",\n      \"people\": [\"Yannis Bouachera\", \"Salomé Do\", \"Jean-Philippe Cointet\"]\n    },\n    {\n      \"role\": \"Design d'information\",\n      \"people\": [\"Robin de Mourat\", \"Donato Ricci\"]\n    }\n  ]\n}\n\nexport default metadata;","const metadata = {\n  \"generalAuthor\": \"médialab Sciences Po | algoglitch\",\n  \"title\": \"AI critiques in the press\",\n  \"description\": \"Une publication numérique sur les critiques de l'IA dans la presse anglophone\",\n  \"publicationDate\": \"2021-06-30\",\n  \"creators\": [\n    {\n      \"role\": \"Authors\",\n      \"people\": [\"Maxime Crépel\", \"Dominique Cardon\"]\n    },\n    {\n      \"role\": \"Data processing\",\n      \"people\": [\"Yannis Bouachera\", \"Salomé Do\", \"Jean-Philippe Cointet\"]\n    },\n    {\n      \"role\": \"Publication and information design\",\n      \"people\": [\"Robin de Mourat\", \"Donato Ricci\"]\n    }\n  ]\n}\n\nexport default metadata;","import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick, ...props}) {\n  return (\n    <button className=\"control-button\" onClick={onClick} {...props}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND (intersection des filtres)' : 'OR (union des filtres)'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions\n                  .sort((a, b) => {\n                    if (a > b) {\n                      return 1;\n                    }\n                    return -1;\n                  })\n                  .map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type, localOptions}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    if (localOptions) {\n                      return localOptions;\n                    }\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","\nimport React, {useState, useEffect} from 'react';\nimport { SketchPicker } from 'react-color';\nimport debounce from 'lodash/debounce';\n\nconst ColorItemHandler = ({\n  modality,\n  onChange,\n  color\n}) => {\n  const [isEdited, setEdited] = useState(false);\n  const [editedColor, setEditedColor] = useState(color);\n  useEffect(() => {\n    setEditedColor(color)\n  }, [color]);\n  const debouncedOnChange = debounce(onChange, 300);\n  const handleChange = newColor => {\n    setEditedColor(newColor.hex);\n    debouncedOnChange(newColor.hex);\n  }\n  const handleClose = () => {\n    onChange(editedColor);\n    setEdited(false);\n  }\n  return (\n    <li>\n      <span onClick={() => setEdited(!isEdited)} className=\"legend-color\" style={{background: color}} />\n      <span className=\"legend-modality\">{modality}</span>\n      {\n        isEdited ?\n        <>\n          <div onClick={handleClose} className=\"color-picker-container\">\n            <div onClick={e => {e.stopPropagation()}}>\n              <h5>Choisir la couleur de la modalité \"{modality}\"</h5>\n              <SketchPicker onChange={handleChange} color={editedColor} />\n            </div>\n          </div>\n        </>\n        : null\n      }\n    </li>\n  )\n}\n\nexport default function ColorLegend ({\n  colorPalette,\n  onChange,\n}) {\n  if (!colorPalette) {\n    return null;\n  }\n  return (\n    <div className=\"ColorLegend\" >\n      <h6>Légende</h6>\n      <ul>\n        {\n          Object.entries(colorPalette)\n          .map(([modality, color]) => {\n            const handleChange = newColor => {\n              onChange({\n                ...colorPalette,\n                [modality] : newColor\n              })\n            }\n            return (\n              <ColorItemHandler onChange={handleChange} key={modality} {...{modality, color}} />\n            )\n          })\n        }\n      </ul>\n    </div>\n  );\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","import React, {useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport Slider from 'rc-slider';\nimport debounce from 'lodash/debounce';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nconst SLIDER_MARKS = {\n  '0.25': 'défaut'\n};\n\nfunction DebouncedSlider({defaultValue, onChange}) {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue])\n\n  const onSliderChange = newValue => {\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return (\n    <Slider\n      min={0}\n      max={1}\n      step={0.01}\n      defaultValue={defaultValue}\n      value={value}\n      onChange={onSliderChange}\n      marks={SLIDER_MARKS}\n    />\n  );\n}\n\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n  labelDensity,\n  displayAllLabels,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  nodeLabelVariable,\n\n  filtersOptions,\n  filters = [],\n  colorPalette,\n\n  onFiltersChange,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n  onDisplayAllLabelsChange,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n          <form onSubmit={e => e.preventDefault()}>\n            <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n          </form>\n        </li>\n        \n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Label des noeuds',\n                    value: nodeLabelVariable,\n                    onChange: onNodeLabelVariableChange,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Afficher tous les labels',\n                    onChange: () => onDisplayAllLabelsChange(!displayAllLabels),\n                    localOptions: [[\n                      false,\n                      {title: 'non'}\n                    ], [\n                      true,\n                      {title: 'oui'}\n                    ]],\n                    value: displayAllLabels,\n                    type: 'boolean'\n                  },\n                ],\n              }\n            }\n          />\n        </li>\n        \n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n        <li className=\"vis-controls-item slider-wrapper\">\n          <form onSubmit={e => e.preventDefault()}>\n            <h5>Densité des labels</h5>\n            <div className=\"slider-container\">\n                <DebouncedSlider\n                  defaultValue={labelDensity}\n                  onChange={debounce(onLabelDensityChange, 300)}\n                />\n              </div>\n          </form>\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n          }\n      </ul>\n    </>\n  );\n}","export default __webpack_public_path__ + \"static/media/magnifier-with-an-eye.726b433c.svg\";","export default __webpack_public_path__ + \"static/media/add-searching.77b7787c.svg\";","export default __webpack_public_path__ + \"static/media/delete-searching.661600dd.svg\";","export default __webpack_public_path__ + \"static/media/validate-search.08e22081.svg\";","export default __webpack_public_path__ + \"static/media/magnifier-and-delete-mark.dd5080f6.svg\";","import React from 'react';\nimport cx from 'classnames';\n\nimport ControlButton from '../ControlButton';\n\nimport eye from './icons/magnifier-with-an-eye.svg';\nimport plus from './icons/add-searching.svg';\nimport minus from './icons/delete-searching.svg';\nimport activate from './icons/validate-search.svg';\nimport deactivate from './icons/magnifier-and-delete-mark.svg';\n\nexport default function GraphNav({\n  rescale,\n  zoomIn,\n  zoomOut,\n  isLocked,\n  onToggleLock\n}) {\n  return (\n    <ul className={cx(\"GraphNav\", {'is-expanded': !isLocked})}>\n      \n      <li className=\"vis-controls-item\">\n\n        <ControlButton title={'dézoomer dans la vue'} disabled={isLocked} onClick={zoomOut}>\n          <img alt=\"btn-icon\" src={minus} />\n        </ControlButton>\n      </li>\n      <li className=\"vis-controls-item\">\n        <ControlButton title={'zoomer dans la vue'} disabled={isLocked} onClick={zoomIn}>\n          <img alt=\"btn-icon\" src={plus} />\n        </ControlButton>\n      </li>\n      <li className=\"vis-controls-item\">\n        <ControlButton title={'recentrer la vue'} disabled={isLocked} onClick={rescale}>\n          <img alt=\"btn-icon\" src={eye} />\n        </ControlButton>\n      </li>\n      <li className=\"vis-controls-item\">\n        <ControlButton title={isLocked ? 'permettre la navigation dans le graphe' : 'bloquer la navigation dans le graphe'} onClick={onToggleLock}>\n          {isLocked ? <img alt=\"btn-icon\" src={activate} /> : <img alt=\"btn-icon\" src={deactivate} />}\n        </ControlButton>\n      </li>\n      \n    </ul>\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd,\n  colorPalette,\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else if (colorPalette) {\n      renderedNode.color = colorPalette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // Label\n    if (!nodeLabel) {\n      renderedNode.label = attr.label || key;\n    } else {\n      renderedNode.label = nodeLabel === 'default' ? attr.label || key : attr[nodeLabel] || '';\n    }\n    // renderedNode.label = renderedNode.label === '' ? 'coucou': renderedNode.label;\n\n    // // hidden\n    if (filters.length && evalIfNodeMatches(attr, filters, filtersModeAnd) === false) {\n      renderedNode.hidden = true;\n      renderedNode.label = '';\n    } else {\n      renderedNode.hidden = false;\n    }\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  // nodeLabel,\n  // nodeSizeFactor = 1,\n  // extents,\n  // filters = [],\n  // filtersModeAnd,\n  edgesMap,\n  colorPalette,\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const biggerNode = sourceNodeSize > targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (biggerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = biggerNode.color || DEFAULT_NODE_COLOR;\n      } else if (colorPalette) {\n        renderedEdge.color = colorPalette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }  else {\n        renderedEdge.color =\n          nodeColor.palette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1 || !count) return SINGLE_COLOR_PALETTE;\n  else if (count === 2) {\n    return ['#D77186', '#61A2DA']\n  }\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import DebouncedInput from './DebouncedInput';\n\nexport default DebouncedInput;","\n\nimport debounce from 'lodash/debounce';\nimport {useState, useEffect, useMemo} from 'react';\nimport Textarea from 'react-textarea-autosize';\n\nexport default function DebouncedInput({\n  value: propsValue,\n  onChange: propsOnChange,\n  type = 'input',\n  ...rest\n}) {\n  const [value, setValue] = useState(propsValue);\n\n  useEffect(() => {\n    setValue(propsValue);\n  }, [propsValue]);\n\n  const propagateChange = useMemo(() => debounce(propsOnChange, 300), [propsOnChange]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    propagateChange(e.target.value);\n  }\n  if (type === 'input') {\n    return (\n      <input\n        value={value}\n        onChange={handleChange}\n        {...rest}\n      />\n    );\n  }\n  return (\n    <Textarea\n      value={value}\n      onChange={handleChange}\n      {...rest}\n    />\n  );\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\nimport ContainerDimensions from 'react-container-dimensions';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport GraphNav from './GraphNav';\nimport {createNodeReducer, createEdgeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\nimport Input from '../DebouncedInput';\n\nimport './GraphContainer.css';\nimport { evalIfNodeMatches } from '../../helpers/misc';\n\n\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nexport function GraphContainer({\n  graph,\n  width = 500,\n  height = 500,\n  // nodeColor,\n  // nodeSize,\n  labelDensity,\n  displayAllLabels,\n  lockCamera,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n  presentationMode,\n  showNav = true,\n  onToggleCameraLock,\n\n  cameraPosition,\n\n  updateTimestamp,\n  title,\n  legend,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  colorPalette,\n  nodeLabelVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n  onTitleChange,\n  onLegendChange,\n  onDisplayAllLabelsChange,\n}) {\n  const CELL_HEIGHT_RANGE = [height / 5, 1];\n  const CELL_WIDTH_RANGE = [width / 5, 1];\n\n  // const CELL_HEIGHT_RANGE = [200, 10];\n  // const CELL_WIDTH_RANGE = [300, 30];\n\n  const cellHeightScale = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\n  const cellWidthScale = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else if(nodeColorVariable && nodeColorVariable !== 'default' && colorPalette) {\n      return {\n        palette: colorPalette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n      m.set(edge, {sourceNode: sourceAttributes, targetNode: targetAttributes})\n    });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabelVariable = usePrevious(nodeLabelVariable);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n  const previousColorPalette = usePrevious(colorPalette);\n  const previousFiltersModeAnd = usePrevious(filtersModeAnd);\n  const previousDisplayAllLabels = usePrevious(displayAllLabels);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel: nodeLabelVariable,\n    extents,\n    filters,\n    filtersModeAnd,\n    colorPalette,\n  });\n  \n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    colorPalette,\n    // nodeSize,\n    // nodeLabel,\n    // extents,\n    filters,\n    filtersModeAnd,\n    edgesMap,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n  useEffect(() => {\n    if (renderer) {\n      const camera = renderer.getCamera();\n      if (cameraPosition) {\n        camera.enable();\n        camera.animate({...camera.getState(), ...cameraPosition});     \n        // camera.setState({...camera.getState(), ...cameraPosition});     \n        if (lockCamera) {\n          camera.disable();\n        }\n        // renderer.refresh();\n      }\n      if (camera.enabled && lockCamera) {\n        camera.disable();\n        // renderer.refresh();\n      }\n      if (!camera.enabled && !lockCamera) {\n        camera.enable();\n        // renderer.refresh();\n      }\n    }\n    \n  }, [\n    updateTimestamp, \n    lockCamera, \n    cameraPosition,\n    nodeColorVariable,\n    nodeSizeVariable,\n    filters,\n    filtersModeAnd,\n    colorPalette,\n  ])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      previousNodeLabelVariable !== nodeLabelVariable ||\n      previousColorPalette !== colorPalette ||\n      // previousSearchString !== searchString ||\n      JSON.stringify(previousFilters) !== JSON.stringify(filters) ||\n      previousFiltersModeAnd !== filtersModeAnd\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      let actualLabelDensity = labelDensity > 1 ? 1 : labelDensity;\n      const cellWidth = cellWidthScale(actualLabelDensity);\n      const cellHeight = cellHeightScale(actualLabelDensity);\n      renderer.settings.labelGrid.cell = {\n        width: cellWidth,\n        height: cellHeight\n      };\n\n      // TODO from nansi: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    // workaround for clusters titles display\n    // @todo replace this with a cleaner solution at some point\n    if ((\n      previousDisplayAllLabels !== displayAllLabels || !previousDisplayAllLabels || renderer.displayedLabels.size === 0\n      || previousNodeLabelVariable !== nodeLabelVariable || JSON.stringify(previousFilters) !== JSON.stringify(filters)\n      ) && displayAllLabels) {\n      graph.forEachNode((id, attributes) => {\n        const {label} = attributes;\n        \n        const displayedLabel = nodeLabelVariable && nodeLabelVariable !== 'default' ? attributes[nodeLabelVariable] : label;\n        if (evalIfNodeMatches(attributes, filters, filtersModeAnd) && displayedLabel && displayedLabel.trim().length > 0) {\n          renderer.highlightNode(id)\n        } else {\n          renderer.unhighlightNode(id);\n        }\n      })\n      needToRefresh = true;\n    } else if (previousDisplayAllLabels !== displayAllLabels && !displayAllLabels) {\n      renderer.highlightedNodes = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n      needToRefresh = true;\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n        setTimeout(() => {\n          const newRenderer = new WebGLRenderer(graph, node, {nodeReducer, edgeReducer});\n          let actualLabelDensity = labelDensity > 1 ? 1 : labelDensity;\n          const cellWidth = cellWidthScale(actualLabelDensity);\n          const cellHeight = cellHeightScale(actualLabelDensity);\n          newRenderer.settings.labelGrid.cell = {\n            width: cellWidth,\n            height: cellHeight\n          };\n          newRenderer.settings.labelSize = 12;\n          newRenderer.settings.labelFont = 'Fira Sans';\n          newRenderer.displayedLabels = new Set();\n          newRenderer.refresh();\n          setRenderer(newRenderer);\n          const camera = newRenderer.getCamera();\n          \n          if (cameraPosition) {\n            camera.setState({\n              ...camera.getState(),\n              ...cameraPosition\n            })\n          } else {\n            if (typeof onCameraUpdate === 'function') {\n              onCameraUpdate(camera.getState())\n            }\n          }\n          if (lockCamera || !presentationMode) {\n            camera.disable();\n          }\n          camera.on('updated', state => {\n            onCameraUpdate(state);\n          })\n        })\n       \n          \n        }\n\n        container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n  const handleToggleCameraLock = () => {\n    if (typeof onToggleCameraLock === 'function') {\n      onToggleCameraLock();\n    }\n  }\n  return (\n    <>\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {\n        renderer && presentationMode && showNav &&\n        <GraphNav\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n          isLocked={lockCamera}\n          onToggleLock={handleToggleCameraLock}\n          />\n      }\n      {renderer && !presentationMode && (\n        <>\n          <GraphControls\n            rescale={rescale.bind(null, renderer)}\n            zoomIn={zoomIn.bind(null, renderer)}\n            zoomOut={zoomOut.bind(null, renderer)}\n            {\n              ...{\n                searchString,\n                onSearchStringChange,\n                filtersModeAnd,\n                onToggleFiltersModeAnd,\n                filtersOptions,\n                filters,\n                onFiltersChange,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                labelDensity,\n                displayAllLabels,\n                onNodeSizeVariableChange,\n                onNodeColorVariableChange,\n                onNodeLabelVariableChange,\n                onColorPaletteChange,\n                onLabelDensityChange,\n                onDisplayAllLabelsChange,\n                colorPalette: colorPalette,\n              }\n            }\n          />\n          <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                type=\"textarea\"\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n              />\n            </div>\n          </form>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default function GraphContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <GraphContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, {useMemo} from 'react';\nimport {NavLink} from 'react-router-dom';\nimport Helmet from 'react-helmet';\nimport Graph from 'graphology';\nimport gexf from 'graphology-gexf';\nimport {extent} from 'd3-array';\nimport cx from 'classnames';\n\nimport Loader from '../Loader';\nimport Nav from '../Nav';\n\nimport frMetadata from '../../contents/fr/metadata';\nimport enMetadata from '../../contents/en/metadata';\nimport {homepage} from '../../../package.json';\n\nimport {GraphContainer} from '../GraphAnnotation/GraphContainer'\n\nconst GraphWrapper = ({data, ...props}) => {\n  // const [cameraPosition, setCameraPosition] = useState({x: props.x, y: props.y, ratio: props.ratio})\n  // useEffect(() => {\n  //   setCameraPosition({\n  //     x: props.x, y: props.y, ratio: props.ratio\n  //   })\n  // }, [props.x, props.y, props.ratio])\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n\n  // const onCameraUpdate = (pos) => {\n  //   setCameraPosition(pos);\n  // }\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n  return (\n    <div style={{width: props.width, height: props.height}}>\n    <GraphContainer\n      lockCamera\n      showNav={false}\n      {...{\n        ...props,\n        graph,\n        extents: {\n          nodeSize: {\n            min: sizeExtent[0],\n            max: sizeExtent[1]\n          }\n        },\n        // onCameraUpdate,\n        // cameraPosition,\n      }\n      }\n    />\n    </div>\n  );\n}\n\nconst LanguageToggler = ({lang}) => {\n  return (\n    <ul className=\"LanguageToggler\">\n      <li>\n        <NavLink to=\"/publication/fr\">\n          fr\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/publication/en\">\n          en\n        </NavLink>\n      </li>\n    </ul>\n  )\n}\n\nconst Header = ({\n  lang, \n  routes,\n  onRouteNav,\n  isVisible,\n  activeSectionIndex,\n  graphData,\n  loadingFraction,\n  onScrollToTop,\n  onScrollToFirstSection\n}) => {\n  const meta = lang === 'fr' ? frMetadata : enMetadata;\n  const {\n    title,\n    description,\n    creators,\n    generalAuthor,\n    publicationDate\n  } = meta;\n  const preventScroll = e => {\n    e.preventScroll();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  const Chapo = routes[0].contentsCompiled[lang];\n  return (\n    <header className={cx(\"Header\", {'is-visible': isVisible})}>\n      <Helmet>\n        <html lang={lang} />\n        <meta charSet={ 'UTF-8' } />\n        <title>{title}</title>\n        {/*<!-- META DUBLIN CORE -->*/}\n        <meta\n          name={ 'DC.Title' }\n          lang={ 'fr' }\n          content={ title }\n        />\n        <meta\n          name={ 'DC.Date.created' }\n          schema={ 'W3CDTF' }\n          content={ publicationDate }\n        />\n\n        {\n          creators.reduce((total, group) => {\n            return group.people.reduce((total2, people) => {\n              return [\n                ...total2,\n                <meta\n                  key={ people }\n                  name={ 'DC.creator' }\n                  content={ `people` }\n                />\n              ]\n            }, total)\n          }, [])\n          \n        }\n        <meta\n          name={ 'DC.issued' }\n          lang={ 'fr' }\n          content={ publicationDate }\n        />\n        <meta\n          name={ 'DC.Date.created' }\n          schema={ 'W3CDTF' }\n          content={ publicationDate }\n        />\n        {\n            // tags.map((thatTag, index) => <meta key={index} name=\"DC.subject\" xml:lang=\"en-GB\" content={thatTag} />)\n          }\n        {/*<!-- END META DUBLIN CORE -->*/}\n\n        {/*<!-- REGULAR META -->*/}\n        <meta\n          name={ 'author' }\n          content={ \n            creators.reduce((total, group) => {\n              return group.people.reduce((total2, people) => {\n                return [\n                  ...total2,\n                  people\n                ]\n              }, total)\n            }, []).join(', ')\n           }\n        />\n        <meta\n          name={ 'description' }\n          content={ description }\n        />\n        <meta\n          name={ 'viewport' }\n          content={ 'user-scalable=no,width=device-width' }\n        />\n        {/*<!-- END REGULAR META -->*/}\n\n        {/*<!-- META TWITTER -->*/}\n        <meta\n          name={ 'twitter:card' }\n          value={ 'summary' }\n        />\n        <meta\n          name={ 'twitter:site' }\n          content={ homepage }\n        />\n        <meta\n          name={ 'twitter:title' }\n          content={ title }\n        />\n        <meta\n          name={ 'twitter:description' }\n          content={ description }\n        />\n        {/*<!-- todo : Twitter Summary card images must be at least 200x200px -->*/}\n        {/*<meta name=\"twitter:image\" content=\"xxx\">*/}\n        {/*<!-- end meta twitter-->*/}\n\n        {/*<!-- META GOOGLE + -->*/}\n        <meta\n          itemProp={ 'name' }\n          content={ title }\n        />\n        <meta\n          itemProp={ 'description' }\n          content={ description }\n        />\n        {/*<meta itemProp=\"image\" content=\"https://peritex.surge.sh/bulgur-rs.png\">*/}\n        {/*<!-- END META GOOGLE + -->*/}\n\n        {/*<!-- META OPEN GRAPH / FACEBOOK -->*/}\n        <meta\n          property={ 'og:title' }\n          content={ title }\n        />\n        <meta\n          property={ 'og:type' }\n          content={ 'website' }\n        />\n        <meta\n          property={ 'og:url' }\n          content={ homepage }\n        />\n        <meta\n          property={ 'og:description' }\n          content={ description }\n        />\n      </Helmet>\n      <LanguageToggler lang={lang} />\n      <div onClick={onScrollToTop} className=\"running-title\">\n        <h1>{title}</h1>\n      </div>\n      <div className=\"header-main\">\n           <h2 className=\"general-author\">\n             {generalAuthor}\n           </h2>\n           <div className=\"main-title-container\">\n            <h1 className=\"main-title\">\n              {title}\n            </h1>\n           </div>\n           <ul className=\"creators\">\n             {\n               creators.map(({role, people}) => (\n                 <li key={role}>\n                   <div className=\"role\">{role}</div>\n                   <ul className=\"people-container\">\n                     {\n                       people.map(person => (\n                         <li className=\"person\" key={person}>{person}</li>\n                       ))\n                     }\n                   </ul>\n                 </li>\n               ))\n             }\n           </ul>\n           <div className=\"chapo\">\n             <Chapo />\n           </div>\n      </div>\n      <div className=\"header-secondary\">\n        {/* Summary */}\n        <Nav \n          lang={lang} \n          onRouteNav={onRouteNav} \n          routes={routes} \n          isDeployed={true}\n          activeSectionIndex={activeSectionIndex}\n        />\n        <Nav \n          lang={lang} \n          onRouteNav={onRouteNav} \n          routes={routes} \n          isDeployed={false}\n          isHidden={isVisible}\n          activeSectionIndex={activeSectionIndex}\n        />\n        {/* réseau */}\n        <div\n          onScroll={preventScroll}\n          className={cx(\"GraphWrapperContainer\", {'has-visualization': graphData !== undefined})}\n        >\n          {\n            graphData ?\n            <GraphWrapper\n              data={graphData}\n              presentationMode={true}\n              width={500}\n              height={500}\n              x={0.5} \n              y={0.5} \n              ratio={0.8} \n              displayAllLabels={true}\n              nodeColorVariable={'cluster_rename'} \n              nodeLabelVariable={'cluster_label'} \n              labelDensity={1} \n              colorPalette={{\"Future_of_AI\":\"#f17325\",\"Profiling_Algorthms\":\"#2cab57\",\"Job_Automation\":\"#f5253e\",\"Market_&_Prices\":\"#6bc06c\",\"Predictive_Algorithms\":\"#adcd24\",\"Web_Algorithms\":\"#d8dd0d\",\"Facial_Recognition\":\"#54a5e8\",\"Voice_Assistant\":\"#106f88\",\"DeepDream_Nightmares\":\"#e1194a\",\"Health_Algorithms\":\"#fa8566\",\"Autonomous_Cars\":\"#e9c33f\",\"Game_&_Education\":\"#a1943c\",\"Chatbot\":\"#32968a\",\"Consumer_&_Copyright\":\"#f49c57\",\"Killer_Robots\":\"#4650ee\",\"Robo-Advisers\":\"#19d2d4\",\"Sex_Robots\":\"#e94d6c\",\"Deepfake\":\"#4f990f\",\"Image_Search\":\"#2ea2b3\",\"Scientific_Research\":\"#cff157\",\"Music\":\"#18a1bc\",\"Email\":\"#ffb7e0\",\"Deep_Voice\":\"#799c89\"}} \n            />\n            :\n            <Loader percentsLoaded={loadingFraction * 100} />\n          }\n        \n        </div>\n        \n      </div>\n      <button onClick={onScrollToFirstSection} className=\"starter-button\">\n      ⌄\n      </button>\n    </header>\n  )\n}\n\nexport default Header;","import Header from './Header';\n\nexport default Header;","import Footer from './Footer';\n\nexport default Footer;","import React, {useContext/*, useMemo, Suspense*/} from 'react';\nimport { LanguageContext } from '../../contexts';\n\nimport Fr from '!babel-loader!mdx-loader!../../contents/fr/footer.mdx';\nimport En from '!babel-loader!mdx-loader!../../contents/en/footer.mdx';\n\nconst Footer = () => {\n  const {lang} = useContext(LanguageContext);\n  // const Content = useMemo(() => {\n  //   return  React.lazy(() => import(`!babel-loader!mdx-loader!../../contents/${lang}/footer.mdx`));\n  // }, [lang])\n  return (\n    <footer className=\"Footer\">\n      {\n        lang === 'fr' ? <Fr /> : <En />\n      }\n      {/* <Suspense fallback={() => <div>{lang === 'fr' ? 'Chargement' : 'Loading'}</div>}>\n        <Content />\n      </Suspense> */}\n    </footer>\n  )\n}\n\nexport default Footer;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\nimport FiltersEditor from '../FiltersEditor';\n\n\n\nexport default function LinearGraphControls({\n  xVariable,\n  xLabelVariable,\n  // reverseX,\n  graphType,\n  yVariable,\n  // reverseY,\n\n  colorVariable,\n  // searchString,\n  useRelativeScale,\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n  normalizeY,\n\n  // onSearchStringChange,\n  onToggleUseRelativeScale,\n  onGraphTypeChange,\n  \n  onXVariableChange,\n  onXLabelVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n\n  onColorPaletteChange,\n  onNormalizeYChange,\n\n  // onToggleReverseX,\n  // onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  // const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls\", {'is-minified': isMinified})}>\n        \n        {/* <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li> */}\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'Type de graphe',\n                    onChange: onGraphTypeChange,\n                    localOptions: [[\n                      'linegraph',\n                      {title: 'lignes'}\n                    ], [\n                      'histogram',\n                      {title: 'histogramme'}\n                    ]],\n                    value: graphType,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Variable des X',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Label des X',\n                    onChange: onXLabelVariableChange,\n                    value: xLabelVariable,\n                    type: 'string'\n                  },\n                  // {\n                  //   title: 'Inverser les x',\n                  //   onChange: onToggleReverseX,\n                  //   value: reverseX,\n                  //   type: 'boolean'\n                  // },\n                  {\n                    title: 'Label des Y',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  // {\n                  //   title: 'Inverser les y',\n                  //   onChange: onToggleReverseY,\n                  //   value: reverseY,\n                  //   type: 'boolean'\n                  // },\n                  {\n                    title: 'Utiliser une échelle relative pour les Y quand filtré',\n                    onChange: onToggleUseRelativeScale,\n                    value: useRelativeScale,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Normaliser les Y',\n                    onChange: onNormalizeYChange,\n                    value: normalizeY,\n                    type: 'boolean'\n                  },\n                  // {\n                  //   title: 'Labels des points',\n                  //   onChange: onLabelVariableChange,\n                  //   value: labelVariable,\n                  //   type: 'string'\n                  // },\n                ],\n              }\n            }\n          />\n        </li>\n        <li className=\"vis-controls-item\">\n          <FiltersEditor\n            {\n              ...{\n                onToggleFiltersModeAnd,\n                filtersModeAnd,\n                filtersOptions,\n                onFiltersChange,\n                filters\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React, {useMemo} from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {extent, group} from 'd3-array';\nimport Input from '../DebouncedInput';\n\n\nimport LinearGraphControls from './LinearGraphControls';\nimport {generatePalette} from '../../helpers/palettes';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\nimport './LinearGraphContainer.css';\nimport { max, uniqBy } from 'lodash';\n\nexport function LinearGraphContainer({\n\n  width, \n  height,\n  data,\n\n  xVariable,\n  xLabelVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  colorPalette: inputColorPalette,\n  normalizeY,\n\n  title,\n  legend,\n\n  searchString = '',\n\n  graphType = 'linegraph',\n  useRelativeScale,\n\n  onSearchStringChange,\n  filtersOptions = {},\n\n  filtersModeAnd,\n  filters = [],\n  presentationMode,\n\n  \n  onToggleFiltersModeAnd,\n  onFiltersChange,\n  onXVariableChange,\n  onXLabelVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  onColorPaletteChange,\n  onGraphTypeChange,\n  onToggleUseRelativeScale,\n  onNormalizeYChange,\n\n  onTitleChange,\n  onLegendChange,\n}) {\n \n  // const smallestDimension = min([width, height])\n  const WIDTH = width;\n  const HEIGHT = height;\n\n  // set scales dimensions and scale\n  const MARGIN = WIDTH / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN / 2];\n  let yRange = [HEIGHT - MARGIN, MARGIN];\n\n\n  const xLabelMap = useMemo(() => {\n    return data.reduce((dict, datum) => {\n      const labelVariable = xLabelVariable === 'default' ? xVariable : xLabelVariable;\n      return {\n        ...dict,\n        [datum[xVariable]]: datum[labelVariable]\n      }\n    }, {})\n\n  }, [data, xVariable, xLabelVariable])\n  \n  // build visualization groups\n  let dataGroups = [[undefined, data]]\n  if (colorVariable) {\n    dataGroups = Array.from(group(data, d => d[colorVariable]));\n  } \n\n  // reduce items\n  dataGroups = dataGroups.map(([_id, values]) => {\n    const xGroups = Array.from(group(values, d => d[xVariable])).map(([x, ys]) => {\n      return {\n        x: +x, \n        // aggregate ys\n        y: ys.reduce((sum, y) => sum + (+y[yVariable]), 0),\n        filteredY: ys.filter(d => filters.length ? evalIfNodeMatches(d, filters, filtersModeAnd) : true).reduce((sum, y) => sum + (+y[yVariable]), 0),\n        xValue: x\n      }\n    })\n    return [_id, xGroups]\n  });\n \n  // refactorize by x for stacked barchart\n  if (graphType === 'histogram') {\n    const xMap = dataGroups.reduce((res, [color, values]) => {\n      return values.reduce((res2, value) => {\n        const x = value.x;\n        const transformedValue = {...value, color};\n        return {\n          ...res2,\n          [x]: res2[x] ? [...res2[x], transformedValue] : [transformedValue]\n        }\n      }, res)\n    }, {})\n    // turn datagroup to an array of [x, list of related objects]\n    dataGroups = Object.entries(xMap);\n  }\n  let getX, getY;\n  const yPropToFilter = useRelativeScale ? 'filteredY' : 'y';\n  let xValues;\n  if (graphType === 'linegraph') {\n    // handling relative or global filter\n    const xExtent = extent(dataGroups.reduce((res, [_id, values]) => [...res, ...values.map(v => v.x)] , []));\n    getX = scaleLinear().range(xRange).domain(xExtent);\n    getY = scaleLinear().range(yRange).domain([0, max(dataGroups.map(([_id, values]) => max(values.map(v => v[yPropToFilter]))))]).nice();\n  } else if (graphType === 'histogram') {\n    const xExtent = extent(dataGroups.map(([x]) => +x));\n    getX = scaleLinear().range(xRange).domain(xExtent);\n    xValues = uniqBy(dataGroups, d => d[0])\n    // y scale domain is the biggest sum for each x modality\n    getY = scaleLinear().range(yRange).domain([0, max(dataGroups.map(([_x, list]) => list.reduce((sum, item) => sum + item[yPropToFilter] , 0)))]).nice();\n  }\n\n   // apply filter\n   if (filters.length && colorVariable) {\n    const filtersAffectingColor = filters.filter(f => f.attribute === colorVariable);\n    if (graphType === 'linegraph') {\n      dataGroups = dataGroups.filter(([colorValue, values]) => {\n        if (filtersAffectingColor) {\n          if (filtersModeAnd) {\n            const oneFilterDoesNotMatches = filtersAffectingColor.find(({ attribute, value }) => colorValue !== '' + value) !== undefined;\n            return !oneFilterDoesNotMatches;\n          } else {\n            const oneFilterMatches = filtersAffectingColor.find(({ attribute, value }) => colorValue === '' + value) !== undefined;\n            return oneFilterMatches;\n          }\n        } else {\n          return true;\n        }\n      })\n     } else if (graphType === 'histogram') {\n       // filtering groups\n      dataGroups = dataGroups.reduce((res, [xValue, values]) => {\n        if (filtersAffectingColor) {\n          const newValues = values.filter(value => {\n            if (filtersModeAnd) {\n              const oneFilterDoesNotMatches = filtersAffectingColor.find(({ attribute, value }) => value.color !== '' + value) !== undefined;\n              return !oneFilterDoesNotMatches;\n            } else {\n              const oneFilterMatches = filtersAffectingColor.find(({ attribute, value }) => value.color === '' + value) !== undefined;\n              return oneFilterMatches;\n            }\n          })\n          if (newValues.length) {\n            return [...res, [xValue, newValues]]\n          // all items filtered out -> do not include the group\n          } else return res;\n        // no filters, return as is\n        } else {\n          return [...res, [xValue, values]];\n        }\n      }, [])\n     }\n    \n  }\n    \n  \n  // manage palette\n  let colorPalette;\n  if (inputColorPalette) {\n    colorPalette = inputColorPalette;\n  }\n  else if (colorVariable && colorVariable !== 'default') {\n    const palette = generatePalette(colorVariable, filtersOptions[colorVariable].options.length);\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n  }\n  let getColor = (val) => {\n    return colorPalette ? colorPalette[val] : 'grey';\n  }\n\n  // handling search\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n  let getYHisto\n  // preparing histogram stacking\n  if (graphType === 'histogram') {\n    dataGroups = dataGroups.map(([xValue, values]) => {\n      // let sum = 0;\n      const newValues = values\n      .sort((a, b) => {\n        if (a.color > b.color) {\n          return 1;\n        } else return -1;\n      })\n      .reduce((total, value, index) => {\n        const prev = index > 0 ? total[index - 1] : undefined;\n        const yDisplace = prev ? +prev.y + (prev.yDisplace || 0) : 0;\n\n        const newValue = {\n          ...value,\n          yDisplace,\n          y: +value.y,\n          x: +value.x\n        }\n        return [...total, newValue]\n      }, [])\n\n      return [xValue, newValues];\n    }, []);\n\n    dataGroups = dataGroups.sort((a, b) => {\n      if (+a[0] > +b[0]) {\n        return 1;\n      }\n      return -1;\n    });\n    if (normalizeY) {\n      dataGroups = dataGroups.map(([xValue, values]) => {\n        const sum = values.reduce((sum, v) => sum + v.y, 0);\n        const sumFiltered = values.reduce((sum, v) => sum + v.filteredY, 0);\n        return [\n          xValue,\n          values.map(v => {\n            return {\n              ...v,\n              yDisplace: v.yDisplace / sum,\n              y: v.y / sum,\n              filteredY: v.filteredY / sumFiltered,\n            }\n          })\n        ]\n      })\n    }\n    const maxStacked = max(dataGroups.map(([_xValue, values]) => values.reduce((sum, v) => sum + v.y, 0)));\n    getYHisto = scaleLinear()\n    // .range([MARGIN, HEIGHT - MARGIN])\n    .range([0, HEIGHT - MARGIN * 2])\n    .domain([0, normalizeY ? 1 : maxStacked]).nice()\n\n    getY\n    .domain([0, normalizeY ? 1 : maxStacked]).nice()\n\n  }\n    \n  return (\n    <>\n        <svg transform={`translate(0, ${-MARGIN/2})`} className=\"LinearGraph\" width={WIDTH} height={HEIGHT + MARGIN/2}>\n            <g>\n              \n              <g className=\"left-axis\">\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map((tick, index) => {\n                  const x = MARGIN * .7;\n                  return (\n                    <g className=\"axis-element\" key={index}>\n                      <text textAnchor=\"end\" x={x} y={getY(tick)}>\n                        {tick}\n                      </text>\n                      \n                      <line\n                        x1={x  + MARGIN * .1}\n                        y1={getY(tick)}\n                        x2={MARGIN}\n                        y2={getY(tick)}\n                        stroke={'black'}\n                      />\n                      <line\n                        x1={MARGIN}\n                        y1={getY(tick)}\n                        x2={WIDTH - MARGIN / 2}\n                        y2={getY(tick)}\n                        stroke={'lightgrey'}\n                        strokeDasharray={'1, 2'}\n                      />\n                    </g>\n                  )\n                })\n              }\n                <line\n                  stroke={'black'}\n                  y1={MARGIN}\n                  y2={HEIGHT - MARGIN}\n                  x1={MARGIN}\n                  x2={MARGIN}\n                />\n              </g>\n              <g className=\"bottom-axis\">\n                <line\n                  stroke={'black'}\n                  y1={HEIGHT - MARGIN}\n                  y2={HEIGHT - MARGIN}\n                  x1={MARGIN}\n                  x2={WIDTH - MARGIN / 2}\n                />\n                {\n                getX.ticks &&\n                getX.ticks()\n                .map((tick, index) => {\n                  const y = HEIGHT - MARGIN * .75\n                  return (\n                    <g className=\"axis-element\" key={index}>\n                      <g transform={`translate(${getX(tick)} ${y})`}>\n                        <g transform={'rotate(-45)'}>\n                          <text \n                            textAnchor=\"end\"\n                          >\n                            {xLabelMap[tick]}\n                          </text>\n                        </g>\n                      </g>\n                      <line\n                        y1={HEIGHT - MARGIN}\n                        y2={y - MARGIN * .1}\n                        x1={getX(tick)}\n                        x2={getX(tick)}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n                }\n              </g>\n              {\n                graphType === 'linegraph' ?\n                dataGroups.map(([colorValue, values], index) => {\n                  const firstX = getX(values[0].x);\n                  const firstY = getY(values[0].y);\n                  const color = colorVariable ? getColor(colorValue) : 'grey';\n                  const path = `M ${firstX} ${firstY} ${\n                    values\n                    .reduce((res, {x, y}) => {\n                      return `${res} L ${getX(x)} ${getY(y)}`\n                    }, '')\n                  }`\n                  return <>\n                    <path d={path} \n                      fill=\"transparent\" \n                      stroke={ colorVariable ? color : 'grey'}\n                      key={colorValue}\n                    />\n                    {\n                      values.map(({x, y}, index) => (\n                        <circle\n                          key={index}\n                          cx={getX(x)}\n                          cy={getY(y)}\n                          fill={ color }\n                          r={2}\n                        />\n                      ))\n                    }\n                  </>\n                })\n                : \n                <g className=\"histogram-objects\">\n                  {\n                    dataGroups.map(([xValue, values], index) => {\n                      return (\n                        <g key={index} className=\"x-group\">\n                          {\n                            values.map(({x, y, yDisplace, color}, index2) => {\n                              return (\n                                <rect\n                                  key={index2}\n                                  x={getX(x)}\n                                  y={HEIGHT - MARGIN - getYHisto(y) - getYHisto(yDisplace)}\n                                  height={getYHisto(y)}\n                                  width={ (WIDTH - MARGIN * 4) / xValues.length}\n                                  fill={getColor(color)}\n                                />\n                              )\n                            })\n                          }\n                        </g>\n                      )\n                     \n                    })\n                  }\n                </g>\n              }\n            </g>\n        </svg>\n        {\n          presentationMode ? null :\n          <>\n            <LinearGraphControls\n          {\n            ...{\n              xVariable,\n              xLabelVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n              graphType,\n              useRelativeScale,\n              normalizeY,\n\n              searchString,\n\n              onSearchStringChange,\n              \n              onXVariableChange,\n              onXLabelVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleReverseX,\n              onToggleReverseY,\n              onColorPaletteChange,\n              onToggleUseRelativeScale,\n              onGraphTypeChange,\n              onNormalizeYChange,\n\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              onFiltersChange,\n              filters,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n        <form onSubmit={e => {e.preventDefault()}} className=\"caption-editor-container\">\n            <h1 className=\"caption-title-container\">\n              <Input\n                value={title || ''}\n                onChange={val => onTitleChange(val)}\n                placeholder=\"Titre de la visualisation\"\n              />\n            </h1>\n            <div className=\"caption-legend-container\">\n              <Input\n                value={legend || ''}\n                onChange={val => onLegendChange(val)}\n                placeholder=\"Légende de la visualisation\"\n                type=\"textarea\"\n              />\n            </div>\n          </form>\n          </>\n        }\n        \n    </>\n  );\n}\n\nexport default function LinearGraphContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer LinearGraphContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <LinearGraphContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\nimport FiltersEditor from '../FiltersEditor';\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide,\n  colorScaleType,\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters,\n\n  rotateMode,\n  searchString,\n  reverseFlickering,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleLabelsOnTheSide,\n  onColorPaletteChange,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  onColorScaleTypeChange,\n  onReverseFlickeringChange,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les y',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Type d\\'échelle pour la couleur',\n                    onChange: onColorScaleTypeChange,\n                    localOptions: [[\n                      'discrete',\n                      {title: 'discrète'}\n                    ], [\n                      'continuous',\n                      {title: 'continue'}\n                    ]],\n                    value: colorScaleType,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Afficher les labels sur le côté',\n                    onChange: onToggleLabelsOnTheSide,\n                    value: labelsOnTheSide,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Inverser le clignotement quand filtré',\n                    onChange: onReverseFlickeringChange,\n                    value: reverseFlickering,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        <li className=\"vis-controls-item\">\n          <FiltersEditor\n            {\n              ...{\n                onToggleFiltersModeAnd,\n                filtersModeAnd,\n                filtersOptions,\n                onFiltersChange,\n                filters\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport { scaleLinear } from 'd3-scale';\nimport { min, extent } from 'd3-array';\nimport cx from 'classnames';\n\nimport IceCreamControls from './IceCreamControls';\nimport { generatePalette } from '../../helpers/palettes';\nimport Input from '../DebouncedInput';\n\nimport './IceCreamContainer.css';\nimport { evalIfNodeMatches, transformGeometry } from '../../helpers/misc';\n\nconst GIF_TIME = 500;\n\nexport function IceCreamContainer({\n\n  width,\n  height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide = true,\n  colorPalette: inputColorPalette,\n  colorScaleType,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  filtersOptions = {},\n  presentationMode,\n\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  onFiltersChange,\n  filters = [],\n  title,\n  legend,\n  reverseFlickering,\n\n\n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  onToggleLabelsOnTheSide,\n  onColorPaletteChange,\n  onColorScaleTypeChange,\n  onTitleChange,\n  onLegendChange,\n  onReverseFlickeringChange,\n}) {\n\n  const [zoomedIndex, setZoomedIndex] = useState(null);\n  const [enableZoom, setEnableZoom] = useState(true);\n  const updateActive = () => {\n    if (filters && filters.length) {\n      const existing = zoomedIndex === null ? -1 : zoomedIndex;\n      let found = false;\n      if (reverseFlickering) {\n        for (let i = existing - 1; i >= 0; i--) {\n          if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n            setZoomedIndex(i);\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          for (let i = data.length - 1; i >= 0; i--) {\n            if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n              setZoomedIndex(i);\n              break;\n            }\n          }\n        }\n      } else {\n        for (let i = existing + 1; i < data.length; i++) {\n          if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n            setZoomedIndex(i);\n            found = true;\n            break;\n          }\n        }\n        if (!found) {\n          for (let i = 0; i < data.length; i++) {\n            if (evalIfNodeMatches(data[i], filters, filtersModeAnd)) {\n              setZoomedIndex(i);\n              break;\n            }\n          }\n        }\n      }\n\n    }\n  }\n\n  useEffect(() => {\n    if (filters && filters.length) {\n      if (zoomedIndex === null) {\n        updateActive();\n      }\n      setTimeout(updateActive, GIF_TIME);\n    } else {\n      setZoomedIndex(null);\n    }\n    /* eslint react-hooks/exhaustive-deps : 0 */\n  }, [\n    JSON.stringify(filters),\n    filtersModeAnd,\n    data,\n    zoomedIndex\n  ])\n\n  const smallestDimension = min([width, height]);\n  // in rotate mode width indexed on the hypothenuse\n  const WIDTH = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n  const HEIGHT = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n\n  const MIN_AREA = smallestDimension / 50;\n  const MAX_AREA = smallestDimension / 2;\n  const MARGIN = WIDTH / 15;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN * 2];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  const getX = xVariable && xVariable !== 'default' ? scaleLinear().range(xRange).domain([0, 1]) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ? scaleLinear().range(yRange).domain([0, 1]) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ? scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_AREA, MAX_AREA]) : () => 0;\n\n  // manage palette\n  let colorPalette;\n  if (inputColorPalette) {\n    colorPalette = inputColorPalette;\n  }\n  else if (colorVariable && colorVariable !== 'default' && filtersOptions[colorVariable]) {\n    const palette = generatePalette(colorVariable, filtersOptions[colorVariable].options.length);\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n  }\n  let continuousColorScale;\n  if (colorScaleType === 'continuous') {\n    let colorRange = ['#D77186', '#61A2DA'];\n    if (colorPalette && colorPalette['from'] && colorPalette['to']) {\n      colorRange = [colorPalette['from'], colorPalette['to']]\n    } else {\n      colorPalette = {\n        from: '#D77186',\n        to: '#61A2DA'\n      }\n    }\n    continuousColorScale = scaleLinear().domain(extent(data.map(d => +d[colorVariable]))).range(colorRange)\n  }\n  let getColor = (val) => {\n    if (colorScaleType === 'continuous') {\n      return continuousColorScale(+val);\n    } else return colorPalette ? colorPalette[val] : 'grey';\n  }\n\n  // handling search\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  let rotateTransform = { rotate: 0 };\n  if (rotateMode) {\n    rotateTransform = {\n      rotate: -45,\n      translate: { x: 0, y: smallestDimension / 2 }\n    }\n  }\n  // wrapping function for transforms\n  const transf = (x, y) => transformGeometry({ x, y }, rotateTransform)\n  // dimensions of control background rect\n  const { x: point1X, y: point1Y } = transformGeometry({\n    x: 0,\n    y: 0\n  }, rotateTransform)\n  const { x: point2X, y: point2Y } = transformGeometry({\n    x: WIDTH,\n    y: 0\n  }, rotateTransform)\n  const { x: point3X, y: point3Y } = transformGeometry({\n    x: WIDTH,\n    y: HEIGHT\n  }, rotateTransform)\n  const { x: point4X, y: point4Y } = transformGeometry({\n    x: 0,\n    y: HEIGHT\n  }, rotateTransform)\n\n  return (\n    <>\n      <svg\n        className={cx(\"scatterplot\", { 'zoom-mode': zoomedIndex !== null && enableZoom })}\n        width={width}\n        height={height}\n      >\n        <g\n          transform={`translate(${WIDTH < width ? (width - smallestDimension) / 2 : 0}, ${HEIGHT < height ? (height - smallestDimension) * .66 : 0})`}\n        >\n          <polygon\n            points={`${point1X},${point1Y} ${point2X},${point2Y} ${point3X},${point3Y} ${point4X},${point4Y}`}\n            width={WIDTH}\n            height={HEIGHT}\n            fill=\"white\"\n          />\n          <g transform={`translate(${rotateMode ? 0 : MARGIN / 2}, ${rotateMode ? -MARGIN : 0})${rotateMode ? 'scale(1.05)' : ''}`}>\n            <g className=\"axis axis-left\">\n              <line\n                x1={transf(MARGIN, MARGIN).x}\n                y1={transf(MARGIN, MARGIN).y}\n                x2={transf(MARGIN, HEIGHT - MARGIN * 2).x}\n                y2={transf(MARGIN, HEIGHT - MARGIN * 2).y}\n                stroke={'black'}\n              />\n              {\n                getY.ticks &&\n                getY.ticks()\n                  .map(tick => {\n\n                    const { x, y } = transf(MARGIN, getY(tick))\n                    const { x: x1, y: y1 } = transf(MARGIN / 4, getY(tick) + MARGIN / 6)\n                    const { x: x2, y: y2 } = transf(MARGIN / 2, getY(tick))\n                    return (\n                      <g key={tick}>\n                        <text textAnchor=\"end\" x={x1} y={y1}>\n                          {tick}\n                        </text>\n                        <line\n                          x1={x}\n                          y1={y}\n                          x2={x2}\n                          y2={y2}\n                          stroke={'black'}\n                        />\n                      </g>\n                    )\n                  })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH / 2 - MARGIN * 1.5}, ${HEIGHT + MARGIN * 2.5})rotate(45)` : `translate(0, ${MARGIN / 2 - 2})`}\n              >\n                <text\n                  className=\"axis-variable-name\"\n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {yVariable}\n                </text>\n              </g>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line\n                x1={transf(MARGIN, HEIGHT - MARGIN * 2).x}\n                y1={transf(MARGIN, HEIGHT - MARGIN * 2).y}\n                x2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).x}\n                y2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).y}\n                stroke={'black'}\n              />\n              {\n                getX.ticks &&\n                getX.ticks()\n                  .map(tick => {\n                    const { x, y } = transf(getX(tick), HEIGHT - MARGIN * 2);\n                    const { x: x1, y: y1 } = transf(getX(tick), HEIGHT - MARGIN * 1.66);\n                    const { x: x2, y: y2 } = transf(getX(tick), HEIGHT - MARGIN * 1.25);\n                    return (\n                      <g key={tick}>\n                        <text textAnchor=\"center\" x={x2} y={y2}>\n                          {tick}\n                        </text>\n                        <line\n                          x1={x}\n                          y1={y}\n                          x2={x1}\n                          y2={y1}\n                          stroke={'black'}\n                        />\n                      </g>\n                    )\n                  })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH}, ${HEIGHT + MARGIN * 1.5})rotate(-45)` : `translate(${WIDTH - MARGIN * 1.5}, ${HEIGHT - MARGIN / 3 - 2})`}\n              >\n                <text\n                  className=\"axis-variable-name\"\n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {xVariable}\n                </text>\n              </g>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n\n                getY.ticks &&\n                getY.ticks()\n                  .map(tick => (\n                    <line\n                      key={tick}\n                      x1={transf(MARGIN, getY(tick)).x}\n                      y1={transf(MARGIN, getY(tick)).y}\n                      x2={transf(WIDTH - MARGIN * 2, getY(tick)).x}\n                      y2={transf(WIDTH - MARGIN * 2, getY(tick)).y}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n\n                getX.ticks &&\n                getX.ticks()\n                  .map(tick => (\n                    <line\n                      key={tick}\n                      x1={transf(getX(tick), MARGIN).x}\n                      y1={transf(getX(tick), MARGIN).y}\n                      x2={transf(getX(tick), WIDTH - MARGIN * 2).x}\n                      y2={transf(getX(tick), WIDTH - MARGIN * 2).y}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n            </g>\n            <g\n              className=\"plot-objects-container\"\n              onMouseEnter={() => setEnableZoom(false)}\n              onMouseLeave={() => setEnableZoom(true)}\n            >\n              {\n                data\n                  .sort((a, b) => {\n                    if (getY(a[yVariable]) > getY(b[yVariable])) {\n                      return 1;\n                    }\n                    return -1;\n                  })\n                  .map((datum, index) => {\n                    const radius = Math.sqrt(getSize(+datum[sizeVariable]) / Math.PI);\n                    let { x, y } = transf(getX(+datum[xVariable]), getY(+datum[yVariable]));\n                    let { x: xForXAxis, y: yForXAxis } = transf(getX(datum[xVariable]), getY.range ? getY.range()[0] : 0);\n                    let { x: xForYAxis, y: yForYAxis } = transf(getX.range ? getX.range()[0] : 0, getY(datum[yVariable]));\n                    let labelX = x + radius + smallestDimension / 100;\n                    let labelY = rotateMode ? y - smallestDimension / 200 : y + smallestDimension / 200;\n                    let pointerStartCoords = transf(getX(datum[xVariable]) + radius, getY(datum[yVariable]));\n                    if (labelsOnTheSide) {\n                      let { x: newX, y: newY } = transf(WIDTH - MARGIN * 1.7, MARGIN + index * (HEIGHT - MARGIN * 3) / data.length);\n                      labelX = newX;\n                      labelY = newY;\n                    }\n\n                    let opacity = 1;\n                    const isMatching = !filters.length || evalIfNodeMatches(datum, filters, filtersModeAnd);\n                    if (filters.length) {\n                      if (isMatching && (!highlightedIndex || highlightedIndex.has(index))) {\n                        opacity = 1;\n                      } else {\n                        opacity = .05;\n                      }\n                    } else if (highlightedIndex && !highlightedIndex.has(index)) {\n                      opacity = .2;\n                    }\n\n                    const isZoomed = index === zoomedIndex && enableZoom === true;\n\n                    return (\n                      <g\n                        key={index}\n                        className={cx(\"plot-object\", { 'is-matching': isMatching, 'is-zoomed': isZoomed })}\n                        opacity={opacity}\n                      >\n                        <line\n                          className=\"axis-line\"\n                          stroke=\"grey\"\n                          strokeDasharray='1,1'\n                          x1={x}\n                          y1={y}\n                          x2={xForYAxis}\n                          y2={yForYAxis}\n                        />\n                        <line\n                          className=\"axis-line\"\n                          stroke=\"grey\"\n                          strokeDasharray='1,1'\n                          x1={x}\n                          y1={y}\n                          x2={xForXAxis}\n                          y2={yForXAxis}\n                        />\n                        <circle\n                          cx={x}\n                          cy={y}\n                          r={radius}\n                          fill={getColor(datum[colorVariable])}\n                          opacity={.8}\n                        />\n                        {\n                          labelsOnTheSide ?\n                            <line\n                              x1={pointerStartCoords.x}\n                              y1={pointerStartCoords.y}\n                              x2={labelX}\n                              y2={labelY}\n                              stroke=\"lightgrey\"\n                              strokeDasharray='4,4'\n                            />\n                            : null\n                        }\n                        <g\n                          transform={`translate(${labelX}, ${labelY})`}\n                        >\n                          <text\n                            transform={rotateMode ? 'rotate(-45)' : ''}\n                            style={{\n                              fontSize: rotateMode && labelsOnTheSide ? HEIGHT / 70 : undefined\n                            }}\n                          >\n                            {datum[labelVariable]}\n                          </text>\n                        </g>\n                      </g>\n                    )\n                  })\n              }\n            </g>\n          </g>\n        </g>\n      </svg>\n      {\n        presentationMode ? null :\n          <>\n            <IceCreamControls\n              {\n              ...{\n                xVariable,\n                yVariable,\n                reverseX,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                labelsOnTheSide,\n\n                rotateMode,\n                searchString,\n                colorScaleType,\n                reverseFlickering,\n\n                onSearchStringChange,\n                onToggleRotateMode,\n\n                onXVariableChange,\n                onYVariableChange,\n                onColorVariableChange,\n                onSizeVariableChange,\n                onLabelVariableChange,\n                onToggleLabelsOnTheSide,\n                onToggleReverseX,\n                onToggleReverseY,\n                onColorPaletteChange,\n                onColorScaleTypeChange,\n                onReverseFlickeringChange,\n\n                onToggleFiltersModeAnd,\n                filtersModeAnd,\n                onFiltersChange,\n                filters,\n\n                filtersOptions,\n                colorPalette,\n              }\n              }\n            />\n            <form onSubmit={e => { e.preventDefault() }} className=\"caption-editor-container\">\n              <h1 className=\"caption-title-container\">\n                <Input\n                  value={title || ''}\n                  onChange={val => onTitleChange(val)}\n                  placeholder=\"Titre de la visualisation\"\n                />\n              </h1>\n              <div className=\"caption-legend-container\">\n                <Input\n                  value={legend || ''}\n                  onChange={val => onLegendChange(val)}\n                  placeholder=\"Légende de la visualisation\"\n                  type=\"textarea\"\n                />\n              </div>\n            </form>\n          </>\n      }\n\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n      <ContainerDimensions>\n        {\n          dimensions => <IceCreamContainer {...{ ...props, ...dimensions }} />\n        }\n      </ContainerDimensions>\n    </div>\n  )\n}","import {useMemo, useState, useEffect} from 'react';\nimport Graph from 'graphology';\nimport gexf from 'graphology-gexf';\nimport {extent} from 'd3-array';\nimport ContainerDimensions from 'react-container-dimensions';\nimport cx from 'classnames';\n\nimport {LinearGraphContainer} from '../LinearGraphAnnotation/LinearGraphContainer'\nimport {GraphContainer} from '../GraphAnnotation/GraphContainer'\nimport {IceCreamContainer} from '../IceCreamAnnotation/IceCreamContainer'\nimport Loader from '../Loader'\nimport { groupBy } from 'lodash-es';\n\n\nconst GraphWrapper = ({data, ...props}) => {\n  const [cameraPosition, setCameraPosition] = useState({x: props.x, y: props.y, ratio: props.ratio})\n\n  useEffect(() => {\n    setCameraPosition({\n      x: props.x, y: props.y, ratio: props.ratio\n    })\n  }, [props.x, props.y, props.ratio])\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n\n  const onCameraUpdate = (pos) => {\n    // setCameraPosition(pos);\n  }\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n  return (\n    <GraphContainer\n      {...{\n        ...props,\n        graph,\n        extents: {\n          nodeSize: {\n            min: sizeExtent[0],\n            max: sizeExtent[1]\n          }\n        },\n        onCameraUpdate,\n        cameraPosition,\n      }\n      }\n    />\n  );\n}\nconst buildImprint = d => /*d.data + '-' +*/ d.visType;\n\nconst VisualizationController = ({\n  datasets,\n  visualizations,\n  activeVisualization,\n  width,\n  height,\n  loadingFraction,\n}) => {\n  const [lockCamera, setLockCamera] = useState(true);\n  const firstInstanceOfEachVisualization = useMemo(() => {\n    return Object.entries(\n      groupBy(\n        Object.entries(visualizations || {}),\n        d => buildImprint(d[1])\n      )\n    )\n    .reduce((res, [imprint, [firstInstance]]) => ({\n      ...res, \n      [imprint]: firstInstance[1]\n    }), {})\n  }, [visualizations]);\n\n  let activeImprint;\n  if (activeVisualization) {\n    activeImprint = buildImprint(activeVisualization);\n  }\n  useEffect(() => {\n    if (!lockCamera) {\n      setLockCamera(true);\n    }\n  }, [activeVisualization])/* eslint react-hooks/exhaustive-deps : 0 */\n\n  const renderVisualization = vis => {\n    if (!datasets[vis.data]) {\n      return null;\n    }\n    switch(vis.visType) {\n      case 'linearGraph':\n        return (\n          <LinearGraphContainer\n            {...{\n              ...vis,\n              data: datasets[vis.data],\n              width,\n              height: height * .66,\n              presentationMode: true\n            }}\n          />\n        );\n      case 'networkGraph':\n        return (\n          <GraphWrapper\n            {...{\n              ...vis,\n              data: datasets[vis.data],\n              width: width - 5,\n              height,\n              presentationMode: true,\n              lockCamera,\n              onToggleCameraLock: () => setLockCamera(!lockCamera)\n            }}\n          />\n        );\n      case 'icecreamGraph':\n        return (\n          <IceCreamContainer\n            {...{\n              ...vis,\n              data: datasets[vis.data],\n              width,\n              height,\n              presentationMode: true\n            }}\n          />\n        );\n      default:\n        return vis.visType;\n    }\n  }\n  if (loadingFraction < 1) {\n    return <Loader percentsLoaded={loadingFraction * 100} />\n  }\n  return (\n    <div className=\"VisualizationController\">\n      {\n        Object.entries(firstInstanceOfEachVisualization)\n        .map(([imprint, defaultVisualization]) => {\n          return (\n            <div className={cx('visualization-item', {'is-visible': imprint === activeImprint})}>\n              {\n                imprint === activeImprint ?\n                renderVisualization(activeVisualization)\n                :\n                renderVisualization(defaultVisualization)\n              }\n            </div>\n          )\n        })\n      }\n    </div>\n  )\n  // return null;\n}\n\nexport default function VisualizationControllerWithDimensions(props) {\n  return (\n    <div className={cx(\"VisualizationController\", props.activeVisualization && props.activeVisualization.visType)}>\n\n    <ContainerDimensions>\n      {\n        dimensions => <VisualizationController {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import VisualizationController from './VisualizationController';\n\nexport default VisualizationController;","import FooterNav from './FooterNav';\n\nexport default FooterNav;","import React, {useContext} from 'react';\nimport { Link } from 'react-router-dom';\nimport {LanguageContext} from '../../contexts';\nimport cx from 'classnames';\n\nconst FooterNav = ({\n  prevPage,\n  nextPage\n}) => {\n  const {\n    lang\n  } = useContext(LanguageContext);\n  const messages = {\n    next: {\n      fr: 'Page suivante',\n      en: 'Next page'\n    },\n    prev: {\n      fr: 'Page précédente',\n      en: 'Previous page'\n    }\n  }\n  return (\n    <footer className={cx(\"FooterNav\", {'start-page': !prevPage})}>\n      <ul>\n        {\n          prevPage ?\n            <li className=\"previous-page\">\n              <h5>\n                <Link to={prevPage.route[lang]}>\n                  <div className=\"marker\">{'<'}</div>\n                  <div className=\"page-content\">\n                    <div className=\"page-label\"><i>{messages.prev[lang]}</i></div>\n                    <div>\n                        {prevPage.title[lang]}\n                    </div>\n                  </div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n        {\n          nextPage ?\n            <li className=\"next-page\">\n              <h5>\n                <Link to={nextPage.route[lang]}>\n                  <div>\n                    <div className=\"page-label\"><i>{messages.next[lang]}</i></div>\n                    <div className=\"page-content\">\n                        {nextPage.title[lang]}\n                    </div>\n                  </div>\n                  <div className=\"marker\">{'>'}</div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n      </ul>\n    </footer>\n  )\n}\n\nexport default FooterNav;","import React, {useState, useMemo, useEffect, Suspense} from 'react';\nimport {extent} from 'd3-array';\nimport {generatePalette} from '../../helpers/palettes';\n\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from './GraphContainer';\nimport FooterNav from '../FooterNav';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst DEFAULT_LABEL_DENSITY = 0.25;\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst GraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, data), [graph, data]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n  const [nodeLabelVariable, setNodeLabelVariable] = useState(undefined);\n  const [labelDensity, setLabelDensity] = useState(DEFAULT_LABEL_DENSITY);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n  const [displayAllLabels, setDisplayAllLabels] = useState(false);\n  const [hasLoadedFirstVis, setHasLoadedFirstVis] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString: newSearchString, \n    filtersModeAnd: newFiltersModeAnd, \n    filters: newFilters, \n    nodeColorVariable: newNodeColorVariable,\n    nodeSizeVariable,\n    nodeLabelVariable,\n    labelDensity,\n    colorPalette: newColorPalette,\n    title: newTitle,\n    legend: newLegend,\n    displayAllLabels: newDisplayAllLabels\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(newSearchString);\n    setFiltersModeAnd(newFiltersModeAnd);\n    setFilters(newFilters);\n    setNodeColorVariable(newNodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n    setNodeLabelVariable(nodeLabelVariable);\n    setDisplayAllLabels(newDisplayAllLabels);\n    setTitle(newTitle);\n    setLegend(newLegend);\n    if (newColorPalette && (nodeColorVariable === newNodeColorVariable || !nodeColorVariable)) {\n      setColorPalette(newColorPalette);\n    } else {\n      const colors = generatePalette(newNodeColorVariable, filtersOptions[newNodeColorVariable].options.size);\n      const palette = {};\n      let i = 0;\n      filtersOptions[newNodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(palette);\n    }\n    setLabelDensity(labelDensity === undefined ? DEFAULT_LABEL_DENSITY : labelDensity);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId );\n      onVisualizationUpdate(registeredVisualizations[thatId]);\n      setHasLoadedFirstVis(true);\n    }\n  }, [registeredVisualizations, focusedVisualizationId]);/* eslint react-hooks/exhaustive-deps : 0 */\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  \n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        displayAllLabels,\n        nodeSizeVariable,\n        nodeColorVariable,\n        nodeLabelVariable,\n        filtersModeAnd,\n        labelDensity,\n        colorPalette,\n        title,\n        legend,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      \n      <aside>\n        {hasLoadedFirstVis ?\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                filtersModeAnd,\n                labelDensity,\n                displayAllLabels,\n                title,\n                legend,\n\n                colorPalette,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onLabelDensityChange: val => setLabelDensity(val),\n                onDisplayAllLabelsChange: val => setDisplayAllLabels(val),\n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n                onNodeLabelVariableChange: (val) => setNodeLabelVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        : <Loader percentsLoaded={50} /> }\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import IceCreamAnnotation from './IceCreamAnnotation';\n\nexport default IceCreamAnnotation;","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\nimport { generatePalette } from '../../helpers/palettes';\n\nimport IceCreamVis from './IceCreamContainer';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n  const [labelsOnTheSide, setLabelsOnTheSide] = useState(false);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [colorScaleType, setColorScaleType] = useState(undefined);\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n  const [filters, setFilters] = useState([]);\n  const [reverseFlickering, setReverseFlickering] = useState(false);\n\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n    labelsOnTheSide: thatLabelsOnTheSide,\n    colorScaleType: thatColorScaleType,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n    colorPalette: thatColorPalette,\n    filters: theseFilters = [],\n    filtersModeAnd: theseFiltersModeAnd,\n    title: thisTitle,\n    legend: thisLegend,\n    reverseFlickering: thatReverseFlickering,\n  }) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setColorScaleType(thatColorScaleType);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n    setLabelsOnTheSide(thatLabelsOnTheSide);\n    setFilters(theseFilters);\n    setFiltersModeAnd(theseFiltersModeAnd);\n    setTitle(thisTitle);\n    setLegend(thisLegend);\n    setReverseFlickering(thatReverseFlickering);\n    if (thatColorPalette && (colorVariable === thatColorVariable || (!colorVariable && thatColorVariable))) {\n      setColorPalette(thatColorPalette);\n    } else if (thatColorVariable || colorScaleType !== thatColorScaleType) {\n      let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n      if (palette) {\n        const colors = generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.size);\n        // const palette = {};\n        let i = 0;\n        filtersOptions[thatColorVariable].options.forEach(option => {\n          palette[option] = colors[i];\n          i++;\n        });\n      } else {\n        setColorPalette(undefined);\n      }\n      \n      setColorPalette(palette);\n    } else if (colorPalette) {\n      setColorPalette(undefined);\n    }\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId);\n      onVisualizationUpdate(registeredVisualizations[thatId]);\n    }\n  }, [registeredVisualizations, focusedVisualizationId])/* eslint react-hooks/exhaustive-deps : 0 */\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n        labelsOnTheSide,\n\n        rotateMode,\n        searchString,\n        colorPalette,\n        colorScaleType,\n\n        filters,\n        filtersModeAnd,\n\n        title,\n        legend,\n        reverseFlickering,\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <IceCreamVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                labelsOnTheSide,\n                colorPalette,\n                colorScaleType,\n\n                rotateMode,\n                searchString,\n\n                filtersModeAnd,\n                filters,\n                title,\n                legend,\n                reverseFlickering,\n\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onSearchStringChange,\n                onToggleRotateMode: () => setRotateMode(!rotateMode),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onSizeVariableChange: (val) => setSizeVariable(val),\n                onLabelVariableChange: (val) => setLabelVariable(val),\n                onToggleLabelsOnTheSide: val => setLabelsOnTheSide(val),\n                onColorPaletteChange: val => setColorPalette(val),\n                onColorScaleTypeChange: val => setColorScaleType(val),\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n                onReverseFlickeringChange: val => setReverseFlickering(val),\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import LinearGraphAnnotation from './LinearGraphAnnotation';\n\nexport default LinearGraphAnnotation;","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\nimport { generatePalette } from '../../helpers/palettes';\n\nimport LinearGraphVis from './LinearGraphContainer';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst LinearGraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [xLabelVariable, setXLabelVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [graphType, setGraphType] = useState('linegraph');\n  const [useRelativeScale, setUseRelativeScale] = useState(undefined);\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [filters, setFilters] = useState([]);\n  const [title, setTitle] = useState('');\n  const [legend, setLegend] = useState('');\n  const [normalizeY, setNormalizeY] = useState(false);\n\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    xLabelVariable: thatXLabelVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n\n    searchString: thatSearchString,\n    colorPalette: thatColorPalette,\n\n    graphType: thatGraphType,\n    useRelativeScale: thatUseRelativeScale,\n\n    filters: theseFilters = [],\n    filtersModeAnd: theseFiltersModeAnd,\n    title: thisTitle,\n    legend: thisLegend,\n    normalizeY: thatNormalizeY\n  }) => {\n    setXVariable(thatXVariable);\n    setXLabelVariable(thatXLabelVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setSearchString(thatSearchString);\n    setGraphType(thatGraphType);\n    setUseRelativeScale(thatUseRelativeScale);\n    setFilters(theseFilters);\n    setFiltersModeAnd(theseFiltersModeAnd);\n    setTitle(thisTitle);\n    setLegend(thisLegend);\n    setNormalizeY(thatNormalizeY);\n\n\n    if (thatColorPalette && ((!colorVariable && thatColorVariable) || colorVariable === thatColorVariable)) {\n      setColorPalette(thatColorPalette);\n    } else if (thatColorVariable) {\n      let colors = thatColorVariable && thatColorVariable !== 'default' ? generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.length) : undefined\n      // const colors = generatePalette(thatColorVariable, filtersOptions[thatColorVariable].options.size);\n      const finalPalette = {};\n      let i = 0;\n      filtersOptions[thatColorVariable].options.forEach(option => {\n        finalPalette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(finalPalette);\n    } else if (colorPalette) {\n      setColorPalette(undefined);\n    }\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId)\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])/* eslint react-hooks/exhaustive-deps : 0 */\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        graphType,\n        useRelativeScale,\n\n        xVariable,\n        xLabelVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n\n        searchString,\n        colorPalette,\n\n        filters,\n        filtersModeAnd,\n        \n        title,\n        legend,\n        normalizeY\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <LinearGraphVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                xLabelVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                colorPalette,\n                searchString,\n                useRelativeScale,\n                graphType,\n\n                onSearchStringChange,\n\n                filtersModeAnd,\n                filters,\n\n                title,\n                legend,\n                normalizeY,\n\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onXLabelVariableChange: (val) => setXLabelVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n\n                onGraphTypeChange: val => setGraphType(val),\n                onToggleUseRelativeScale: () => setUseRelativeScale(!useRelativeScale),\n\n                onTitleChange: val => setTitle(val),\n                onLegendChange: val => setLegend(val),\n                onNormalizeYChange: val => setNormalizeY(val),\n\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default LinearGraphAnnotation;","import PlainPage from './PlainPage';\n\nexport default PlainPage;","import React, {useState, Suspense} from 'react';\nimport FooterNav from '../FooterNav';\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  prevPage,\n  nextPage\n}) => {\n  const [helpVisible, setHelpVisible] = useState(false);\n  return (\n    <div className=\"slide-container without-visualization\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n      </aside>\n  </div>\n  )\n}\n\nexport default PlainPage;","import GraphAnnotation from './components/GraphAnnotation';\nimport IceCreamAnnotation from './components/IceCreamAnnotation';\nimport LinearGraphAnnotation from './components/LinearGraphAnnotation';\nimport PlainPage from './components/PlainPage';\n\nimport ChapoFr from '!babel-loader!mdx-loader!./contents/fr/chapo.mdx'\nimport ChapoEn from '!babel-loader!mdx-loader!./contents/en/headline.mdx'\n\n\nimport IntroFr from '!babel-loader!mdx-loader!./contents/fr/00_home.mdx'\nimport Part1Fr from '!babel-loader!mdx-loader!./contents/fr/01_couverture_media.mdx'\nimport Part2Fr from '!babel-loader!mdx-loader!./contents/fr/02_detectcritic.mdx'\nimport Part3Fr from '!babel-loader!mdx-loader!./contents/fr/03_graphclusters.mdx'    \nimport Part4Fr from '!babel-loader!mdx-loader!./contents/fr/04_timelineclusters.mdx'\nimport Part5Fr from '!babel-loader!mdx-loader!./contents/fr/05_toporobotalgo.mdx'\nimport Part6Fr from '!babel-loader!mdx-loader!./contents/fr/06_explore_entities.mdx'\nimport Part7Fr from '!babel-loader!mdx-loader!./contents/fr/07_IssueVERB.mdx'\nimport Part8Fr from '!babel-loader!mdx-loader!./contents/fr/08_NERdate.mdx'\nimport ReferencesFr from '!babel-loader!mdx-loader!./contents/fr/references.mdx'\n\nimport IntroEn from '!babel-loader!mdx-loader!./contents/en/00_home.mdx'\nimport Part1En from '!babel-loader!mdx-loader!./contents/en/01_couverture_media.mdx'\nimport Part2En from '!babel-loader!mdx-loader!./contents/en/02_detectcritic.mdx'\nimport Part3En from '!babel-loader!mdx-loader!./contents/en/03_graphclusters.mdx'    \nimport Part4En from '!babel-loader!mdx-loader!./contents/en/04_timelineclusters.mdx'\nimport Part5En from '!babel-loader!mdx-loader!./contents/en/05_toporobotalgo.mdx'\nimport Part6En from '!babel-loader!mdx-loader!./contents/en/06_explore_entities.mdx'\nimport Part7En from '!babel-loader!mdx-loader!./contents/en/07_IssueVERB.mdx'\nimport Part8En from '!babel-loader!mdx-loader!./contents/en/08_NERdate.mdx'\nimport ReferencesEn from '!babel-loader!mdx-loader!./contents/en/references.mdx'\n\nconst routes = [\n  {\n    title: {\n      fr: 'Chapô',\n      en: 'Headline',\n    },\n    route: {\n      fr: 'chapo',\n      en: 'headline',\n    },\n    contents: {\n      fr: 'chapo.mdx',\n      en: 'headline.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <ChapoFr />,\n      en: () => <ChapoEn />\n    },\n    Component: PlainPage\n  },\n  {\n    title: {\n      fr: 'Introduction',\n      en: 'Introduction',\n    },\n    route: {\n      fr: 'introduction',\n      en: 'introduction',\n    },\n    contents: {\n      fr: '00_home.mdx',\n      en: '00_home.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <IntroFr />,\n      en: () => <IntroEn />\n    },\n    Component: PlainPage\n  },\n  {\n    title: {\n      fr: 'Quelle est la couverture médiatique de l\\'IA ?',\n      en: '1. Media coverage',\n    },\n    route: {\n      fr: '01-couverture-media',\n      en: '01-media-coverage',\n    },\n    contents: {\n      fr: '01_couverture_media.mdx',\n      en: '01_couverture_media.mdx'\n    },\n    contentsCompiled: {\n      fr: () => <Part1Fr />,\n      en: () => <Part1En />\n    },\n    Component: LinearGraphAnnotation,\n    data: '4average_clusters_unpivoted.csv'\n  },\n  {\n    title: {\n      fr: 'Comment détecter le discours critique dans les médias ?',\n      en: '2. Detecting critiques',\n    },\n    route: {\n      fr: '02-detecter-critiques',\n      en: '02-detect-critiques'\n    },\n    contents: {\n      fr: '02_detectcritic.mdx',\n      en: '02_detectcritic.mdx'\n    },\n    contentsCompiled: {\n      fr: () => <Part2Fr />,\n      en: () => <Part2En />\n    },\n    Component: LinearGraphAnnotation,\n    data: 'critic_notcritic_unpivoted.csv',\n  },\n  {\n    title: {\n      fr: 'Quels sont les thèmes sur lesquels porte la critique ?',\n      en: '3. Graph clusters',\n    },\n    route: {\n      fr: '03-graph-clusters',\n      en: '03-graph-clusters',\n    },\n    contents: {\n      fr: '03_graphclusters.mdx',\n      en: '03_graphclusters.mdx'\n    },\n    contentsCompiled: {\n      fr: () => <Part3Fr />,\n      en: () => <Part3En />\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: 'Comment évolue l’agenda médiatique ?',\n      en: '4. Evolution of the mediatic agenda',\n    },\n    route: {\n      fr: '04-timeline-clusters',\n      en: '04-timeline-clusters',\n    },\n    contents: {\n      fr: '04_timelineclusters.mdx',\n      en: '04_timelineclusters.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <Part4Fr />,\n      en: () => <Part4En />\n    },\n    Component: LinearGraphAnnotation,\n    data: '5average_clusters_unpivoted.csv',\n  },\n  {\n    title: {\n      fr: 'Que nous apprend la topologie du réseau ?',\n      en: '5. Network topology',\n    },\n    route: {\n      fr: '05-topologie',\n      en: '05-topology',\n    },\n    contents: {\n      fr: '05_toporobotalgo.mdx',\n      en: '05_toporobotalgo.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <Part5Fr />,\n      en: () => <Part5En />\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: 'Quelles entités peuplent le réseau sémantique ?',\n      en: '6. Calculating agents',\n    },\n    route: {\n      fr: '06-agents',\n      en: '06-agents',\n    },\n    contents: {\n      fr: '06_explore_entities.mdx',\n      en: '06_explore_entities.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <Part6Fr />,\n      en: () => <Part6En />\n    },\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: {\n      fr: 'Comment sont exprimés les troubles produits par ces technologies ?',\n      en: '7. Trouble verbs',\n    },\n    route: {\n      fr: '07-verbes',\n      en: '07-verbs',\n    },\n    contents: {\n      fr: '07_IssueVERB.mdx',\n      en: '07_IssueVERB.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <Part7Fr />,\n      en: () => <Part7En />\n    },\n    data: 'verbs_bin_normalise.csv',\n    Component: IceCreamAnnotation\n  },\n  {\n    title: {\n      fr: 'Comment est exprimée la temporalité ?',\n      en: '8. Temporality',\n    },\n    route: {\n      fr: '08-temporalite',\n      en: '08-temporalite',\n    },\n    contents: {\n      fr: '08_NERdate.mdx',\n      en: '08_NERdate.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <Part8Fr />,\n      en: () => <Part8En />\n    },\n    Component: IceCreamAnnotation,\n    data: 'date_ner_tfidf_v3.csv'\n  },\n  {\n    title: {\n      fr: 'Références',\n      en: 'References',\n    },\n    route: {\n      fr: 'references',\n      en: 'references',\n    },\n    contents: {\n      fr: 'references.mdx',\n      en: 'references.mdx',\n    },\n    contentsCompiled: {\n      fr: () => <ReferencesFr />,\n      en: () => <ReferencesEn />\n    },\n    Component: PlainPage\n  },\n]\n\nexport default routes;","import React, { useRef, useEffect, useState, createRef, useReducer } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { csvParse, tsvParse } from 'd3-dsv';\nimport cx from 'classnames';\nimport { useScrollYPosition } from 'react-use-scroll-position';\n\nimport Header from '../Header';\nimport Footer from '../Footer';\nimport Loader from '../Loader';\nimport VisualizationController from '../VisualizationController';\n\n\nimport { VisualizationControlContext, PresentationContext } from '../../contexts'\n// import {useDebouncedEffect} from '../../helpers/hooks';\n\nimport routes from '../../summary'\nimport { omit } from 'lodash-es';\n\nconst buildRouteId = (_index, route, lang) => `${encodeURIComponent(route.route[lang].toLowerCase())}`;\n\nconst Sections = ({\n  routes,\n  lang,\n  setVisualizations,\n  visualizations,\n  activeSectionIndex,\n  sectionsRef\n}) => {\n  return (\n    <main>\n      {\n        routes.map((route, index) => {\n          const {\n            data,\n            contentsCompiled\n          } = route;\n          const Content = contentsCompiled[lang];\n          const onRegisterVisualization = (id, params) => {\n            const finalParams = {\n              ...params,\n              sectionIndex: index,\n              data\n            }\n            setTimeout(() => setVisualizations({ ...visualizations, [id]: finalParams }));\n          }\n          const onUnregisterVisualization = id => {\n            setVisualizations(omit(visualizations, [id]))\n          }\n          return (\n            <VisualizationControlContext.Provider\n              key={index}\n              value={{\n                onRegisterVisualization,\n                onUnregisterVisualization,\n              }}\n            >\n              <section className={cx(\"section-container\", { 'is-active': index === activeSectionIndex, 'has-visualization': data !== undefined })} ref={sectionsRef.current[index]}>\n                <Content />\n              </section>\n            </VisualizationControlContext.Provider>\n          )\n        })\n      }\n    </main>\n  )\n}\n\nconst PresentationWrapper = ({ match: { params } }) => {\n  const { lang, sectionId, visualizationIndex } = params;\n  const sectionsRef = useRef(routes.map(() => createRef()));\n\n  const [activeVisualization, setActiveVisualization] = useState(undefined);\n  const [activeVisualizationIndex, setActiveVisualizationIndex] = useState(undefined);\n  const [activeSection, setActiveSection] = useState(undefined);\n  const [activeSectionIndex, setActiveSectionIndex] = useState(undefined);\n\n  const [datasets, setDatasets] = useState({})\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  const history = useHistory();\n  const [inHeader, setInHeader] = useState(true);\n  const [inFooter, setInFooter] = useState(false);\n\n  const [visualizations, setVisualizations] = useReducer(\n    (state, newState) => ({ ...state, ...newState }),\n    {}\n  )\n\n  const scrollRef = useRef(null);\n  const scrollY = useScrollYPosition();\n\n  /**\n   * Scroll on coumponent mount\n   */\n  useEffect(() => {\n    // waiting for visualizations\n    setTimeout(() => {\n      if (sectionId !== undefined) {\n        let newSection;\n        let newSectionIndex;\n        routes.find((route, routeIndex) => {\n          const id = buildRouteId(routeIndex, route, lang);\n          if (id === sectionId) {\n            newSection = route;\n            newSectionIndex = routeIndex;\n            return true;\n          }\n          return false;\n        });\n        setActiveSection(newSection);\n        setActiveSectionIndex(newSectionIndex);\n        setInHeader(false);\n        let relevantVisualization;\n        if (visualizationIndex !== undefined) {\n          const relevantVisualizations = Object.entries(visualizations)\n            .filter(([id, params]) => params.sectionIndex === +newSectionIndex)\n            .map(t => t[1]);\n          relevantVisualization = +visualizationIndex < relevantVisualizations.length ? relevantVisualizations[+visualizationIndex] : undefined;\n          if (relevantVisualization) {\n            setActiveVisualizationIndex(+visualizationIndex);\n            setActiveVisualization(relevantVisualization);\n            const y = relevantVisualization.ref.current.getBoundingClientRect().y;\n            const bodyRect = document.body.getBoundingClientRect();\n            const visY = y - bodyRect.top;\n            window.scrollTo({\n              left: 0,\n              top: visY - window.innerHeight / 2 + 10,\n            });\n          }\n        }\n        if (!relevantVisualization) {\n          const el = sectionsRef.current[newSectionIndex];\n          if (el.current) {\n            const y = el.current.getBoundingClientRect().y;\n            const bodyRect = document.body.getBoundingClientRect();\n            const sectionY = y - bodyRect.top;\n            window.scrollTo({\n              left: 0,\n              top: sectionY,\n            })\n          }\n        }\n\n      }\n    }, 1000);\n  }, [])/* eslint react-hooks/exhaustive-deps : 0 */\n  /**\n   * Route update\n   */\n  useEffect(() => {\n    if (activeSection) {\n      const id = buildRouteId(activeSectionIndex, activeSection, lang);\n      history.push({\n        pathname: `/publication/${lang}/${id}${activeVisualizationIndex !== undefined ? '/' + activeVisualizationIndex : ''}`\n      })\n    }\n  }, [activeVisualizationIndex, activeSection, activeSectionIndex, lang])\n\n  /**\n   * loading all datasets\n   */\n  useEffect(() => {\n    routes.reduce((cur, route, routeIndex) => {\n      return cur.then((res) => new Promise((resolve, reject) => {\n\n        const { data } = route;\n        const url = data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined;\n        if (url) {\n          axios.get(url, {\n            onDownloadProgress: progressEvent => {\n              const status = progressEvent.loaded / progressEvent.total;\n              const globalFraction = routeIndex / routes.length;\n              setLoadingFraction(globalFraction + status / routes.length);\n            }\n          })\n            .then(({ data: inputData }) => {\n              setTimeout(() => {\n                let loadedData = inputData;\n                if (url.split('.').pop() === 'csv') {\n                  loadedData = csvParse(inputData);\n                } else if (url.split('.').pop() === 'tsv') {\n                  loadedData = tsvParse(inputData);\n                }\n                resolve({ ...res, [data]: loadedData })\n              })\n            })\n            .catch(reject)\n        } else return resolve(res);\n\n      }))\n    }, Promise.resolve({}))\n      .then(newDatasets => {\n        setLoadingFraction(1);\n        setDatasets(newDatasets)\n      })\n      .catch(console.log)\n  }, [])\n\n\n\n  /**\n   * Scrollytelling managmeent\n   */\n  useEffect(() => {\n    const DISPLACE_Y = window.innerHeight * .5;\n    const y = scrollY + DISPLACE_Y;\n    let newActiveRouteIndex;\n    let newActiveVisualizationIndex;\n    let newActiveRoute;\n    let newActiveVisualization;\n\n    // find active section\n    sectionsRef.current.find((ref, index) => {\n      if (ref.current) {\n        const { y: initialSectionY, height } = ref.current.getBoundingClientRect();\n        const bodyRect = document.body.getBoundingClientRect();\n        const sectionY = initialSectionY - bodyRect.top;\n        if (index === 0 && y > sectionY && inHeader) {\n          setInHeader(false);\n        } else if (index === 0 && y < sectionY && !inHeader) {\n          setInHeader(true);\n        }\n        if (index === sectionsRef.current.length - 1 && y > sectionY + height && !inFooter) {\n          setInFooter(true);\n        } else if (inFooter) {\n          setInFooter(false);\n        }\n        if (y > sectionY && y < sectionY + height) {\n          newActiveRouteIndex = index;\n          newActiveRoute = routes[index];\n          return true;\n        }\n      }\n      return false;\n    });\n    if (activeSectionIndex !== newActiveRouteIndex) {\n      setActiveSectionIndex(newActiveRouteIndex);\n      setActiveSection(newActiveRoute);\n    }\n    if (newActiveRouteIndex !== undefined) {\n      // const id = buildRouteId(newActiveRouteIndex, newRoute, lang);\n      // find active visualization\n      const relevantVisualizations = Object.entries(visualizations)\n        .filter(([id, params]) => params.sectionIndex === newActiveRouteIndex)\n        .map(t => t[1])\n      for (let index = relevantVisualizations.length - 1; index >= 0; index--) {\n        const params = relevantVisualizations[index];\n        const { ref } = params;\n        if (ref.current) {\n          const { y: initialVisY } = ref.current.getBoundingClientRect();\n          const visY = initialVisY + window.scrollY;\n          if (y > visY) {\n            newActiveVisualization = params;\n            newActiveVisualizationIndex = index;\n            break;\n          }\n        }\n      }\n      if (relevantVisualizations.length && newActiveVisualization === undefined) {\n        newActiveVisualization = relevantVisualizations[0];\n        newActiveVisualizationIndex = 0;\n      }\n      if (activeVisualizationIndex !== newActiveVisualizationIndex || activeSectionIndex !== newActiveRouteIndex) {\n        setActiveVisualization(newActiveVisualization);\n        setActiveVisualizationIndex(newActiveVisualizationIndex);\n      }\n    } else {\n      if (activeVisualization) {\n        setActiveVisualization(undefined);\n        setActiveVisualizationIndex(undefined);\n      }\n    }\n  }, [scrollY])\n\n  const preventScroll = e => {\n    e.preventScroll();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n  const handleRouteNav = index => {\n    setActiveVisualization(undefined);\n    setActiveSectionIndex(index);\n    setActiveSection(routes[index]);\n    let relevantVisualizations = Object.entries(visualizations)\n      .filter(([id, params]) => params.sectionIndex === index)\n      .map(t => t[1]);\n    setActiveVisualization(relevantVisualizations.length ? relevantVisualizations[0] : undefined);\n    setActiveVisualizationIndex(relevantVisualizations.length ? 0 : undefined);\n\n    const el = sectionsRef.current[index];\n    if (el.current) {\n      const y = el.current.getBoundingClientRect().y;\n      const bodyRect = document.body.getBoundingClientRect();\n      const sectionY = y - bodyRect.top;\n      window.scrollTo({\n        left: 0,\n        top: sectionY, // - window.innerHeight / 2,\n        behavior: 'smooth'\n      })\n    }\n  }\n  const handleScrollToFirstSection = () => handleRouteNav(0);\n  const handleBlockClick = (_id, ref) => {\n    if (ref.current) {\n      const y = ref.current.getBoundingClientRect().y;\n      const bodyRect = document.body.getBoundingClientRect();\n      const sectionY = y - bodyRect.top;\n      window.scrollTo({\n        left: 0,\n        top: sectionY - window.innerHeight / 2 + 5,\n        behavior: 'smooth'\n      })\n    }\n  }\n  const handleScrollToTop = () => {\n    setActiveVisualization(undefined);\n    setActiveVisualizationIndex(undefined);\n    setActiveSection(undefined);\n    setActiveSectionIndex(undefined);\n    window.scrollTo({\n      left: 0,\n      top: 0,\n      behavior: 'smooth'\n    })\n  }\n\n  return (\n    <PresentationContext.Provider\n      value={{\n        presentationMode: true,\n        activeVisualization,\n        onBlockClick: handleBlockClick\n      }}\n    >\n      <div ref={scrollRef} id=\"presentation-wrapper\">\n        <Header\n          lang={lang}\n          routes={routes}\n          onRouteNav={handleRouteNav}\n          isVisible={inHeader}\n          activeSectionIndex={activeSectionIndex}\n          loadingFraction={loadingFraction}\n          graphData={datasets && datasets['Graph_Critic_EN_algopress_webV2.gexf']}\n          onScrollToTop={handleScrollToTop}\n          onScrollToFirstSection={handleScrollToFirstSection}\n        />\n        <Sections\n          {\n          ...{\n            routes,\n            lang,\n            setVisualizations,\n            visualizations,\n            activeSectionIndex,\n            sectionsRef\n          }\n          }\n        />\n        <aside onScroll={preventScroll} className={cx('visualization-container', { 'is-visible': !(inHeader || inFooter) })}>\n          {\n            datasets ?\n            <VisualizationController\n              datasets={datasets}\n              activeVisualization={activeVisualization}\n              visualizations={visualizations}\n              loadingFraction={loadingFraction}\n            />\n            :\n            <Loader percentsLoaded={loadingFraction * 100} />\n          }\n        </aside>\n        <Footer />\n      </div>\n    </PresentationContext.Provider>\n  )\n}\n\nexport default PresentationWrapper;","import PresentationWrapper from './PresentationWrapper';\n\nexport default PresentationWrapper;","import React, { useState } from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\n\nimport './Edition.scss';\nimport './Presentation.scss';\n\nimport { LanguageContext } from './contexts';\n\n\nimport { repository } from '../package.json';\n\nimport DataLoader from './components/DataLoader';\nimport PresentationContainer from './components/PresentationWrapper';\n\nimport routes from './summary'\n\nconst LANGUAGES = ['fr', 'en'];\n\n\n\nfunction App() {\n\n  const history = useHistory();\n  const [lang, setLang] = useState('fr');\n\n  const renderRoute = ({\n    data,\n    contentsURL,\n    Content,\n    ThatComponent,\n    prevPage,\n    nextPage\n  }) => (\n    <DataLoader url={data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined}>\n      {\n        data => (\n          <ThatComponent\n            {\n            ...{\n              contentsURL,\n              Content,\n              prevPage,\n              nextPage,\n              data\n            }\n            }\n          />\n        )\n      }\n    </DataLoader>\n  );\n\n  const onLangChange = (ln) => {\n    if (ln !== lang) {\n      const otherLang = lang;\n      const pathOtherLang = history.location.pathname.split('/').pop();\n      const routeItem = routes.find(route => {\n        return route.route[otherLang] === pathOtherLang;\n      });\n      setLang(ln);\n      if (routeItem) {\n        history.push(`/edition/${ln}/${routeItem.route[ln]}`);\n\n      }\n    }\n\n  }\n\n  const Edition = ({match}) => {\n    return (\n      <div id=\"edition-wrapper\">\n      <nav>\n            <ul>\n              {\n                routes.map(({ title, route: inputRoute }, index) => {\n                  const route = `${match.path}/${lang}/${inputRoute[lang]}`\n                  return (\n                    <li key={index} className=\"navitem-container\">\n                      <Link to={route}>\n                        {index}. {title[lang]}\n                      </Link>\n                    </li>\n                  )\n                })\n              }\n              <li className=\"lang-toggle\">\n                <button\n                  className={lang === 'fr' ? 'is-active' : ''}\n                  onClick={() => onLangChange('fr')}\n                >fr</button>\n                <button\n                  className={lang === 'en' ? 'is-active' : ''}\n                  onClick={() => onLangChange('en')}\n                >en</button>\n              </li>\n            </ul>\n          </nav>\n          <main>\n            <Switch>\n              {\n                LANGUAGES.map(lang => {\n                  return routes.map(({\n                    // title,\n                    route: inputRoute,\n                    contents,\n                    data,\n                    Component: ThatComponent\n                  }, index) => {\n                    const route = `${match.path}/${lang}/${inputRoute[lang]}`;\n                    const prevPage = index > 0 ? routes[index - 1] : undefined;\n                    const nextPage = index < routes.length - 1 ? routes[index + 1] : undefined;\n                    const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${lang}/${contents[lang]}`))\n                    const contentsURL = `${repository}/blob/main/src/contents/${lang}/${contents[lang]}`;\n                    return (\n                      <Route key={index} path={route}>\n                        {renderRoute({ data, contentsURL, Content, ThatComponent, prevPage, nextPage })}\n                      </Route>\n                    )\n                  })\n                })\n              }\n              <Redirect to={`${match.path}/fr/${routes[0].route['fr']}`} />\n            </Switch>\n          </main>\n      </div>\n    )\n  }\n  return (\n    <LanguageContext.Provider value={{ lang, onLangChange }}>\n        <Route path=\"/edition\" component={Edition} />\n        <Route path=\"/publication/:lang/:sectionId?/:visualizationIndex?\" component={PresentationContainer} />\n        <Route exact path=\"/\">\n          <Redirect to={`/publication/fr/`} />\n        </Route>\n    </LanguageContext.Provider>\n  );\n}\n\n\nexport default function Wrapper() {\n  return (\n    <Router>\n      <App />\n    </Router>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","\nimport cx from 'classnames';\nimport React, {useContext} from 'react';\nimport { PresentationContext} from '../../contexts';\n\nconst filterColorPalette = (colorVariable, colorPalette = {}, filters = [], filtersModeAnd) => {\n  if (!filters.length) {\n    return Object.entries(colorPalette);\n  }\n  return Object.entries(colorPalette)\n  .filter(([label, color]) => {\n    const matchesAtLeastOne = filters.find(({ attribute, value }) => {\n      if (attribute === colorVariable) {\n        return value === label;\n      }\n      return false;\n    })\n    return matchesAtLeastOne;\n  })\n}\n\nconst ColorLegend = ({colorPalette = []}) => {\n  return (\n    <ul className=\"ColorLegend\">\n      {\n        colorPalette\n        .sort(([labelA], [labelB]) => {\n          if (labelA > labelB) {\n            return 1;\n          }\n          return -1;\n        })\n        .map(([label, color]) => (\n          <li>\n            <span className=\"color\" style={{background: color}} />\n            <span className=\"label\">{label}</span>\n          </li>\n        ))\n      }\n    </ul>\n  )\n}\n\nconst VisBlock = React.forwardRef(({\n  title, \n  legend, \n  id,\n  colorPalette,\n  nodeColorVariable,\n  filters,\n  filtersModeAnd,\n  colorVariable\n}, ref) => {\n  const {\n    activeVisualization,\n    onBlockClick\n  } = useContext(PresentationContext);\n  const onClick = e => {\n    if (typeof onBlockClick === 'function') {\n      onBlockClick(id, ref);\n    }\n  }\n  const colors = filterColorPalette(nodeColorVariable || colorVariable, colorPalette, filters, filtersModeAnd);\n  return (\n    <div onClick={onClick} ref={ref} id={id} className={cx(\"VisualizationBlock LinearGraphBlock\", {'is-active': activeVisualization && activeVisualization.id === id})}>\n      {\n        title ?\n        <h5 className=\"block-title\">{title}</h5>\n        : null\n      }\n      <div className={cx(\"secondary\", {'has-colors': colors && colors.length > 0})}>\n        {\n          legend ?\n          <p className=\"block-legend\">\n            {legend}\n          </p>\n          : null\n        }\n        <ColorLegend colorPalette={colors} />\n      </div>\n      \n    </div>\n  )\n})\n\nexport default VisBlock;","import VisBlock from './VisBlock';\n\nexport default VisBlock;"],"sourceRoot":""}