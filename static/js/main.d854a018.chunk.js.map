{"version":3,"sources":["components/Graph/hooks.js","components/Graph/GraphControls.js","helpers/misc.js","components/Graph/reducers.js","helpers/palettes.js","components/Graph/GraphContainer.js","components/Graph/index.js","contexts.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/DataLoader/DataLoader.js","components/DataLoader/index.js","components/GraphBlock/index.js","components/GraphBlock/GraphBlock.js","slides/GraphCritic/contents.mdx","slides/GraphCritic/index.js","App.js","reportWebVitals.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","ControlButton","children","onClick","className","FiltersEditor","onToggleFiltersModeAnd","filtersModeAnd","filtersOptions","onFiltersChange","filters","useState","isOpen","setIsOpen","undefined","newFilterAttribute","setNewFilterAttribute","newFilterOptions","options","forEach","option","push","length","map","index","attribute","newFilters","filter","f","i","onChange","e","val","target","Object","entries","id","title","ColorLegend","colorPalette","modality","color","style","background","VariablesEditor","nodeSizeVariable","nodeColorVariable","onNodeSizeVariableChange","onNodeColorVariableChange","colorOptions","sizeOptions","includes","type","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","isMinified","setIsMinified","cx","onSubmit","preventDefault","placeholder","buildGraphCode","props","Array","isArray","key","JSON","stringify","serializeValue","join","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","graph","nodeLabel","labelDensity","extents","onCameraUpdate","cameraPosition","updateTimestamp","nodeSize","useMemo","values","from","min","max","name","nodeColor","colors","count","size","iwanthue","colorSpace","seed","clustering","palette","previousNodeColor","previousNodeSize","previousLabelDensity","previousSearchString","previousFilters","nodeReducer","nodeSizeFactor","nodeSizeScale","attr","renderedNode","x","y","v","label","hidden","attributes","find","evalIfNodeMatches","createNodeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","width","height","displayedLabels","Set","forEachNode","toLowerCase","highlightNode","unhighlightNode","highlightedNodes","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","VisualizationControlContext","React","createContext","GraphAnnotation","Content","gexfData","contentsURL","gexf","parse","Graph","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","getAttribute","_node","cat","has","add","reduce","res","computeFiltersOptions","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setNodeSizeVariable","focusedVisualizationId","setFocusedVisualizationId","registeredVisualizations","setRegisteredVisualizations","keys","thatId","sizes","sizeExtent","extent","Provider","onVisualizationUpdate","ratio","onRegisterVisualization","onUnregisterVisualization","copyOfRegistered","visualizationParams","href","str","Loader","percentsLoaded","DataLoader","url","data","setData","loadingFraction","setLoadingFraction","axios","get","onDownloadProgress","progressEvent","status","loaded","total","then","setTimeout","GraphBlock","inputProps","useContext","setId","copied","setCopied","newId","genId","isFocused","stopPropagation","navigator","clipboard","writeText","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent","URL_BASIS","repository","TestVis","process","Home","routes","route","Component","GraphCritic","App","to","ThatComponent","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d854a018.chunk.js","sourcesContent":["import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nexport function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nconst FiltersEditor = ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND' : 'OR'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions.map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}\n\nconst ColorLegend = ({\n  colorPalette\n}) => (\n  <ul className=\"ColorLegend\">\n    {\n      Object.entries(colorPalette)\n      .map(([modality, color]) => (\n        <li key={modality}>\n          <span className=\"legend-color\" style={{background: color}} />\n          <span className=\"legend-modality\">{modality}</span>\n        </li>\n      ))\n    }\n  </ul>\n)\n\n\nconst VariablesEditor = ({\n  filtersOptions,\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  colorPalette,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const colorOptions = Object.entries(filtersOptions)\n  const sizeOptions = colorOptions\n  .filter(([_id, filter]) => ['integer', 'float'].includes(filter.type))\n  \n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen || nodeColorVariable !== 'default' || nodeSizeVariable !== 'default' ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || nodeColorVariable !== 'default' || nodeSizeVariable !== 'default') &&\n        <div>\n          <div>\n            <h6>Couleur des noeuds</h6>\n            <select value={nodeColorVariable || 'default'} onChange={e => onNodeColorVariableChange(e.target.value)}>\n              <option value=\"default\">\n                Défaut\n              </option>\n              {\n                colorOptions\n                .map(([id, filter]) => {\n                  return (\n                    <option key={id} value={id}>\n                      {filter.title}\n                    </option>\n                  )\n                })\n              }\n              \n            </select>\n            {\n              nodeColorVariable && nodeColorVariable !== 'default' ?\n              <ColorLegend\n                colorPalette={colorPalette}\n              />\n              : null\n            }\n          </div>\n          {\n            sizeOptions.length > 0 ?\n            <div>\n              <h6>Taille des noeuds</h6>\n              <select value={nodeSizeVariable || 'default'} onChange={e => onNodeSizeVariableChange(e.target.value)}>\n                <option value=\"default\">\n                  Défaut\n                </option>\n                {\n                  Object.entries(filtersOptions)\n                  .map(([id, filter]) => {\n                    return (\n                      <option key={id} value={id}>\n                        {filter.title}\n                      </option>\n                    )\n                  })\n                }\n                \n              </select>\n            </div>\n            : null\n          }\n          \n        </div>\n      }\n      \n    </div>\n  )\n}\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions,\n  filters = [],\n  onFiltersChange,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"graph-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"graph-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"graph-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                filtersOptions,\n                nodeSizeVariable,\n                nodeColorVariable,\n                onNodeSizeVariableChange,\n                onNodeColorVariableChange,\n                colorPalette,\n              }\n            }\n          />\n        </li>\n        <li className=\"graph-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n      </ul>\n    </>\n  );\n}","\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\nexport const buildGraphCode = props => `<GraphBlock \n  ${\n  Object.entries(props)\n  .filter(([key, val]) => !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length)))\n  .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n  .join(' \\n  ')\n}\n/>`\n\nexport const computeFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n      cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({...res, [cat.id]: cat}), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatches = filters.find(({attribute, value}) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatches;\n  } else {\n    const oneFilterMatches = filters.find(({attribute, value}) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}","import {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // Label\n    if (!nodeLabel) {\n      renderedNode.label = attr.label || key;\n    } else {\n      renderedNode.label = attr[nodeLabel.name] || '<no-label>';\n    }\n    // hidden\n    renderedNode.hidden = filters.length ? !evalIfNodeMatches(attr, filters, filtersModeAnd) : false;\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1) return SINGLE_COLOR_PALETTE;\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './GraphContainer.css';\n\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nexport default function GraphContainer({\n  graph,\n  // nodeColor,\n  // nodeSize,\n  nodeLabel,\n  labelDensity,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n}) {\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  // const previousNodeLabel = usePrevious(nodeLabel);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n    filters,\n    filtersModeAnd,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      // previousNodeLabel !== nodeLabel ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n\n  return (\n    <div className=\"GraphContainer\">\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n          {\n            ...{\n              searchString,\n              onSearchStringChange,\n              filtersModeAnd,\n              onToggleFiltersModeAnd,\n              filtersOptions,\n              filters,\n              onFiltersChange,\n              nodeSizeVariable,\n              nodeColorVariable,\n              onNodeSizeVariableChange,\n              onNodeColorVariableChange,\n              colorPalette: nodeColor && nodeColor.palette,\n            }\n          }\n        />\n      )}\n    </div>\n  );\n}","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect} from 'react';\nimport {extent} from 'd3-array';\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from '../../components/Graph';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst GraphAnnotation = ({\n  Content,\n  gexfData,\n  contentsURL,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, gexfData);\n  }, [gexfData]);\n  const filtersOptions = useMemo(() => computeFiltersOptions(graph, gexfData), [graph, gexfData]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable,\n    nodeSizeVariable,\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(nodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n  }\n  const onSearchStringChange = str => {\n    setSearchString(str);\n\n  }\n  // const currentCode = useMemo(() => {\n  //   return buildGraphCode({\n  //     ...cameraPosition,\n  //     searchString,\n  //     filtersModeAnd,\n  //     filters,\n  //     nodeSizeVariable,\n  //     nodeColorVariable,\n  //   })\n  // }, [cameraPosition, searchString, filtersModeAnd, filters, nodeSizeVariable, nodeColorVariable])\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        nodeSizeVariable,\n        nodeColorVariable,\n        filtersModeAnd,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Content />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                filtersModeAnd,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                \n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    axios.get(url, {\n      onDownloadProgress: progressEvent => {\n        const status = progressEvent.loaded / progressEvent.total;\n        setLoadingFraction(status);\n      }\n    })\n    .then(({data}) => {\n      setTimeout(() => {\n        setData(data);\n      })\n    })\n  }, [url]);\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import GraphBlock from './GraphBlock';\n\nexport default GraphBlock;","import React, {useContext, useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext} from '../../contexts'\nimport {buildGraphCode} from '../../helpers/misc';\n\nconst GraphBlock = (inputProps) => {\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => onRegisterVisualization(newId, {...inputProps}))\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildGraphCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return (\n    <div onClick={handleClick} className={cx(\"GraphBlock\", {'is-focused': isFocused})}>\n      <pre>\n        <code>\n          {buildGraphCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default GraphBlock;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.545,\"time\":92699.99999999999,\"words\":309}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"graphe-des-critiques-anglophones\"\n    }}>{`Graphe des critiques anglophones`}</h1>\n    <h2 {...{\n      \"id\": \"quest-ce-quon-regarde\"\n    }}>{`Qu’est-ce qu’on regarde`}</h2>\n    <p>{`2,991 noeuds et 54,062 arcs`}</p>\n    <p>{`Densité: ~0.0121.`}</p>\n    <p>{`Carte d’identité des attributs de noeuds disponibles :`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`label_copy`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`technical`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`company`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fiction`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`person`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`people`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`institution`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`locality`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data_inout`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`topic`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`issue`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cluster_rename`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`algo_robot`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nc term`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tag_entity`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n    </ul>\n    <p>{`Vue du réseau dans son ensemble :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} mdxType=\"GraphBlock\" />\n    <h1 {...{\n      \"id\": \"les-deux-continents\"\n    }}>{`Les deux continents`}</h1>\n    <p>{`Ci-dessous deux vues filtrées avec l’attribut algo_robot`}</p>\n    <p>{`Note technique : les labels des éléments filtrés s’affichent parfois, cela devrait être réglé dans une version ultérieur de sigma 2.`}</p>\n    <p>{`Le continent \"algo\":`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Le continent “robots” :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Ou alors en les colorant :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={\"algo_robot\"} mdxType=\"GraphBlock\" />\n    <h1 {...{\n      \"id\": \"analyse-de-la-répartition-des-autres-attributs\"\n    }}>{`Analyse de la répartition des autres attributs`}</h1>\n    <p>{`Par `}<inlineCode parentName=\"p\">{`cluster_rename`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'cluster_rename'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`topic`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'topic'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`issue`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'issue'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`technical`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'technical'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`company`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'company'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`fiction`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'fiction'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`person`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'person'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`people`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'people'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`institution`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'institution'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`locality`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'locality'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`data_inout`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'data_inout'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`nc term`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'nc term'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`tag_entity`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'tag_entity'} mdxType=\"GraphBlock\" />\n    <h2 {...{\n      \"id\": \"plus-loin-dans-lenquête\"\n    }}>{`Plus loin dans l’enquête`}</h2>\n    <p>{`Résultat d’une recherche du terme “robot” :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} searchString={'robot'} mdxType=\"GraphBlock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quest-ce-quon-regarde\",\n    level: 2,\n    title: \"Qu’est-ce qu’on regarde\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"plus-loin-dans-lenquête\",\n    level: 2,\n    title: \"Plus loin dans l’enquête\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nimport GraphAnnotation from '../../components/GraphAnnotation';\nimport DataLoader from '../../components/DataLoader';\n\nimport {repository} from '../../../package.json';\n\nimport Content from '!babel-loader!mdx-loader!./contents.mdx'\n\nconst URL_BASIS = `${repository}/blob/main/src/slides/Algopresse`;\nconst contentsURL = `${URL_BASIS}/contents.mdx`\n\n\nconst TestVis = () => {\n  \n  return (\n    <DataLoader url={`${process.env.PUBLIC_URL}/Graph Critic EN layers rotation edgesunweight V2.gexf`}>\n      {\n        gexfData => (\n          <GraphAnnotation\n            {\n              ...{\n                contentsURL,\n                Content,\n                gexfData\n              }\n            }\n          />\n        )\n      }\n    </DataLoader>\n  )\n}\n\nexport default TestVis;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport GraphCritic from './slides/GraphCritic';\n\nconst Home = () => {\n  return (\n    <div>\n      <h1>Carnet algopresse</h1>\n      <p>\n        Ce site est dédié à l'échaffaudage collectif de la publication algopresse. Il sert de point de rencontre entre l'écriture, la conception graphique et la conception interactive. Il fonctionne en tandem avec le répertoire github dont il est issu.\n      </p>\n    </div>\n  )\n}\n\nconst routes = [\n  {\n    title: 'Graphe des critiques anglophones',\n    route: '/graph-critic-en',\n    Component: () => <GraphCritic />\n  },\n  \n]\n\nexport default function App() {\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Accueil</Link>\n            </li>\n            {\n              routes.map(({title, route}, index) => (\n                <li key={index} className=\"navitem-container\">\n                  <Link to={route}>\n                    {title}\n                  </Link>\n                </li>\n              ))\n            }\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              routes.map(({route, Component: ThatComponent}, index) => (\n                <Route key={index} path={route}>\n                  <ThatComponent />\n                </Route>\n              ))\n              \n            }\n            <Route path=\"/\">\n              <Home />\n            </Route>\n            \n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}