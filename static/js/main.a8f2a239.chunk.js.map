{"version":3,"sources":["helpers/misc.js","contents/00_home.mdx","contents/01_couverture_media.mdx","contents/02_detectcritic.mdx","components/IceCreamBlock/IceCreamBlock.js","components/IceCreamBlock/index.js","contents/03_graphclusters.mdx","contents/04_timelineclusters.mdx","contents/05_toporobotalgo.mdx","contents/06_explore_entities.mdx","contents/07_IssueVERB.mdx","contents/08_NERdate.mdx","contents/dates-analysis.mdx","contents/verbs-analysis.mdx","components/DataLoader/DataLoader.js","components/DataLoader/index.js","components/Graph/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/index.js","components/ColorLegend/ColorLegend.js","components/Graph/GraphControls.js","components/Graph/reducers.js","helpers/palettes.js","components/Graph/GraphContainer.js","components/Graph/index.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/IceCream/IceCreamControls.js","components/IceCream/IceCreamContainer.js","components/IceCream/index.js","components/IceCreamAnnotation/IceCreamAnnotation.js","summary.js","components/PlainPage/PlainPage.js","components/IceCreamAnnotation/index.js","App.js","reportWebVitals.js","index.js","components/GraphBlock/index.js","components/GraphBlock/GraphBlock.js","contents/graph-critics.mdx","contexts.js","../ /^/.//.*$"],"names":["buildComponentCode","componentName","props","Object","entries","filter","val","undefined","Array","isArray","length","map","key","JSON","stringify","serializeValue","join","trim","buildGraphCode","buildIceCreamScatterPlotCode","computeFiltersOptions","type","args","computeTableOptions","computeGraphFiltersOptions","data","columns","reduce","res","options","uniq","d","find","o","isNaN","Number","isInteger","id","title","includes","min","max","graph","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","forEach","attr","getAttribute","push","Set","forEachNode","_node","cat","has","add","evalIfNodeMatches","attributes","filters","filtersModeAnd","attribute","value","readingTime","layoutProps","MDXContent","components","mdxType","parentName","isMDXComponent","tableOfContents","level","children","frontMatter","IceCreamBlock","inputProps","useContext","VisualizationControlContext","onVisualizationUpdate","focusedVisualizationId","onRegisterVisualization","onUnregisterVisualization","setFocusedVisualizationId","visualizationParams","useState","setId","copied","setCopied","useEffect","newId","genId","setTimeout","isFocused","onClick","className","cx","e","preventDefault","stopPropagation","navigator","clipboard","writeText","name","GraphBlock","console","warn","x","y","ratio","nodeColorVariable","xVariable","yVariable","sizeVariable","labelVariable","reverseX","rotateMode","colorVariable","searchString","Loader","percentsLoaded","style","width","DataLoader","url","setData","loadingFraction","setLoadingFraction","axios","get","onDownloadProgress","progressEvent","status","loaded","total","then","inputData","split","pop","csvParse","tsvParse","usePrevious","ref","useRef","current","ControlButton","FiltersEditor","onToggleFiltersModeAnd","filtersOptions","onFiltersChange","isOpen","setIsOpen","newFilterAttribute","setNewFilterAttribute","newFilterOptions","option","index","newFilters","f","i","onChange","target","VariablesEditor","variables","isNotAllDefault","v","activeOptions","getOptions","label","newVal","ColorLegend","colorPalette","modality","color","background","GraphControls","rescale","zoomIn","zoomOut","onSearchStringChange","nodeSizeVariable","onNodeSizeVariableChange","onNodeColorVariableChange","isMinified","setIsMinified","onSubmit","placeholder","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","count","iwanthue","colorSpace","seed","clustering","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","nodeLabel","labelDensity","extents","onCameraUpdate","cameraPosition","updateTimestamp","nodeSize","useMemo","values","from","nodeColor","colors","size","palette","previousNodeColor","previousNodeSize","previousLabelDensity","previousSearchString","previousFilters","nodeReducer","nodeSizeFactor","nodeSizeScale","renderedNode","hidden","createNodeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","height","displayedLabels","toLowerCase","highlightNode","unhighlightNode","highlightedNodes","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","GraphAnnotation","Content","contentsURL","gexf","parse","Graph","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setNodeSizeVariable","registeredVisualizations","setRegisteredVisualizations","keys","thatId","sizes","sizeExtent","extent","Provider","copyOfRegistered","href","str","IceCreamControls","reverseY","onToggleRotateMode","onXVariableChange","onYVariableChange","onColorVariableChange","onSizeVariableChange","onLabelVariableChange","onToggleReverseX","onToggleReverseY","IceCreamContainer","smallestDimension","WIDTH","HEIGHT","MIN_RADIUS","MAX_RADIUS","MARGIN","xRange","yRange","reverse","highlightedIndex","getX","getY","getSize","getColor","datum","transform","x1","x2","y1","y2","stroke","ticks","tick","opacity","r","fill","dimensions","IceCreamAnnotation","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatRotateMode","thatSearchString","IceCream","routes","route","contents","Component","App","renderRoute","ThatComponent","process","routesData","to","require","default","repository","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","React","createContext","webpackContext","req","webpackContextResolve","__webpack_require__","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.a8f2a239.chunk.js","sourcesContent":["import { uniq } from \"lodash\";\nimport {min, max} from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${\n  Object.entries(props)\n  .filter(([_key, val]) => {\n    return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n  })\n  .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n  .join(' \\n  ')\n  .trim()\n}\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch(type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n    \n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props =  {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n      cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({...res, [cat.id]: cat}), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatches = filters.find(({attribute, value}) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatches;\n  } else {\n    const oneFilterMatches = filters.find(({attribute, value}) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.81,\"time\":168600,\"words\":562}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"critique-de-lia-dans-la-presse\"\n    }}>{`Critique de l’IA dans la presse`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`IMAGE DE FOND CLUSTERS Graphe sémantique des thématiques des articles “critiques” full`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Projet :`}</strong>{` Algoglitch - médialab Sciences Po`}</p>\n    <p><strong parentName=\"p\">{`Auteurs :`}</strong>{` Maxime Crépel, Dominique Cardon`}</p>\n    <p><strong parentName=\"p\">{`Traitement de données :`}</strong>{` Yannis Bouachera, Salomé Do, Jean-Philippe Cointet `}</p>\n    <p><strong parentName=\"p\">{`Visualisation :`}</strong>{` Donato Ricci, Robin De Mourat `}</p>\n    <p><strong parentName=\"p\">{`Citer cette recherche :`}</strong>{` `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Site\nPapers`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"quel-est-le-discours-critique-de-lia-et-des-algorithmes-dans-la-presse-\"\n    }}>{`Quel est le discours critique de l’IA et des algorithmes dans la presse ?`}</h2>\n    <p>{`Ce site, en articulant analyses et visualisations de données, présente les résultats de travaux réalisés dans le cadre du projet Algoglitch au médialab, portant sur un corpus d’articles de presse sur le thème de l’IA et des algorithmes couvrant une période de 5 ans aux États-unis et au Royaume-Uni. `}</p>\n    <p>{`En rendant visible les débats des experts et chercheurs et en médiatisant les controverses qui émergent parfois au sein des communautés d’utilisateurs sur les effets négatifs de ces technologies, les médias contribuent à forger les représentations et à définir les formes d’acceptabilité de l’IA dans nos sociétés. Des travaux ont montré une visibilité croissante du sujet de l’IA dans la couverture médiatique ces dernières années, se concentrant principalement sur les avancées technologiques dans le domaine et sur les développements potentiels dans les secteurs du commerce et de l’industrie. Pourtant, les questions éthiques et les problèmes sociaux tels que les risques de discrimination, les biais, la vie privée sont des thématiques également présentes au sein de la sphère médiatique mais y sont sous-représentés (Brennen et al, 2018). `}</p>\n    <p>{`Notre recherche vise à analyser les discours critiques sur l’IA dans la sphère médiatique : Quelles sont les controverses produites par ces technologies qui sont médiatisées dans la presse ? De quoi est constitué le discours médiatique critique de ces technologies ? Quels types d’agents techniques et humains sont impliqués dans ces controverses ? Quels troubles sont-ils accusés de produire dans la société ? `}</p>\n    <p>{`A partir de méthode de TAL sur un large corpus de presse, nous montrons qu’il existe deux régimes dominants de critique, l’un fondé sur les injustices produites par les algorithmes et l’autre portant sur les peurs de l’autonomie de l’IA et des robots. Les résultats montrent que le thème des algorithmes et de l’IA occupe un espace de plus en plus important dans la sphère médiatique depuis 5 ans. L’espace médiatique se structure de manière thématique autour de différents types de calculateurs et domaines d’applications se divisant en deux sous-ensembles sémantiques l’un portant sur les algorithmes et l’autre sur les robots. `}</p>\n    <p>{`L’analyse comparée de ces deux espaces sémantiques dominants rend compte de deux régimes discursifs, mobilisant des agents. D’une part, les algorithmes qui façonnent nos environnements de calcul quotidiens sont associés à un discours critique portant sur les biais, les discriminations, la surveillance, la censure et les phénomènes d’amplification dans la diffusion de contenus inappropriés. D’autre part, les robots et l’IA, qui mettent en scène des entités autonomes, incarnées et indépendantes sont associés à un discours prophétique alertant sur notre capacité à contrôler ces agents simulant ou dépassant nos capacités physiques et cognitives et mettant ainsi en péril notre sécurité physique ou notre modèle économique.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Ces travaux de recherche ont été réalisés dans le cadre de la Chaire «Good In Tech : repenser l’innovation et les technologies comme moteurs d’un monde meilleur pour et par l’humain » placée sous l’égide de la Fondation du Risque en partenariat avec l’Institut Mines-Télécom et Sciences Po`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quel-est-le-discours-critique-de-lia-et-des-algorithmes-dans-la-presse-\",\n    level: 2,\n    title: \"Quel est le discours critique de l’IA et des algorithmes dans la presse ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.605,\"time\":156300,\"words\":521}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"quelle-est-la-couverture-médiatique-de-lia-\"\n    }}>{`Quelle est la couverture médiatique de l’IA ?`}</h2>\n    <p>{`Notre recherche a consisté à extraire un large corpus de 29342 d’articles de presse portant sur  l’IA et les algorithmes sur une période de 5 années, réalisée sur l’agrégateur de presse Factiva sur un ensemble de 47 sources de presse généraliste aux États unis et au Royaume Uni (27 sources pour USA et 20 sources pour UK).`}</p>\n    <p>{`Les données récoltées font apparaître une augmentation du volume d’articles portant sur l’IA - telle que définie par notre requête - sur la période d’observation. Cette augmentation atteste de la place de plus en plus importante du thème des algorithmes et de l’IA dans l’espace médiatique ces dernières années. Afin de contrôler cette augmentation au sein de notre corpus, nous avons comparé avec d’autres requêtes effectuées sur la même période et des sources identiques, pour lesquelles on attend une distribution stable. L’observation du volume d’articles extraits à partir de notre requête montre une augmentation significative de 163% entre 2015 et 2019 des publications portant sur l’IA et les algorithmes alors que les articles consacrés à l’art (-9%), la culture (+2%), l’économie (+0%) ou la technologie (+14%) restent relativement stables. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visuel Comparatif volume articles Les statistiques comparées des différentes requêtes intègrent les doublons présents dans la base Factiva`}</p>\n    </blockquote>\n    <p>{`Ce constat d’une augmentation de la visibilité croissante du thème de l’IA a été observé dans d’autres travaux à partir d’analyses statistiques portants sur différentes sources informationnelles (Perrault et al, 2019). Tout d’abord dans presse anglophone, à l’échelle mondiale, à partir d’analyses statistiques produites par le projet GDELT, s’observe une croissance du thème de l’IA et des termes associés tels que Deep learning, Machine Learning entre 2017 et 2019. Cette augmentation de la présence du terme de l’IA est aussi largement visible à partir des statistiques de requêtes effectuées sur le moteur de recherche Google aux USA et analysables via le service Google trends sur la période allant de 2015 à 2019. Enfin le même constat est également fait d’une augmentation entre 2017 et 2019 de la fréquence d’apparition des termes AI et Machine Learning dans différents corpus de documents issus par exemple d’organisations gouvernementales aux USA, au Canada, et au Royaume Uni, mais également dans les appels de fonds des entreprises américaines.`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-de-corpus\"\n    }}>{`Méthode : Extraction de corpus`}</h2>\n    <p><strong parentName=\"p\">{`Requête utilisée sur Factiva`}</strong>{` : “artificial intelligence” OR “AI” OR \"algorithm`}<em parentName=\"p\">{`“ OR \"machine learning” OR “deep learning” OR \"neural network`}</em>{`“ -\"amnesty international” -\"weiwei\" -\"air india\"\n`}<strong parentName=\"p\">{`Période d’extraction`}</strong>{` : du 01/01/2015 au 31/12/2019\n`}<strong parentName=\"p\">{`Volume d’articles extraits`}</strong>{` : 29 342 articles`}</p>\n    <p><strong parentName=\"p\">{`Sources UK (n=20)`}</strong>{` : Daily Mail, Daily Record, Daily star, Economist, Evening Standard, Evening Times, Express, Guardian, Independent, Mail online, Morning Star, Observer, Sunday Mall, Telegraph, The Mirror, The Sunday Mirror, The Sun, The Sunday Times, The Times, Which`}</p>\n    <p><strong parentName=\"p\">{`Sources USA (n=27)`}</strong>{` : ABCNEWS, Barron’s, Business Insider, CBS News, Chicago Tribune, CNN, Dailynews, Forbes, Fox News , Los Angeles Times, MSNBC News, New York Newsday, New York Post, New York Times, Newsweek, Politico, Rochester Democrat Chronicle, Slate, The Huffington Post, The Verge, Time Magazine, USA Today, Vice News, Wall Street Journal Online, Wall Street Journal, Washington Post, Washington Times`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quelle-est-la-couverture-médiatique-de-lia-\",\n    level: 2,\n    title: \"Quelle est la couverture médiatique de l’IA ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-de-corpus\",\n    level: 2,\n    title: \"Méthode : Extraction de corpus\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.7,\"time\":222000,\"words\":740}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"comment-détecter-le-discours-critique-dans-les-médias-\"\n    }}>{`Comment détecter le discours critique dans les médias ?`}</h2>\n    <p>{`En s’appuyant sur des outils d’annotations par apprentissage supervisé, un sous corpus d’articles produisant un discours critique des algorithmes et de l’IA a été constitué. À partir de l’annotation manuelle de 2000 titres d’articles de presse jugés “critiques”, nous avons construit un modèle d’apprentissage automatique en réalisant plusieurs itérations incluant des phases de contrôle des résultats afin d’optimiser le modèle de détection des articles “critiques”. Tous les titres d’articles comportant des arguments ou éléments sémantiques négatifs portant explicitement sur une forme de calculateur (algorithme, IA, robot, etc.) ont été annotés comme critiques. À l’inverse ont été annotés comme non critiques ou ignorés les titres d’articles aux énoncés neutres, positifs, ambigus ou n’évoquant pas directement un calculateur. Par exemple les titres “Robocops to replace british bobbies on the streets, police force reveals” ou “Growth of ai could boost cybercrime and security threats , report warns”  ont été annotés comme critiques, alors que “AI to create more than 7m jobs” ou “Google so advanced stores will pack your products before you’ve thought of ordering them” ont été annotés non critiques. Étant donné le travail de sourcing manuel du corpus de départ et l’usage de méthode d’annotation par apprentissage supervisé, ce corpus ne prétend pas à une quelconque exhaustivité ou représentativité. Notre démarche permet en revanche d’appréhender avec la plus large diversité possible les thèmes associés à la critique de l’IA et des algorithmes. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visuel taux sur la période et nb articles critic non critic`}</p>\n    </blockquote>\n    <p>{`A partir de ce protocole de catégorisation, un sous corpus de 2 091 articles de presse catégorisés comme critiques a été constitué. Le taux d’articles annotés comme critiques de la base initiale est de 7,1% en moyenne sur l’ensemble du corpus et présente une assez forte stabilité durant la période (écart type de +/- 2,2%). Si le volume d’articles portant sur l’IA et les algorithmes augmente significativement, le taux d’articles détectés par le modèle comme contenant un discours critique augmente simultanément durant la période. Des travaux portant sur l’analyse de la couverture médiatique du thème de l’IA en Grande Bretagne ont montré qu’une très large majorité des publications portaient sur les avancées technologiques dans le domaine et sur les potentiels développement que ces derniers permettent dans les secteurs du commerce et de l’industrie. Les questions éthiques et les problèmes sociaux tels que les risques de discrimination associés au déploiement de ces technologies sont sous représentés au sein de l’espace médiatique (Brennen et al, 2018). `}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--détection-du-discours-critique-par-apprentissage-supervisé\"\n    }}>{`Méthode : Détection du discours critique par apprentissage supervisé`}</h2>\n    <p><strong parentName=\"p\">{`Modèle utilisé pour la détection du discours critique :`}</strong>{` fastText - `}<a parentName=\"p\" {...{\n        \"href\": \"https://fasttext.cc\"\n      }}>{`https://fasttext.cc`}</a></p>\n    <p><strong parentName=\"p\">{`Corpus d’apprentissage :`}</strong>{` 2000 articles annotés manuellement via prodigy - `}<a parentName=\"p\" {...{\n        \"href\": \"https://prodi.gy\"\n      }}>{`https://prodi.gy`}</a></p>\n    <p><strong parentName=\"p\">{`Règles de codage des articles :`}</strong>{` `}</p>\n    <ul>\n      <li parentName=\"ul\">{`CRITIQUE : énoncés critiques ou réponse à une critique  (champ sémantique ou arguments critiques), évocation d’un calculateur ( algorithme, IA, robot, etc.). Exemple : « Robots put jobs at risk »,\n« Robot lawyers: how humans can fight back »`}</li>\n      <li parentName=\"ul\">{`NON CRITIQUE : énoncés neutres ou positifs, pas d’évocation d’un calculateur. Exemple : « AI to 'create more than 7m jobs’ »,\n« In the 2020s, artificial intelligence will transform the work of lawyers »`}</li>\n      <li parentName=\"ul\">{`IGNORE : énoncés ambigus, pas d’évocation d’un calculateur. Exemple : « Restaurants are now employing robots – should chefs be worried? », « Need a lawyer? There’s an algorithm for that »`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Comparaison des modèles de détection de la critique :`}</strong>{`\nAfin de s’assurer de la variété et de la précision des articles différents modèles d’annotation ont été comparés et améliorés par itérations successives et un contrôle manuel systématique des résultats produits par ces modèles ont été effectués. C’est finalement le modèle fastText qui a produit la détection la plus précise des articles critiques`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Tableau résutats comparatifs`}</p>\n    </blockquote>\n    <p><strong parentName=\"p\">{`Contrôle des résultats du modèle :`}</strong>{`\nCette approche méthodologique a permis de traiter une large base de données qui aurait été difficilement catégorisable manuellement. En revanche, les outils mobilisés de catégorisation automatique par apprentissage supervisé comportent un risque potentiel de ne pas détecter certains articles critiques dans le corpus. Pourtant, les itérations successives réduisent ce biais car les résultats obtenus à chaque itération montrent un épuisement des capacités du modèle à détecter de nouveaux articles critiques. Par ailleurs, des opérations de contrôle manuel systématique de l’ensemble des résultats produits par l‘algorithme ont permis de s’assurer que le sous corpus d’articles catégorisés comme critiques ne contenait pas de faux positifs. `}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-détecter-le-discours-critique-dans-les-médias-\",\n    level: 2,\n    title: \"Comment détecter le discours critique dans les médias ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--détection-du-discours-critique-par-apprentissage-supervisé\",\n    level: 2,\n    title: \"Méthode : Détection du discours critique par apprentissage supervisé\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React, {useContext, useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext} from '../../contexts'\nimport {buildIceCreamScatterPlotCode} from '../../helpers/misc';\n\nconst IceCreamBlock = (inputProps) => {\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => onRegisterVisualization(newId, {...inputProps}))\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildIceCreamScatterPlotCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return (\n    <div onClick={handleClick} className={cx(\"VisualizationBlock IcecreamBlock\", {'is-focused': isFocused})}>\n      <pre>\n        <code>\n          {buildIceCreamScatterPlotCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default IceCreamBlock;","import IceCreamBlock from './IceCreamBlock';\n\nexport default IceCreamBlock;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"9 min read\",\"minutes\":8.355,\"time\":501300,\"words\":1671}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst GraphBlock = makeShortcode(\"GraphBlock\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"quels-sont-les-thèmes-sur-lesquels-porte-la-critique-\"\n    }}>{`Quels sont les thèmes sur lesquels porte la critique ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Graphe sémantique des thématiques des articles “critiques” full\nRQ afficher label cluster ++ Probleme larger page `}</p>\n    </blockquote>\n    <GraphBlock x={0.4729188654794181} y={0.5156417415932983} ratio={1} mdxType=\"GraphBlock\" />\n    <p>{`Le réseau sémantique obtenu à partir des 2 091 articles annotés comme critiques repose sur une extraction de termes les plus représentés au sein des articles. Il est constitué de 2 991 termes (ou suite de termes) reliés entre eux par 54 062 liens de cooccurrences. La spatialisation  est basée sur une variante de l’algorithme de spatialisation Fruchterman Reingold, incluant le poids des cooccurrences entre les termes du réseau ; la position est optimisée par leur appartenance aux clusters détectés automatiquement par l’algorithme de Louvain. La couleur des nœuds est relative à chacun des clusters ainsi détectés et leur taille est relative à la somme des cooccurrences. `}</p>\n    <p>{`À partir des termes les plus représentés au sein de chacun des clusters on peut interpréter et nommer les thèmes qui structurent l’espace sémantique de ce corpus d’articles critiques de l’IA et des algorithmes. La cartographie est constituée de 23 clusters thématiques de tailles variées qui représentent des types de calculateurs ou des domaines d’application différents. Pour chaque article, en fonction des termes mobilisés, il lui est assigné un seul et unique cluster. De la même manière chaque terme est associé à un unique cluster même s’il peut entretenir des liens de cooccurrence avec d’autres termes appartenant à des clusters différents. Une première lecture du réseau consiste à décrire les thèmes les plus présents au sein du corpus en nombre d’articles et d’en proposer une illustration succincte à partir d’exemples de titres prototypiques qui leurs sont associés.`}</p>\n    <p>{`Le deux plus importants clusters du graphe en nombre d’articles forment deux pôles opposés. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” - Cluster AlgoWeb & AI\nRQ les noms des termes filtrés restent affichés `}</p>\n    </blockquote>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Web_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Future_of_AI\"\n    }]} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Le plus important nommé “Web Algorithms\", représentant 22% des articles du corpus critique, comporte des articles qui traitent des troubles produits par les algorithmes du web tels que par exemple les techniques de classement du newsfeed de Facebook (`}<em parentName=\"li\">{`Facebook accused of censoring conservatives, report says`}</em>{` - The Guardian - 10/05/16), les recommandations des vidéos sur Youtube (`}<em parentName=\"li\">{`YouTube, the Great Radicalizer`}</em>{` - The New York Times - 11/03/18) ou encore des moteurs de recherche comme Google (`}<em parentName=\"li\">{`Google results claim that the Holocaust didn’t happen, and company won’t change it`}</em>{` - Independent Online - 15/12/16). `}</li>\n      <li parentName=\"ul\">{`À l’extrémité opposée du graphe, on trouve le second plus important cluster nommé “Future of AI” qui représente 18% du corpus d’articles, évoquant les risques de l’émergence d’intelligences artificielles et de machines autonomes imitant ou surpassant les capacités humaines (`}<em parentName=\"li\">{`AI will create “useless class” of human, predicts bestselling historian`}</em>{` - The Guardian - 20/05/16) ou menaçant l’humanité d’extinction (`}<em parentName=\"li\">{`End of Humanity ? Artificial Intelligence could destroy us ‘within decades’ warns expert`}</em>{` - express.co.uk - 15/04/16).`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” x 3 - Cluster Jobauto / Killerrobots / Facialreco / `}</p>\n    </blockquote>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Facial_Recognition\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Job_Automation\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Killer_Robots\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Parmi les plus importants clusters on trouve trois autres thèmes largement représentés dans le corpus. `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Le cluster “Job automation” (14% des articles) contient des articles alertant sur les risques de mutation du marché de l’emploi face à la robotisation et au déploiement de l’IA dans le monde du travail (`}<em parentName=\"li\">{`Robots and AI are threatening close to a third of UK jobs, study reveals`}</em>{` - Independent Online - 24/03/17). `}</li>\n      <li parentName=\"ul\">{`Le cluster “Killer robots” (11% des articles) est constitué d’articles sur les risques du déploiement de l’IA et de machines autonomes dans le cadre de conflits armés (`}<em parentName=\"li\">{`Top scientists call for ban on killer robots to prevent apocalyptic war`}</em>{` - dailystar.co.uk - 20/08/17). `}</li>\n      <li parentName=\"ul\">{`Enfin, le cluster “Facial recognition” qui représente 10% des articles du corpus porte sur différents développements des technologies de reconnaissance faciale dans l’espace public, dans des logiciels ou sur les plateformes du Web (`}<em parentName=\"li\">{`China is now using facial recognition cameras to monitor Uighur Muslims across the country, report claims`}</em>{` - Mail Online - 15/04/19). `}</li>\n    </ul>\n    <p>{`L’ensemble de ces 5 plus grands clusters thématiques domine largement l’espace médiatique car ces derniers ne constituent pas moins de 75,6% du total des articles du corpus critique (1581 articles) et représentent sur le graphe 46,4% du réseau de termes extraits (1389 termes).`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” x 9 clusters up to 1%`}</p>\n    </blockquote>\n    <p>{`Un second ensemble, bien que très hétérogène du point de vue des thématiques déployées et de leur position au sein du graphe, est constitué de 9 clusters qui représentent respectivement entre 1% et 4% du nombre d’articles du corpus. L’ensemble de ces thèmes représente 21,6% des articles du corpus (452 articles) et 38 % des termes du graphe (1136 termes). Dans ce sous-ensemble se trouvent les clusters :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`“Voice Assistant” : `}<em parentName=\"li\">{`Google’s Nest microphone intensifies privacy concerns`}</em>{` -  `}<em parentName=\"li\">{`The Washington Post`}</em>{` - 25/02/19`}</li>\n      <li parentName=\"ul\">{`“Autonomous Cars” : `}<em parentName=\"li\">{`Self-driving cars will need to be programmed to kill their owners, academics warn, and people will have to choose who will die`}</em>{` - Independent Online - 27/10/15`}</li>\n      <li parentName=\"ul\">{`“Sex Robots” : `}<em parentName=\"li\">{`Sex robots could lead to population crisis as men opt for virtual girlfriends`}</em>{` - Mirror.co.uk - 27/01/19`}</li>\n      <li parentName=\"ul\">{`“Health`}<em parentName=\"li\">{`Algorithms” : `}<em parentName=\"em\">{`Racial bias in a medical algorithm favors white patients over sicker black patients`}</em>{` - _The Washington Post`}</em>{`  - 25/10/19`}</li>\n      <li parentName=\"ul\">{`“Deepfake” : `}<em parentName=\"li\">{`You thought fake news was bad? Deep fakes are where truth goes to die`}</em>{` -  `}<em parentName=\"li\">{`The Guardian`}</em>{`  - 2/11/18`}</li>\n      <li parentName=\"ul\">{`“Predictive Algorithms” : `}<em parentName=\"li\">{`Criminal justice software algorithm used across the US is biased against black inmates, study finds`}</em>{` - Independent Online - 27/06/16`}</li>\n      <li parentName=\"ul\">{`“Chatbot” : `}<em parentName=\"li\">{`Microsoft “deeply sorry” after AI becomes “Hitler-loving sex robot”`}</em>{` - The Telegraph Online - 26/03/16`}</li>\n      <li parentName=\"ul\">{`“Game and Education” : `}<em parentName=\"li\">{`Korean Go master quits the game because AI 'cannot be defeated`}</em>{` - CNN Wire - 28/11/19`}</li>\n      <li parentName=\"ul\">{`“Profiling Algorthms” : `}<em parentName=\"li\">{`Artificial intelligence can identify “gay faces” from a picture, study claims`}</em>{` - Independent Online - 08/09/17`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`ZOOM ou filtre cluster Carte sémantique des thématiques des articles “critiques” x 9 clusters - de 1%\nRQ probleme overlaping / et nom des clusters absents ou nom des termes absents !! `}</p>\n    </blockquote>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Autonomous_Cars\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Voice_Assistant\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Sex_Robots\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Health_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Deepfake\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Predictive_Algorithms\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Chatbot\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Game_&_Education\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Profiling_Algorthms\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Enfin, le graphe se compose de 9 autres clusters de taille très réduite, entre 0,8% et 0,1% des articles pour chaque cluster (58 articles au total). Les termes extraits de ces articles représentent pourtant 15,6% (466 termes au total) de la totalité des termes du graphe. Ces thématiques peuvent s’apparenter à des signaux faibles d’un discours critique sur les algorithmes et l’IA détectés par notre méthode d’extraction de termes mais pourtant sous représentés en volume d’articles. Ces clusters se centrent autour de thématiques très spécifiques, évoquant parfois des types de calculateurs mais le plus souvent des domaines d’application :`}</p>\n    <ul>\n      <li parentName=\"ul\">{`“Robot-Advisers” : `}<em parentName=\"li\">{`Mortgage algorithms found to have racial bias`}</em>{` - The Washington Post - 15/11/18`}</li>\n      <li parentName=\"ul\">{`“DeepDream Nightmares” : `}<em parentName=\"li\">{`The AI 'nightmare machine’: Spooky Google algorithm transforms famous sights into horror scenes`}</em>{` - Mail Online - 25/10/16`}</li>\n      <li parentName=\"ul\">{`“Deep Voice” : `}<em parentName=\"li\">{`Creepy AI can clone anyone’s voice with just one minute of audio`}</em>{` - Mail Online - 25/04/17`}</li>\n      <li parentName=\"ul\">{`“Scientific Research” : `}<em parentName=\"li\">{`Facebook shuts down chatbot experiment after AIs spontaneously develop their own language`}</em>{` - London Evening Std Online - 01/08/17`}</li>\n      <li parentName=\"ul\">{`“Market and Prices” : `}<em parentName=\"li\">{`Artificial Intelligence - Beware Algorithms That Could Collude To Unfairly Raise Prices`}</em>{` - The Wall Street Journal - 02/04/19`}</li>\n      <li parentName=\"ul\">{`“Image Search” : `}<em parentName=\"li\">{`Three black teenagers’: anger as Google image search shows police mugshots`}</em>{` - The Guardian - 10/06/16`}</li>\n      <li parentName=\"ul\">{`“Email” : `}<em parentName=\"li\">{`Google expands “creepy” Gmail AI that can automatically reply to emails for you`}</em>{` - Mail Online - 31/08/18`}</li>\n      <li parentName=\"ul\">{`“Music” : `}<em parentName=\"li\">{`Why “random” shuffle feels far from random`}</em>{` - Independent Online - 24/02/15`}</li>\n      <li parentName=\"ul\">{`“Consumer and Copyright” : `}<em parentName=\"li\">{`Apple is forced to change its App Store search algorithm after it emerged its own products were being ranked significantly higher`}</em>{` - Mail Online - 09/09/19`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Graphe sémantique des thématiques des articles “critiques” full\nRQ probleme overlaping / et nom des clusters absents ou nom des termes absents !! `}</p>\n    </blockquote>\n    <GraphBlock x={0.5} y={0.5000000000000002} ratio={1} filters={[{\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Robo-Advisers\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"DeepDream_Nightmares\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Deep_Voice\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Scientific_Research\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Market_&_Prices\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Image_Search\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Email\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Music\"\n    }, {\n      \"attribute\": \"cluster_rename\",\n      \"value\": \"Consumer_&_Copyright\"\n    }]} mdxType=\"GraphBlock\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-et-visualisation-du-graphe-de-termes\"\n    }}>{`Méthode : Extraction et visualisation du graphe de termes`}</h2>\n    <p><strong parentName=\"p\">{`Extraction de termes dans le corpus :`}</strong>{`\nL’analyse sémantique du corpus critique a été effectuée à partir du logiciel Cortext en effectuant une extraction de termes sur le texte complet des articles (titre, lead paragraph et texte de l’article) puis un nettoyage des listes de termes extraites suppression de stopwords (balises des fichiers vidéo ou élément de timecode non nettoyés dans factiva).\nL’extraction de termes a été réalisée à partir de la méthode “pigeon holes” (favorisant la spécificité des termes et leur occurrence par document) au niveau des phrases. 6000 noms incluant des monogrammes ainsi que les bigrammes et trigrammes. S’il peut paraitre étrange que certains termes assez proches ont étés conservés, par exemple toutes les variantes de facial recognition, nous avons fait le choix de conserver cette hétérogénéité afin de rendre compte de diversité des manières de définir les agents calculateurs.`}</p>\n    <p><strong parentName=\"p\">{`Production du réseau de cooccurrence et clustering :`}</strong>{`\nL’analyse du corpus a été réalisée à partir d’un graphe de 2 991 termes reliés entre eux par 54 062 liens de cooccurrences. La spatialisation produite par le logiciel Cortext - `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.cortext.net\"\n      }}>{`https://www.cortext.net`}</a>{`, puis visualisée dans le logiciel Gephi - `}<a parentName=\"p\" {...{\n        \"href\": \"https://gephi.org\"\n      }}>{`https://gephi.org`}</a>{`, est basée sur une variante de l’algorithme de spatialisation Fruchterman Reingold dont la position des nœuds est optimisée par leur appartenance aux clusters détectés automatiquement par l’algorithme de Louvain. La couleur des nœuds est relative à chacun des clusters ainsi détectés et leur taille est relative à la somme des occurrences du terme au sein du corpus. Chaque article du corpus est ainsi associé à un unique cluster d’appartenance en fonction des termes qu’il contient. Les clusters ont été interprétés qualitativement et nommés en fonction de leur cohérence thématique, qualifiable à partir des termes les plus fréquents au sein de chacun des clusters.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quels-sont-les-thèmes-sur-lesquels-porte-la-critique-\",\n    level: 2,\n    title: \"Quels sont les thèmes sur lesquels porte la critique ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-et-visualisation-du-graphe-de-termes\",\n    level: 2,\n    title: \"Méthode : Extraction et visualisation du graphe de termes\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"3 min read\",\"minutes\":2.43,\"time\":145800,\"words\":486}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"comment-évolue-lagenda-médiatique-\"\n    }}>{`Comment évolue l’agenda médiatique ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles 3 profils`}</p>\n    </blockquote>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles profils n°1 stable future of ai et web algo `}</p>\n    </blockquote>\n    <p>{`L’analyse de la distribution temporelle du nombre d’articles des dix plus importants clusters sur la période de 5 années que couvre le corpus critique laisse apparaître trois profils distincts. On observe une distribution assez stable sur la période de la répartition des articles des deux plus grands clusters structurants de la cartographie que sont les “Web Algortihms” et “Future of AI”. La distribution de ces deux plus grands clusters montre qu’il existe une production régulière d’articles critiques sur les troubles liés aux algorithmes du web et aux craintes relatives aux développements futurs de l’intelligence artificielle et des robots. Ces thèmes concentrent le plus grand nombre d’articles et forment deux pôles sur lesquels s’établit de façon récurrente un discours critique. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles profils n°1 hausse 2019 facial reco + Deepfake `}</p>\n    </blockquote>\n    <p>{`Un second profil de distribution concerne les clusters “Facial recognition” et “Deepfake” qui connaissent une hausse importante du volume d’articles publiés sur l’année 2019. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline clusters / nb articles profils n°1 hausse 2017/18 cf texte pour exemples `}</p>\n    </blockquote>\n    <p>{`Enfin le troisième profil de distribution montre une hausse du nombre d’articles qui se concentrent sur les années 2017 et 2018 et une baisse significative sur l’année 2019. Ce type de distribution concerne les clusters “Job Automation”, “Killer Robots”, “Autonomous Cars”, “Sex Robots”, “Voice Assistant”, “Predictive Algorithms”. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Timeline Termes related non critique clusters profils identique aux variation (voir si on intégre les requêtes problème mesure cf JPC ou image dans le texte comparaison `}</p>\n    </blockquote>\n    <p>{`Il est plus difficile d’interpréter ces distributions irrégulières étant donné la méthode d’annotation du corpus utilisée, mais elles semblent montrer la manière dont la presse, en focalisant son attention sur certaines technologies plutôt que d’autres, constitue un agenda médiatique sur lequel se déploie également un discours critique. Afin de vérifier cette hypothèse d’une distribution concentrée sur des périodes spécifiques, focalisant l’attention médiatique sur certaines technologies, indépendamment de la production d’un discours critique, nous avons tenté d’observer les distributions de certains termes constitutifs de ces clusters au sein du corpus d’articles étiquetés comme non-critique. Ces distributions montrent une répartition similaire à celle observée pour les clusters du corpus critique. Ainsi les “deepkake” connaissent une fréquence d’apparition croissante au sein des articles non critiques entre 2018 et 2019. La même distribution est observable également pour le terme “facial recognition” qui croît progressivement jusqu’en 2019. L’ensemble des termes associés aux robots sexuels présents dans le corpus étiqueté comme non critique connaissent leur plus forte fréquence sur les années 2017 et 2018 avant de diminuer en 2019, on observe également le même phénomène de concentration de la fréquence d’apparition des termes relatifs aux voitures autonomes sur les années 2017 et 2018, ou encore pour les termes relatifs aux assistants vocaux dont la plus forte distribution se concentre sur la même période.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-évolue-lagenda-médiatique-\",\n    level: 2,\n    title: \"Comment évolue l’agenda médiatique ?\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.885,\"time\":353099.99999999994,\"words\":1177}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst GraphBlock = makeShortcode(\"GraphBlock\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"quest-ce-que-la-topologie-du-réseau-nous-apprend-de-la-critique-médiatique-\"\n    }}>{`Qu’est-ce que la topologie du réseau nous apprend de la critique médiatique ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR full algo robot intermed\nRQ probeme couleur choisies dans sigma ou gexf ? + Afficher label cluster (ou en surcouche plus les termes `}</p>\n    </blockquote>\n    <GraphBlock x={0.5} y={0.5000000000000002} ratio={1} nodeColorVariable={'algo_robot_intermed'} mdxType=\"GraphBlock\" />\n    <p>{`La dispersion des clusters dans l’espace topologique laisse apparaître une opposition entre deux principaux types de calculateurs. On observe ainsi un déplacement entre la partie droite du graphe qui comporte des articles mettant en scène des techniques de calcul algorithmique incorporées dans l’environnement de l’utilisateur pour guider, orienter ou calculer ses comportements, vers la partie gauche qui comporte des articles qui se caractérisent par la personnification de l’IA dans une entité incarnée et autonome à l’égard des humains.  `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR droite web algo et al\nRQ : estce qu’on zoom ou pas pour eviter de perdre la lsibilité de la topologie ? `}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot_intermed'} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`La première zone à droite concerne exclusivement des algorithmes, qu’ils s’agissent des algorithmes du Web comme le fil d’actualité de Facebook, la section trending topic de Twitter, les algorithmes de recherche d’images et de sites web de Google. La plupart de ces agents algorithmiques constituent les couches techniques de services largement déployés dans nos environnements numériques quotidiens. D’autres représentent des technologies plus émergentes qui font l’objet de développements et d’expérimentations plus localisées et plus régulées tels les algorithmes de police ou de justice prédictive, de détection des images dans les systèmes de reconnaissance faciale ou les deepfakes.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR gauche AI robots\nRQ : idem `}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot_intermed'} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Dans la partie la plus à gauche, à l’opposé du graphe, les clusters se concentrent autour d’agents calculateurs qui sont davantage incarnés sous forme de machines ou de robots. Les entités qui peuplent cette zone sont personnifiées dans des dispositifs physiques séparés de nos équipements numériques habituels que sont nos ordinateurs et nos smartphones. Ces dispositifs, en plus d’être incarnés physiquement sont équipés d’une capacité d’agir autonome via de systèmes de calcul basés sur l’IA. En simulant à la fois le corps et les capacités cognitives des humains ils sont en mesure de produire certaines actions sans intervention humaine dans différents domaines telles que le transport avec les voitures autonomes, la défense avec les “robots tueurs” et les drones, le travail avec l’automatisation des tâches professionnelles ou encore les relations physiques avec les robots sexuels.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR centre zone grise ??? mettre en gris les zone intérmédiaire ??? ou possibilité d’annotation\nRQ idem `}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"algo_robot_intermed\",\n      \"value\": \"Intermed\"\n    }]} nodeColorVariable={'algo_robot_intermed'} mdxType=\"GraphBlock\" />\n    <ul>\n      <li parentName=\"ul\">{`Entre ces deux pôles existe une zone intermédiaire plus difficilement identifiable, constituée de dispositifs à mi-chemin entre les machines autonomes et les algorithmes de nos environnements numériques quotidiens. Parmi les agents calculateurs présents dans cet espace on retrouve par exemple les assistants vocaux pouvant être embarqués dans nos smartphone ou dans des dispositifs du type enceinte connectées, les chatbots du Web, les robo-advisors qui sont les algorithmes effectuant des opérations dans le domaine de la finance ou encore des technologies de deep learning comme le dispositif Deep Dream de Google. Ces technologies bien qu’assez accessibles au grand public sont souvent encore émergentes. Elles sont en capacité de gérer un certain nombre de tâches parfois basiques de manière autonome mais ne sont pas toujours incarnées dans des dispositifs physiques, elles sont encore le plus souvent implémentées et accessibles via nos ordinateurs et smartphones.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Clusters Name BICOLOR full\nProbleme couleur affichage label idem et taille du graphe zoom si on enleve les slides à droite coordonnées pas bonnes `}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} nodeColorVariable={'algo_robot'} mdxType=\"GraphBlock\" />\n    <p>{`La tendance du graphe à séparer des dispositifs de calcul aux propriétés différenciées, nous amène à explorer ces dimensions de manière plus approfondie. Afin de réaliser une analyse comparative entre les deux pôles qui se dégagent de l’analyse topologique, le choix a été fait de découper le réseau en deux sous-ensembles comparables en volume d’articles, de clusters et de termes. Ainsi, l’espace intitulé “robots” compte 52% des articles du corpus, 9 clusters principaux (de taille supérieure à 1%) et 1790 termes. L’espace intitulé “algorithmes” représente quant à lui 48% articles, 8 clusters principaux et 1201 termes. Par une approche comparative, ce découpage en deux sous-ensembles équivalents permet d’explorer les différents attributs qui peuplent ces deux espaces sémantiques.`}</p>\n    <p>{`Les méthodes de traitement automatique du langage permettent une analyse des éléments des discours critiques, à partir des termes saillants extraits au sein des articles, peuplant ces deux espaces sémantiques. Pour mettre en évidence les caractéristiques de ces deux espaces de critique, nous avons entrepris d’identifier systématiquement la manière dont sont désignées les entités techniques, la société qui les abrite et la façon dont les premiers ont des effets sur la seconde. Tous ces discours critiques cherchent à qualifier la manière dont des Agents produisent des Victimes en exerçant un type particulier d’opération ; ces dernières sont constitutives d’un ensemble de troubles révélant autant de nouveaux défis, ou d’enjeux, produits par le déploiement des techniques d’IA dans nos sociétés (Cardon, Crépel, 2019).`}</p>\n    <p>{`Afin de différencier ces entités au sein du graphe, la plupart des termes, ne souffrants pas trop d’ambiguïté (66% des termes du graphe), ont été annotés manuellement en dix catégories distinctes. Parmi ces catégories, notre analyse consiste à comparer trois d’entre elles qui apparaissent particulièrement pertinentes pour différencier les deux espaces. La catégorie “Technical” renvoie à ce que nous avons désigné comme agents calculateurs, elle concerne toutes les termes relatifs aux entités techniques tels que les algorithmes, les machines, les fonctionnalités ou services techniques, les terminaux mais également les produits ou services issus le plus souvent de startup qui sont parfois difficiles à différencier de l’entité économique qui les a produit. La seconde catégorie relative aux agents humains, nommée “People”, concerne tous les termes désignant des personnes ou groupes de personnes non nommées (à la différence des catégories “Person” pour les noms propres et “Institutions” pour les groupes ou structures ayant une existence juridique). Enfin, la troisième catégorie que nous présenterons par la suite, nommée “Issues”, permet d’identifier les termes qui désignent des enjeux, des difficultés ou des problèmes extraits au sein des articles. `}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--division-du-graphe-et-du-corpus-selon-la-topologie\"\n    }}>{`Méthode : Division du graphe et du corpus selon la topologie`}</h2>\n    <p>{`Pour faciliter une analyse comparative entre l’espace sémantique interprété comme lié aux “robots” et l’espace lié aux “algorithmes” chaque cluster a été associé à l’une ou l’autre de ces catégories. Les deux sous-ensembles sont comparables en volume d’articles, de clusters et de termes. `}</p>\n    <p>{`L’espace intitulé “robots” compte : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`9 clusters principaux (de taille supérieure à 1% du corpus d’articles)`}</li>\n      <li parentName=\"ul\">{`52% des articles du corpus (chaque article étant associé à un unique cluster)`}</li>\n      <li parentName=\"ul\">{`1790 termes au sein du réseau (chaque terme étant associé à un unique cluster). `}</li>\n    </ul>\n    <p>{`L’espace intitulé “algorithmes” compte `}</p>\n    <ul>\n      <li parentName=\"ul\">{`8 clusters principaux (de taille supérieure à 1% du corpus d’articles)`}</li>\n      <li parentName=\"ul\">{`48% articles (chaque article étant associé à un unique cluster)`}</li>\n      <li parentName=\"ul\">{`1201 termes au sein du réseau (chaque terme étant associé à un unique cluster).`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quest-ce-que-la-topologie-du-réseau-nous-apprend-de-la-critique-médiatique-\",\n    level: 2,\n    title: \"Qu’est-ce que la topologie du réseau nous apprend de la critique médiatique ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--division-du-graphe-et-du-corpus-selon-la-topologie\",\n    level: 2,\n    title: \"Méthode : Division du graphe et du corpus selon la topologie\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"8 min read\",\"minutes\":7.42,\"time\":445200,\"words\":1484}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n      console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n      return <div {...props}/>\n    };\nconst GraphBlock = makeShortcode(\"GraphBlock\");\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"qui-sont-les-agents-calculateurs-\"\n    }}>{`Qui sont les agents calculateurs ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Technical Tag BICOLOR full\nprobleme affichage label des noeuds filtrés + couleurs idem et zoom ++ je ne sais pas si interessant de conserver la topologie 2 block coloré facon tagcloud ou liste serait surement plus efficace : ideal effet de retriage du graphe en grappe ou liste (enore plus vrai pour people et issue car peu peuplé`}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }]} nodeColorVariable={'algo_robot'} mdxType=\"GraphBlock\" />\n    <p>{`La décomposition des qualifications des Agents de l’IA fait apparaître des entités techniques aux propriétés très différentes. Ce qui caractérise les Agents de la zone “robots” de notre cartographie est le très haut degré d’intelligence et d’autonomie des IA, ainsi que leur capacité à être incarné sous la forme de machines. Le terme de robot domine cet espace et que ce soit pour la conduite automobile, le sexe, la guerre ou la production industrielle, ces Agents sont dotés de capacité d’initiatives autonomes. Les caractéristiques qui leurs sont données contribuent à détacher leur capacité de choisir, de décider et d’agir du système socio-technique qui les a produits ou de l’environnement dans lequel ils se déploient. En revanche, les agents de la zone “algorithmes” de notre cartographie n’ont pas cette autonomie et sont plutôt définies comme des parties ou des éléments de systèmes sociotechniques distribués dans des environnements numériques.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Technical Tag BICOLOR gauche\nRQ : eviter le zoom pour evoter de perdre la topologie d’ensemble mais lecture difficile`}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} nodeColorVariable={'algo_robot'} filtersModeAnd={true} mdxType=\"GraphBlock\" />\n    <p>{`Si l’on compare les termes les plus fréquents catégorisés en tant qu’entité technique, on observe que dans l’espace “Robots” les calculateurs renvoient le plus souvent à des dispositifs incarnés tels que les robots, les machines, les ordinateurs, les voitures, les armes, les drones, les weapons, les dolls. D’autres entités techniques se distinguent car elles renvoient à une définition très abstraite et générique des calculateurs qui sont désignés en tant que system, artificial intelligence ou encore comme automation ou model. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Technical Tag BICOLOR droite\nRQ : idem eviter le zoom pour evoter de perdre la topologie d’ensemble mais lecture difficile`}</p>\n    </blockquote>\n    <GraphBlock x={0.5105609811492162} y={0.4526993627339648} ratio={1} filters={[{\n      \"attribute\": \"tag_entity\",\n      \"value\": \"Technical\"\n    }, {\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} nodeColorVariable={'algo_robot'} filtersModeAnd={true} mdxType=\"GraphBlock\" />\n    <p>{`Dans l’espace sémantique intitulé “Algorithmes” les entités techniques, même sous des dénominations abstraites, ne constituent pas des objets autonomes (algorithm, devices, program, bot ou phone). La majorité des termes se distingue par le fait qu’elle relève de technologies beaucoup plus spécifiques, renvoyant le plus souvent à des dispositifs technologiques précis tels que facial recognition, deepfake, social network, chatbot, criminal justice algortihm et de manière encore plus spécifique à des fonctionnalités de certains services embarqués dans nos terminaux mobiles ou sur le web, parfois associés à des marques, tels que Siri, Search engine, Trending topics, Google assistant, Iphone, recommendation algorithm, Facebook messenger, Google images, image search. Ces qualifications n’isolent pas les IA mais les incorporent dans un environnement sociotechnique dans lequel le calcul joue un rôle de plus en plus intense pour assister, trouver de l’information, guider ou prévenir un comportement. `}</p>\n    <h2 {...{\n      \"id\": \"qui-sont-les-agents-humains-\"\n    }}>{`Qui sont les agents humains ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation People Tag BICOLOR full`}</p>\n    </blockquote>\n    <p>{`La catégorie “People” à partir de laquelle ont été annotés dans les termes désignant des agents humains, personnes ou groupes de personnes non nommées ou n’ayant pas d’existence institutionnelle, permet d’observer la manière dont est composé le monde social dans lequel les IA ont été introduites. Elle fait apparaître une autre différence entre les deux espaces sémantiques. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation People Tag BICOLOR gauche`}</p>\n    </blockquote>\n    <p>{`Du côté de l’espace “Robots” on observe parmi les termes les plus fréquents une forte présence de références à l’humanité, telles que humans, humankind, human civilisation, human driver, human supervisor. À la lecture du contenu de certains articles associés à cet espace, on constate que face aux agents calculateurs incarnés par des machines, tels que décrits précédemment, la notion d’humanité est en fait une expression très générique de la société humaine tout entière sur laquelle ces agents font peser une menace. D’autres termes assez génériques sont également présents dans cet espace mais relèvent d’une définition plus centrée sur des domaines dans lesquels les technologies robotiques sont amenées à se déployer, tels que la finance, le marché du travail, la défense et les transports. On retrouve ainsi des termes tels que workers, customers, employees, drivers, retailers, soldiers, passengers, brokers, traders, farmers. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation People Tag BICOLOR droite`}</p>\n    </blockquote>\n    <p>{`L’espace associé aux “Algorithmes” est quant à lui peuplé de termes beaucoup moins génériques que dans l’espace sémantique des “Robots”. Les agents humains sont ici désignés de manière beaucoup plus précise et font référence à des personnes mieux identifiées. On retrouve ainsi, parmi les termes fréquents, des entités faisant référence aux plateformes numériques users, accounts, Facebook users, Youtube users. Les termes qui désignent ces agents permettent dans la grande majorité de les qualifier en fonction de propriétés comme l’âge (children, child, kids, parents), le genre (women, men) l’appartenance éthnique (black people, black patients, african-americans), l’orientation politique (white supremacists, black defendants, illuminati) ou sexuelle (gays, lesbian, trans people).`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Full Tag BICOLOR /// ou liste reacpitulative cf papier LDK 2021 `}</p>\n    </blockquote>\n    <p>{`L’analyse topologique des clusters faisant apparaître une opposition entre les machines ou intelligences autonomes et les environnements numériques algorithmiques, est renforcée par une analyse plus spécifique des termes les plus fréquents qui peuplent ces deux espaces. En effet, on observe dans l’espace sémantique intitulé “Robots” une forme d’abstraction et d’incarnation des agents techniques et une généricité dans la manière de désigner les agents humains qui apparaissent comme les victimes des troubles potentiels tels qu’ils sont dénoncés dans les articles critiques. À l’inverse, dans l’espace lié aux “Algorithmes”, les agents techniques sont davantage spécifiés et renvoient le plus souvent à des services ou des fonctionnalités techniques très précises qui sont mis en cause dans les articles. Les agents humains associés à ces entités techniques algorithmiques ne réfèrent pas à des catégories génériques comme l’humanité toute entière mais sont qualifiés par une variété d’attributs qui permettent de les identifier de manière beaucoup plus précise.  `}</p>\n    <h2 {...{\n      \"id\": \"quels-sont-les-troubles-produits-par-ces-agents-calculateurs-\"\n    }}>{`Quels sont les troubles produits par ces agents calculateurs ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Issue Tag BICOLOR full`}</p>\n    </blockquote>\n    <p>{`La catégorie intitulée “Issues” permet une lecture comparée des termes relatifs aux troubles et aux enjeux qui sont associés aux agents techniques sur lesquels porte la critique. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Issue Tag BICOLOR gauche`}</p>\n    </blockquote>\n    <p>{`Du côté de l’espace sémantique “Robots”, c’est l’affrontement entre les humains et les IA qui est constamment appelé comme enjeu. On observe la présence de termes tels que attack, safety, arms race, Cold war, human extinction, extinction, natural disasters, AI-powered horror, mass extinction, physical damage, qui renvoient le plus souvent au registre de la guerre ou de destruction à l’échelle planétaire, faisant peser un risque existentiel sur l’avenir de l’humanité. Ces menaces font émerger des enjeux de contrôle de ces technologies autonomes, tels que ban, petition, human oversight, lack of accountability, superintelligence control problem, control problem. D’autres termes relèvent de troubles assez visibles dans cet espace sémantique associés au remplacement, au dépassement et à une perte de contrôle de l’homme par les machines, notamment dans le domaine de l’économie, avec des termes tels que job losses, surge pricing, pay gap.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Issue Tag BICOLOR droite`}</p>\n    </blockquote>\n    <p>{`Les termes relatifs aux troubles et enjeux constitutifs du sous-ensemble nommé “Algorithmes” laissent apparaître d’autres formes de discours de critique davantage imprégnées de références juridiques et légales. En effet, on trouve dans cette partie du graphe parmi les termes fréquents un champ sémantique constitué de références juridiques tels que crime, law enforcement, Human Rights, lawsuit, Civil Liberties, prejudice, fraud, public interest. Les troubles produits par les agents techniques dénoncés au sein des articles associés à cet espace concernent les discriminations (bias, biases, discrimination, antisemitic, race or gender, fair use, risk score, liberal bias), les enjeux de privacy (privacy, surveillance, Big Brother, privacy issues), les difficultés de filtrage ou d’exposition à de contenus innapropriés (violence, inappropriate content, nudity, age restriction, violent crime) et frauduleux (fake news, misinformaton, conspiracy theories, revenge porn, filter bubble), ou encore de censure et de liberté d’expression (free expression)`}</p>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--tagging-des-entités-du-graphe\"\n    }}>{`Méthode : Tagging des entités du graphe`}</h2>\n    <p>{`Pour chacun des 2991 termes du réseau une catégorisation manuelle a été réalisée à pour différencier le type d’entités, de sorte que 66% des termes du réseaux ont été catégorisés à partir de 10 catégories distinctes : `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Technical (15%) : Calculateur, Machine, Fonctionnalité, Devices, Service Technique, Dispositifs techniques de startup difficiles à différencier de l’entité économique`}</li>\n      <li parentName=\"ul\">{`Company (5%) : Entreprises, Start-up, Domaine d’entreprise`}</li>\n      <li parentName=\"ul\">{`Fiction (1%): personnages, films, jeux vidéo`}</li>\n      <li parentName=\"ul\">{`Person (6%) : Personnalités politique, médiatique, recherche, noms propres`}</li>\n      <li parentName=\"ul\">{`People (8%) :  personne ou groupe de personnes non nommée`}</li>\n      <li parentName=\"ul\">{`Institution (4%) : Agence gouvernementale, ONG, Association, Université, Textes juridiques`}</li>\n      <li parentName=\"ul\">{`Locality (1%) : Lieux`}</li>\n      <li parentName=\"ul\">{`Data_inout (10%) : Données, traces\t`}</li>\n      <li parentName=\"ul\">{`Topic (10%) : Domaine, Thèmes`}</li>\n      <li parentName=\"ul\">{`Issues (7%) :  Enjeux et problèmes`}</li>\n    </ul>\n    <p>{`Une 11ème catégorie rassemble les termes difficilement interprétables et non catégorisables`}</p>\n    <ul>\n      <li parentName=\"ul\">{`NC terms (34%) : Termes non classés car trop ambigus ou non pertinents `}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"qui-sont-les-agents-calculateurs-\",\n    level: 2,\n    title: \"Qui sont les agents calculateurs ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"qui-sont-les-agents-humains-\",\n    level: 2,\n    title: \"Qui sont les agents humains ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"quels-sont-les-troubles-produits-par-ces-agents-calculateurs-\",\n    level: 2,\n    title: \"Quels sont les troubles produits par ces agents calculateurs ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--tagging-des-entités-du-graphe\",\n    level: 2,\n    title: \"Méthode : Tagging des entités du graphe\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.405,\"time\":204299.99999999997,\"words\":681}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"comment-sont-exprimés-les-verbes-de-troubles-\"\n    }}>{`Comment sont exprimés les verbes de troubles ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles full`}</p>\n    </blockquote>\n    <p>{`Une autre manière de poursuivre cette analyse comparative des troubles et formes d’agentivité associés aux calculateurs consiste en l’exploration d’une autre entité sémantique au sein du corpus d’articles que sont les verbes mais absente du réseau du fait de la procédure d’extraction. Après avoir réalisé une extraction d’une liste de verbes interprétables comme étant potentiellement de bons candidats aux troubles produits par les dispositifs techniques, nous avons calculé et comparé leur score tf-idf  au sein des deux sous-ensemble d’articles constitutifs du réseau.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles robot`}</p>\n    </blockquote>\n    <p>{`Les verbes dont les scores tf-idf sont les plus importants dans les articles qui composent l’espace sémantique “Robots” viennent conforter l’analyse des troubles effectuée à partir des termes catégorisés comme “Issues” au sein du graphe. En effet, on observe une plus forte représentation de verbes exprimant une menace de la part des machines et intelligences autonomes relevant d’un discours prophétique, voire apocalyptique. Parmi les verbes sélectionnés comme bons candidats à l’expression de troubles ayant les plus importants scores, on trouve des verbes qui expriment des notions de destruction (doom, destroy, eradicate, kill, eliminate) et de domination des machines sur l’homme (enslave, dominate), mais également de  dépassement ou de remplacement des hommes par les ces agents techniques (overtake, surpass, replace, defeat). D’autres verbes davantage représentés dans le sous ensemble “robots” renvoient à des notions de transformation et de changement (reshape, transform, disrupt) ou aux capacités de ces agents techniques à imiter ou simuler les comportements humains (ressemble, simulate, reproduce, mimic).`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles algos`}</p>\n    </blockquote>\n    <p>{`Dans le sous-ensemble d’articles associés aux “Algorithmes” on retrouve également des verbes qui viennent conforter les analyses précédentes réalisées à partir de la catégories “Issues”. En effet, les verbes qui présentent les plus hauts scores de tf-idf renvoient aux questions de filtrage et de censure de l’information (filter, delete, supress, censor), aux problèmes de surveillance et de privacy (profile, suspect, spy, target, track), à la dénoncitation des formes de discrimination (bias, discriminate) ou encore aux phénomènes de propagation et d’amplification de contenus frauduleux (promote, amplify, spread). `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles full`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-des-verbes-de-troubles-et-calcul-des-tf-idf-sur-le-corpus\"\n    }}>{`Méthode : Extraction des verbes de troubles et calcul des TF-IDF sur le corpus`}</h2>\n    <p>{`L’analyse des verbes de troubles a été réalisée, à partir du logiciel Cortext, en effectuant une première extraction de 1000 verbes sur le texte complet des articles critiques du corpus en employant la méthode “pigeon holes” via le logiciel Cortext (identique à la méthode d’extraction des termes du graphe).\nLa liste de verbes ainsi produite a d’abord été manuellement annotée afin d’extraire une sous liste de 431 verbes pouvant être interprétés comme des problèmes, des difficultés ou des troubles. En effectuant plusieurs itérations de visualisation matricielle via l’outil clustergrammer `}<a parentName=\"p\" {...{\n        \"href\": \"https://maayanlab.cloud/clustergrammer/\"\n      }}>{`https://maayanlab.cloud/clustergrammer/`}</a>{` des scores de tf-idf pour chacun des verbes sur l’ensemble des articles associés aux 17 clusters principaux (supérieur à 1% d’articles du corpus) via l’outil clustergrammer une liste plus restreinte de 66 verbes a été sélectionnée présentant une plus forte saillance dans la matrice et étant plus explicitement interprétables comme troubles.\nLe calcul final du score tf-idf s’effectue en produisant une matrice du nombre d’occurrences brutes des verbes (en ligne) par documents dans chacun des 23 clusters (en colonne). On calcule la somme des occurrences suivant les deux grands sous ensembles définis en suivant la topologie sur l’axe de l’incarnation, produisant deux ensembles comparables en volume d’articles (Robots : 52% articles - 9 clusters > 1% - 1790 termes ; Algorithmes : 48% articles - 8 clusters > 1% - 1201 termes).\nLa matrice finale compte 66 verbes en ligne et deux colonnes correspondant aux deux sous-ensembles algorithmes et robots. Le calcul du score tf-idf est obtenu à partir du module TfidfTransformer `}<a parentName=\"p\" {...{\n        \"href\": \"https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html\"\n      }}>{`https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html`}</a>{` en conservant les options par défaut (intégrant la fonction smooth_idf=True, la constante “1” est ajoutée au numérateur et au dénominateur de l’idf comme si l’on voyait un document supplémentaire contenant chaque terme de la collection exactement une fois, ce qui évite les divisions par zéro : `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`idf(t) = log `}{`[ (1 + n) / (1 + df(t)) ]`}{` + 1.`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-sont-exprimés-les-verbes-de-troubles-\",\n    level: 2,\n    title: \"Comment sont exprimés les verbes de troubles ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-des-verbes-de-troubles-et-calcul-des-tf-idf-sur-le-corpus\",\n    level: 2,\n    title: \"Méthode : Extraction des verbes de troubles et calcul des TF-IDF sur le corpus\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"6 min read\",\"minutes\":5.71,\"time\":342600,\"words\":1142}\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h2 {...{\n      \"id\": \"comment-est-exprimée-la-temporalité-\"\n    }}>{`Comment est exprimée la temporalité ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité full`}</p>\n    </blockquote>\n    <p>{`L’opposition entre les deux espaces sémantiques semble donc dessiner deux régimes d’énonciation distincts qui cohabitent au sein de l’espace médiatique. Le premier exprime les peurs face à des technologies autonomes focalisant la critique sur leur capacité à simuler, dépasser, remplacer ou exterminer à terme l’espèce humaine et représentant une menace qu’il serait nécessaire de contrôler. L’autre régime est davantage ancré dans le répertoire habituel de la critique sociale, mobilisant le répertoire du droit et des  injustices (censure, discrimination, surveillance) envers des populations spécifiques ou relève d’enjeux de régulation quant à la manière de gérer la diffusion de l’information (exposition, amplification).`}</p>\n    <p>{`Cette distinction entre l’énonciation de la peur et de la critique s’exprime également à travers les marqueurs temporels. L’espace intitulé “Robots” évoque majoritairement un ensemble de technologies encore en cours de développement au sein de laboratoires de recherche ou de start-ups qui les destinent à des applications dans des domaines très spécialisés, le monde du travail “job automation”, la défense pour les “Killer Robots”, les marchés financiers pour les “Robo-advisors”, la sexualité “Sex Robots”. On trouve aussi dans cette partie du graphe les clusters “Scientific research” et ”Future of AI” qui portent tous deux sur des recherches plus fondamentales en lien avec les déploiements les plus récents en intelligence artificielle et en robotisation. L’autre partie du graphe intitulée “Algorithmes” se concentre davantage sur des systèmes techniques largement déployés dans l’environnement technologique quotidien et adoptées par les utilisateurs, tels que les algorithmes du Web, l’automatisation des emails, les algorithmes de moteurs de recherche d’image ou encore la synthèse vocale. Dans cet espace sémantique d’autres technologies commencent à se diffuser auprès du grand public tels que les assistants vocaux, les “Deepfake” via des applications mobiles telles que Reface ou Faceswap. Enfin d’autres dispositifs ne sont pas encore démocratisés mais font pour la plupart l’objet d’expérimentation plus ou moins importantes par des institutions et des sociétés tels que la reconnaissance faciale, les algorithmes prédictifs dans le domaine de la police et de la justice par exemple qui connaissent actuellement des développement locaux, à l’échelle d’une institution ou d’un territoire, tout en faisant l’objet d’une attention particulière en terme de régulation et quant aux risques qu’ils font peser sur la société dans leur développement. `}</p>\n    <p>{`Mais plus que cette analyse de l’adoption plus ou moins avancée de ces différentes familles de technologies de calcul, il est intéressant de comprendre la manière dont au sein du discours critique est exprimée la temporalité. Des travaux portant sur les formes argumentatives en sociologie des controverses nous invitent à nous intéresser à la manière dont sont déployées les échelles temporelles et les régimes d’énonciation du futur qui leur sont associés (Chateauraynaud, 2013, 2014 ; Chateauraynaud, Debaz, 2019). Les épreuves de cohérence et de crédibilité dans les controverses nécessitent de définir des échelles temporelles qui vont venir modifier les jugements mais aussi les logiques d’action qui y vont y être associées. C’est en mobilisant des marqueurs temporels qui articulent des références au passé et une projection à plus ou moins long terme dans le temps que les acteurs sont en mesure de constituer des prises sur le futur qui vont venir moduler le type d’action à entreprendre et l’urgence à agir pour faire face à une situation. `}</p>\n    <p>{`A partir de notre corpus, nous avons extrait 500 entités nommées qui sont des marqueurs temporels présents au sein des articles et de la même manière que pour les verbes, nous avons calculé de manière comparative leur score tf-idf sur l’ensemble des articles constituant les deux sous-ensembles intitulés “Robots” et “Algorithmes”. La liste des entités extraite a été filtrer manuellement afin de ne conserver que les marqueurs temporels interprétables en dehors de leur contexte d’énonciation . L’analyse comparative de la distribution entre les deux sous-ensembles des scores tf-idf des marqueurs temporels laisse apparaître deux régimes distincts de référence au temps au sein des articles. `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité robot`}</p>\n    </blockquote>\n    <p>{`Du côté des articles associés au sous-ensemble “Robots” les marqueurs de temps relèvent d’une temporalité sur le long terme, qu’ils fassent référence au passé ou au futur. Ainsi la grande majorité des marqueurs se structurent autour d’expressions sur le futur qui mobilisent la figure the next associés à des temporalités qui se comptent souvent en dizaines d’années ou centaines d’années (the next 10 years, the next 30 years, the next 100 years, the next 1,000 years). D’autre part, les énoncés qui ont les plus importants scores dans cet espace ont comme particularité le plus souvent de ne pas définir précisément les échéances auxquelles ils renvoient (the next decades, coming decades, next century, this century). D’autres marqueurs également présents dans ce sous-ensemble ne font pas référence au futur mais au passé et ils se caractérisent par le fait de référer également à une projection lointaine dans le temps passé (30 years ago, 150 years ago, the last 20 years, the past 25 years, the past 15 years). Les entités dans ce sous-ensemble ont donc comme particularité de majoritairement exprimer un futur lointain et souvent peu précis. Par ailleurs, lorsque les entités font référence au passé, elles sont également projetées dans une temporalité lointaine.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité algo`}</p>\n    </blockquote>\n    <p>{`Au sein du sous-ensemble d’articles associés aux “Algorithmes” les marqueurs temporels extraits ayant les scores tf-idf les plus hauts se distinguent des premiers car ils renvoient majoritairement au présent (this day, these days, that year), à un passé plus proche souvent exprimé en jour, semaine ou mois (recent days, just last week, a few weeks ago, just a month, six months ago, the end of last year), mais également à un futur très proche en comparaison du premier sous-ensemble (the next day, the next few weeks, the coming weeks, the coming months, the following two years). `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Temporalité full`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-des-marqueurs-de-temps-et-calcul-des-tf-idf-sur-le-corpus\"\n    }}>{`Méthode : Extraction des marqueurs de temps et calcul des TF-IDF sur le corpus`}</h2>\n    <p>{`En suivant la même procédure que pour le calcul des scores tf-idf sur les verbes, un travail de comparaison d’entités nommées “Date” a été réalisé. Afin de lister ces marqueurs de temps, une première extraction de 500 entités nommées “Date” via le modèle Spacy effectuée sur Cortext a été effectuée, puis un nettoyage de cette liste afin de conserver les entités les plus interprétables permettant de qualifier une dimension temporelle sans ambiguïté. On était supprimées les entités produisant des ambiguïtés et moins interprétables comme les dates spécifique ou chiffrée, les durées (ex: several years, winter), les fréquences (ex : everyday, weekly), les périodes (the late 1980s) événement spécifique (ex : Christmas). Pour cette liste de 112 entités “Date” un score de tf-df a été calculé en suivant la même procédure que pour les entités, soit une séparation du corpus d’articles en deux grand ensemble équivalent suivant la topologie du graphe telle que décrite précédemment et un calcul du score tf-idf pour chaque entité à partir du module TfidfTransformer.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-est-exprimée-la-temporalité-\",\n    level: 2,\n    title: \"Comment est exprimée la temporalité ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-des-marqueurs-de-temps-et-calcul-des-tf-idf-sur-le-corpus\",\n    level: 2,\n    title: \"Méthode : Extraction des marqueurs de temps et calcul des TF-IDF sur le corpus\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.355,\"time\":21299.999999999996,\"words\":71}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"mentions-de-dates\"\n    }}>{`Mentions de dates`}</h1>\n    <p>{`Visualisation du scatterplot renversé (mode \"icecream\") :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} mdxType=\"IceCreamBlock\" />\n    <p>{`Rajout de couleurs (pas pertinent en l’état) : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} mdxType=\"IceCreamBlock\" />\n    <p>{`Avec une recherche plein texte de “eliminate” : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} searchString={'eliminate'} mdxType=\"IceCreamBlock\" />\n    <p>{`Visualisation plus classique du scatterplot :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} mdxType=\"IceCreamBlock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"1 min read\",\"minutes\":0.355,\"time\":21299.999999999996,\"words\":71}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"mentions-de-verbes\"\n    }}>{`Mentions de verbes`}</h1>\n    <p>{`Visualisation du scatterplot renversé (mode \"icecream\") :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} mdxType=\"IceCreamBlock\" />\n    <p>{`Rajout de couleurs (pas pertinent en l’état) : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} mdxType=\"IceCreamBlock\" />\n    <p>{`Avec une recherche plein texte de “eliminate” : `}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} rotateMode={true} colorVariable={'entity'} searchString={'eliminate'} mdxType=\"IceCreamBlock\" />\n    <p>{`Visualisation plus classique du scatterplot :`}</p>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseX={'true'} mdxType=\"IceCreamBlock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  \n]\n\nexport const frontMatter = {}\n\n","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    if (url) {\n      axios.get(url, {\n        onDownloadProgress: progressEvent => {\n          const status = progressEvent.loaded / progressEvent.total;\n          setLoadingFraction(status);\n        }\n      })\n      .then(({data: inputData}) => {\n        setTimeout(() => {\n          let data = inputData;\n          if (url.split('.').pop() === 'csv') {\n            data = csvParse(inputData);\n          } else if (url.split('.').pop() === 'tsv') {\n            data = tsvParse(inputData);\n          }\n          setData(data);\n        })\n      })\n    }\n  }, [url]);\n\n  if (!url) {\n    return children();\n  }\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND' : 'OR'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions.map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","\nimport React from 'react';\n\nexport default function ColorLegend ({\n  colorPalette\n}) {\n  return (\n    <ul className=\"ColorLegend\">\n      {\n        Object.entries(colorPalette)\n        .map(([modality, color]) => (\n          <li key={modality}>\n            <span className=\"legend-color\" style={{background: color}} />\n            <span className=\"legend-modality\">{modality}</span>\n          </li>\n        ))\n      }\n    </ul>\n  );\n}","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions,\n  filters = [],\n  onFiltersChange,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  }\n                ],\n              }\n            }\n          />\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n          }\n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n      </ul>\n    </>\n  );\n}","import {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // Label\n    if (!nodeLabel) {\n      renderedNode.label = attr.label || key;\n    } else {\n      renderedNode.label = attr[nodeLabel.name] || '<no-label>';\n    }\n    // hidden\n    renderedNode.hidden = filters.length ? !evalIfNodeMatches(attr, filters, filtersModeAnd) : false;\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1) return SINGLE_COLOR_PALETTE;\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './GraphContainer.css';\n\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nexport default function GraphContainer({\n  graph,\n  // nodeColor,\n  // nodeSize,\n  nodeLabel,\n  labelDensity,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n}) {\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  // const previousNodeLabel = usePrevious(nodeLabel);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel,\n    extents,\n    filters,\n    filtersModeAnd,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      // previousNodeLabel !== nodeLabel ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n          {\n            ...{\n              searchString,\n              onSearchStringChange,\n              filtersModeAnd,\n              onToggleFiltersModeAnd,\n              filtersOptions,\n              filters,\n              onFiltersChange,\n              nodeSizeVariable,\n              nodeColorVariable,\n              onNodeSizeVariableChange,\n              onNodeColorVariableChange,\n              colorPalette: nodeColor && nodeColor.palette,\n            }\n          }\n        />\n      )}\n    </div>\n  );\n}","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect} from 'react';\nimport {extent} from 'd3-array';\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from '../../components/Graph';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst GraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, data), [graph, data]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable,\n    nodeSizeVariable,\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(nodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n  }\n  const onSearchStringChange = str => {\n    setSearchString(str);\n\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        nodeSizeVariable,\n        nodeColorVariable,\n        filtersModeAnd,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Content />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                filtersModeAnd,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                \n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': isMinified})}>\n        {'>'}\n      </button>\n      <ul className={cx(\"GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {min, extent} from 'd3-array';\n\nimport IceCreamControls from './IceCreamControls';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './IceCreamContainer.css';\n\nfunction IceCreamContainer({\n\n  width, height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  filtersOptions = {},\n}) {\n  const smallestDimension = min([width, height])\n  const WIDTH = smallestDimension;\n  const HEIGHT = smallestDimension;\n  const MIN_RADIUS = smallestDimension / 100;\n  const MAX_RADIUS = smallestDimension / 50;\n  const MARGIN = smallestDimension / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN ];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain(extent(data.map(d => +d[xVariable]))) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain(extent(data.map(d => +d[yVariable]))) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ?  scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_RADIUS, MAX_RADIUS]) : () => 0;\n\n  let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n  let getColor = () => 'grey';\n  let colorPalette;\n  if (palette) {\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n    getColor = val => {\n      return colorPalette[val]\n    }\n  }\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  return (\n    <>\n        <svg className=\"scatterplot\" width={WIDTH} height={HEIGHT} transform={rotateMode ? 'rotate(-45)' : ''}>\n          <g transform={`translate(${WIDTH/20}, 0)scale(.9)`}>\n            <g className=\"axis axis-left\">\n              <line x1={MARGIN} x2={MARGIN} y1={MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n                  const y = getY(tick);\n                  return (\n                    <g key={tick} transform={`translate(0, ${y})`}>\n                      <text transform={rotateMode ? `rotate(45)translate(${MARGIN/4}, ${-MARGIN/3})`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={MARGIN * 0.8}\n                        x2={MARGIN}\n                        y1={0}\n                        y2={0}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text \n                className=\"axis-variable-name\" \n                x={0} \n                y={MARGIN / 2 - 2} \n                transform={rotateMode ? `rotate(90)translate(${(HEIGHT - MARGIN) * .5}, ${-MARGIN * .7})` : ''}\n              >\n                {yVariable}\n              </text>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line x1={MARGIN} x2={WIDTH - MARGIN * 2} y1={HEIGHT - MARGIN} y2={HEIGHT - MARGIN} stroke={'black'} />\n              {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const x = getX(tick);\n                  return (\n                    <g key={tick} transform={`translate(${x}, ${HEIGHT})`}>\n                      <text y={-MARGIN / 3} transform={rotateMode ? `rotate(45)translate(${-MARGIN * .4}, 0)`: ''}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={0}\n                        x2={0}\n                        y1={-MARGIN}\n                        y2={-MARGIN * .8}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <text className=\"axis-variable-name\" \n                x={WIDTH - MARGIN * 1.5} \n                y={HEIGHT - MARGIN / 3 - 2}\n                transform={rotateMode ? `translate(${-(WIDTH - MARGIN) / 2}, ${MARGIN/3})` : ''}\n              >\n                {xVariable}\n              </text>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n                \n                  getY.ticks &&\n                  getY.ticks()\n                  .map(tick => (\n                    <line \n                      key={tick}\n                      x1={MARGIN}\n                      x2={WIDTH - MARGIN}\n                      y1={getY(tick)}\n                      y2={getY(tick)}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n                \n                getX.ticks &&\n                getX.ticks()\n                .map(tick => (\n                  <line \n                    key={tick}\n                    y1={MARGIN}\n                    y2={WIDTH - MARGIN}\n                    x1={getY(tick)}\n                    x2={getY(tick)}\n                    stroke=\"lightgrey\"\n                  />\n                ))\n            }\n            </g>\n            <g className=\"plot-objects-container\">\n            {\n              data.map((datum, index) => {\n                return (\n                  <g \n                    key={index} \n                    className=\"plot-object\"\n                    transform={`translate(${getX(datum[xVariable])}, ${getY(datum[yVariable])})`}\n                    opacity={!highlightedIndex || highlightedIndex.has(index) ? 1 : .2}\n                  >\n                    <circle \n                      r={getSize(datum[sizeVariable])} \n                      fill={getColor(datum[colorVariable])} \n                      opacity={.8}\n                    />\n                    <text x={getSize(datum[sizeVariable]) + smallestDimension / 100}>\n                      {datum[labelVariable]}\n                    </text>\n                  </g>\n                )\n              })\n            }\n            </g>\n          </g>\n        </svg>\n        <IceCreamControls\n          {\n            ...{\n              xVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n\n              rotateMode,\n              searchString,\n\n              onSearchStringChange,\n              onToggleRotateMode,\n              \n              onXVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleReverseX,\n              onToggleReverseY,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <IceCreamContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import IceCreamContainer from './IceCreamContainer';\n\nexport default IceCreamContainer;","import React, {useState, useEffect, useMemo} from 'react';\nimport IceCreamVis from '../IceCream';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable,setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n  } ) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  \n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n\n        rotateMode,\n        searchString,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Content />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <IceCreamVis\n              {\n                ...{\n                  data,\n                  filtersOptions,\n\n                  xVariable,\n                  reverseX,\n                  yVariable,\n                  reverseY,\n                  sizeVariable,\n                  colorVariable,\n                  labelVariable,\n\n                  rotateMode,\n                  searchString,\n\n                  onSearchStringChange,\n                  onToggleRotateMode: () => setRotateMode(!rotateMode) ,\n                  \n                  onXVariableChange: (val) => setXVariable(val),\n                  onYVariableChange: (val) => setYVariable(val),\n\n                  onToggleReverseX: () => setReverseX(!reverseX),\n                  onToggleReverseY: () => setReverseY(!reverseY),\n\n                  onColorVariableChange: (val) => setColorVariable(val),\n                  onSizeVariableChange: (val) => setSizeVariable(val),\n                  onLabelVariableChange: (val) => setLabelVariable(val),\n                }\n              }\n            />\n        </div>\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import GraphAnnotation from './components/GraphAnnotation';\nimport IceCreamAnnotation from './components/IceCreamAnnotation';\nimport PlainPage from './components/PlainPage';\n\nconst routes = [\n  {\n    title: 'Introduction',\n    route: '/introduction',\n    contents: '00_home.mdx',\n    Component: PlainPage\n  },\n  {\n    title: 'Graphe des critiques anglophones',\n    route: '/graph-critic-en',\n    contents: 'graph-critics.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: 'Analyse des dates (fichier \"date_ner_tfidf_v3\")',\n    route: '/dates-analysis',\n    contents: 'dates-analysis.mdx',\n    data: 'date_ner_tfidf_v3.tsv',\n    Component: IceCreamAnnotation\n  },\n  {\n    title: 'Analyse des verbes (fichier \"df_AB_tfidf_verbs_freq_count.csv\")',\n    route: '/verbs-analysis',\n    contents: 'verbs-analysis.mdx',\n    data: 'df_AB_tfidf_verbs_freq_count.csv',\n    Component: IceCreamAnnotation\n  }\n]\n\nexport default routes;","import React, {useState} from 'react';\n\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n}) => {\n  const [helpVisible, setHelpVisible] = useState(false);\n  return (\n    <div className=\"slide-container without-visualization\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Content />\n      </section>\n      <aside>\n      </aside>\n  </div>\n  )\n}\n\nexport default PlainPage;","import IceCreamAnnotation from './IceCreamAnnotation';\n\nexport default IceCreamAnnotation;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport {repository} from '../package.json';\n\nimport DataLoader from './components/DataLoader';\n\nimport routesData from './summary'\n\n\nexport default function App() {\n  const renderRoute = ({data, contentsURL, Content, ThatComponent}) => (\n    <DataLoader url={data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined}>\n      {\n        data => (\n          <ThatComponent\n            {\n              ...{\n                contentsURL,\n                Content,\n                data\n              }\n            }\n          />\n        )\n      }\n    </DataLoader>\n  )\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            {\n              routesData.map(({title, route}, index) => (\n                <li key={index} className=\"navitem-container\">\n                  <Link to={route}>\n                    {title}\n                  </Link>\n                </li>\n              ))\n            }\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              routesData.map(({\n                // title,\n                route, \n                contents,\n                data,\n                Component: ThatComponent\n              }, index) => {\n                const Content = require(`!babel-loader!mdx-loader!./contents/${contents}`).default\n                const contentsURL = `${repository}/blob/main/src/contents/${contents}`;\n                return (\n                  <Route key={index} path={route}>\n                    {renderRoute({data, contentsURL, Content, ThatComponent})}\n                  </Route>\n                )\n              } )\n              \n            }\n            <Route path=\"/\">\n              {routesData && routesData.length ? renderRoute({\n                data: routesData[0].data, \n                contentsURL: `${repository}/blob/main/src/contents/${routesData[0].contents}`, \n                Content: require(`!babel-loader!mdx-loader!./contents/${routesData[0].contents}`).default, \n                ThatComponent: routesData[0].Component\n              }) : null}\n            </Route>\n            \n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import GraphBlock from './GraphBlock';\n\nexport default GraphBlock;","import React, {useContext, useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext} from '../../contexts'\nimport {buildGraphCode} from '../../helpers/misc';\n\nconst GraphBlock = (inputProps) => {\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => onRegisterVisualization(newId, {...inputProps}))\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildGraphCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return (\n    <div onClick={handleClick} className={cx(\"VisualizationBlock GraphBlock\", {'is-focused': isFocused})}>\n      <pre>\n        <code>\n          {buildGraphCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default GraphBlock;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"2 min read\",\"minutes\":1.575,\"time\":94500,\"words\":315}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport GraphBlock from '../components/GraphBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"graphe-des-critiques-anglophones\"\n    }}>{`Graphe des critiques anglophones`}</h1>\n    <h2 {...{\n      \"id\": \"quest-ce-quon-regarde\"\n    }}>{`Qu’est-ce qu’on regarde`}</h2>\n    <p>{`2,991 noeuds et 54,062 arcs`}</p>\n    <p>{`Densité: ~0.0121.`}</p>\n    <p>{`Carte d’identité des attributs de noeuds disponibles :`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`label_copy`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`technical`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`company`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`fiction`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`person`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`people`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`institution`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`locality`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data_inout`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`topic`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`issue`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`cluster_rename`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`algo_robot`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`nc term`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`tag_entity`}</inlineCode>{` : `}<inlineCode parentName=\"li\">{`TODO`}</inlineCode></li>\n    </ul>\n    <p>{`Vue du réseau dans son ensemble :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} mdxType=\"GraphBlock\" />\n    <GraphBlock x={0.502465282275226} y={0.6595968333857609} ratio={1} searchString={'team'} mdxType=\"GraphBlock\" />\n    <h1 {...{\n      \"id\": \"les-deux-continents\"\n    }}>{`Les deux continents`}</h1>\n    <p>{`Ci-dessous deux vues filtrées avec l’attribut algo_robot`}</p>\n    <p>{`Note technique : les labels des éléments filtrés s’affichent parfois, cela devrait être réglé dans une version ultérieur de sigma 2.`}</p>\n    <p>{`Le continent \"algo\":`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Algo\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Le continent “robots” :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} filters={[{\n      \"attribute\": \"algo_robot\",\n      \"value\": \"Robot\"\n    }]} mdxType=\"GraphBlock\" />\n    <p>{`Ou alors en les colorant :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={\"algo_robot\"} mdxType=\"GraphBlock\" />\n    <h1 {...{\n      \"id\": \"analyse-de-la-répartition-des-autres-attributs\"\n    }}>{`Analyse de la répartition des autres attributs`}</h1>\n    <p>{`Par `}<inlineCode parentName=\"p\">{`cluster_rename`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'cluster_rename'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`topic`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'topic'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`issue`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'issue'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`technical`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'technical'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`company`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'company'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`fiction`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'fiction'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`person`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'person'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`people`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'people'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`institution`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'institution'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`locality`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'locality'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`data_inout`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'data_inout'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`nc term`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'nc term'} mdxType=\"GraphBlock\" />\n    <p>{`Par `}<inlineCode parentName=\"p\">{`tag_entity`}</inlineCode>{` :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} nodeColorVariable={'tag_entity'} mdxType=\"GraphBlock\" />\n    <h2 {...{\n      \"id\": \"plus-loin-dans-lenquête\"\n    }}>{`Plus loin dans l’enquête`}</h2>\n    <p>{`Résultat d’une recherche du terme “robot” :`}</p>\n    <GraphBlock x={0.5} y={0.5} ratio={1} searchString={'robot'} mdxType=\"GraphBlock\" />\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"quest-ce-quon-regarde\",\n    level: 2,\n    title: \"Qu’est-ce qu’on regarde\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"plus-loin-dans-lenquête\",\n    level: 2,\n    title: \"Plus loin dans l’enquête\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})","var map = {\n\t\"./00_home.mdx\": 157,\n\t\"./01_couverture_media.mdx\": 158,\n\t\"./02_detectcritic.mdx\": 159,\n\t\"./03_graphclusters.mdx\": 160,\n\t\"./04_timelineclusters.mdx\": 161,\n\t\"./05_toporobotalgo.mdx\": 162,\n\t\"./06_explore_entities.mdx\": 163,\n\t\"./07_IssueVERB.mdx\": 164,\n\t\"./08_NERdate.mdx\": 165,\n\t\"./dates-analysis.mdx\": 166,\n\t\"./graph-critics.mdx\": 169,\n\t\"./verbs-analysis.mdx\": 167\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 61;"],"sourceRoot":""}