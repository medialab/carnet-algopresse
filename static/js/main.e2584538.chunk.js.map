{"version":3,"sources":["helpers/misc.js","../ /^/.//.*$/ groupOptions: {} namespace object","components/DataLoader/DataLoader.js","components/DataLoader/index.js","helpers/palettes.js","components/Graph/hooks.js","components/ControlButton/index.js","components/ControlButton/ControlButton.js","components/FiltersEditor/index.js","components/FiltersEditor/FiltersEditor.js","components/VariablesEditor/index.js","components/VariablesEditor/VariablesEditor.js","components/ColorLegend/ColorLegend.js","components/ColorLegend/index.js","components/Graph/GraphControls.js","components/Graph/reducers.js","components/Graph/GraphContainer.js","components/Graph/index.js","components/FooterNav/index.js","components/FooterNav/FooterNav.js","components/GraphAnnotation/index.js","components/GraphAnnotation/GraphAnnotation.js","components/IceCream/IceCreamControls.js","components/IceCream/IceCreamContainer.js","components/IceCream/index.js","components/PlainPage/PlainPage.js","summary.js","components/PlainPage/index.js","components/IceCreamAnnotation/IceCreamAnnotation.js","App.js","reportWebVitals.js","index.js","contexts.js"],"names":["buildComponentCode","componentName","props","Object","entries","filter","val","undefined","Array","isArray","length","map","key","JSON","stringify","serializeValue","join","trim","buildGraphCode","buildIceCreamScatterPlotCode","computeFiltersOptions","type","args","computeTableOptions","computeGraphFiltersOptions","data","columns","reduce","res","options","uniq","d","find","o","isNaN","Number","isInteger","id","title","includes","min","max","graph","gexfData","attrs","DOMParser","parseFromString","querySelectorAll","categories","FORBIDDEN_ATTRS","forEach","attr","getAttribute","push","Set","forEachNode","_node","cat","has","add","evalIfNodeMatches","attributes","filters","filtersModeAnd","attribute","value","cartesianToPolar","x","y","distance","Math","sqrt","radians","atan2","degrees","PI","radiansToDegrees","polarToCartesian","degreesToRadians","cos","sin","transformGeometry","rotate","translate","finalDegrees","newX","newY","webpackAsyncContext","req","__webpack_require__","Promise","resolve","then","e","Error","code","ids","keys","module","exports","Loader","percentsLoaded","className","style","width","DataLoader","url","children","useState","setData","loadingFraction","setLoadingFraction","useEffect","axios","get","onDownloadProgress","progressEvent","status","loaded","total","inputData","setTimeout","split","pop","csvParse","tsvParse","DEFAULT_COLOR_SPACE","cmin","cmax","lmin","lmax","SINGLE_COLOR_PALETTE","generatePalette","name","count","iwanthue","colorSpace","seed","clustering","usePrevious","ref","useRef","current","ControlButton","onClick","FiltersEditor","onToggleFiltersModeAnd","filtersOptions","onFiltersChange","isOpen","setIsOpen","newFilterAttribute","setNewFilterAttribute","newFilterOptions","option","index","newFilters","f","i","onChange","target","VariablesEditor","variables","isNotAllDefault","v","activeOptions","getOptions","label","newVal","ColorItemHandler","modality","color","isEdited","setEdited","editedColor","setEditedColor","debouncedOnChange","debounce","background","stopPropagation","newColor","hex","ColorLegend","colorPalette","SLIDER_MARKS","DebouncedSlider","defaultValue","setValue","step","newValue","marks","GraphControls","rescale","zoomIn","zoomOut","searchString","onSearchStringChange","labelDensity","nodeSizeVariable","nodeColorVariable","nodeLabelVariable","onNodeSizeVariableChange","onNodeColorVariableChange","onNodeLabelVariableChange","onLabelDensityChange","onColorPaletteChange","isMinified","setIsMinified","cx","onSubmit","preventDefault","placeholder","DEFAULT_NODE_COLOR","DEFAULT_NODE_SIZE_RANGE","CELL_HEIGHT_SCALE","scaleLinear","domain","range","CELL_WIDTH_SCALE","renderer","getCamera","animatedReset","animatedZoom","animatedUnzoom","GraphContainer","extents","onCameraUpdate","cameraPosition","updateTimestamp","nodeSize","useMemo","values","from","nodeColor","colors","size","palette","edgesMap","m","Map","_source","_target","sourceAttributes","targetAttributes","edge","_edgeAttributes","set","sourceNode","targetNode","previousNodeColor","previousNodeSize","previousNodeLabelVariable","previousLabelDensity","previousSearchString","previousFilters","previousColorPalette","nodeReducer","nodeLabel","nodeSizeFactor","nodeSizeScale","renderedNode","hidden","createNodeReducer","edgeReducer","el1","el2","renderedEdge","biggerNode","Color","lighten","rgb","string","createEdgeReducer","container","setRenderer","animate","needToRefresh","settings","labelGrid","cell","height","displayedLabels","toLowerCase","highlightNode","unhighlightNode","highlightedNodes","refresh","setContainer","useCallback","node","kill","newRenderer","WebGLRenderer","camera","getState","on","state","bind","FooterNav","prevPage","nextPage","to","route","GraphAnnotation","Content","contentsURL","gexf","parse","Graph","setCameraPosition","helpVisible","setHelpVisible","setSearchString","setFiltersModeAnd","Date","getTime","setUpdateTimeStamp","setFilters","setNodeColorVariable","setColorPalette","setNodeSizeVariable","setNodeLabelVariable","setLabelDensity","focusedVisualizationId","setFocusedVisualizationId","registeredVisualizations","setRegisteredVisualizations","thatId","sizes","sizeExtent","extent","Provider","onVisualizationUpdate","ratio","newNodeColorVariable","onRegisterVisualization","onUnregisterVisualization","copyOfRegistered","visualizationParams","href","fallback","str","IceCreamControls","xVariable","reverseX","yVariable","reverseY","sizeVariable","colorVariable","labelVariable","labelsOnTheSide","rotateMode","onToggleRotateMode","onXVariableChange","onYVariableChange","onColorVariableChange","onSizeVariableChange","onLabelVariableChange","onToggleLabelsOnTheSide","onToggleReverseX","onToggleReverseY","IceCreamContainer","smallestDimension","WIDTH","parseInt","HEIGHT","MIN_RADIUS","MAX_RADIUS","MARGIN","xRange","yRange","reverse","highlightedIndex","getX","getY","getSize","getColor","datum","rotateTransform","transf","point1X","point1Y","point2X","point2Y","point3X","point3Y","point4X","point4Y","points","fill","transform","x1","y1","x2","y2","stroke","ticks","tick","textAnchor","sort","a","b","labelX","labelY","pointerStartCoords","opacity","cy","r","strokeDasharray","fontSize","dimensions","PlainPage","routes","contents","Component","setXVariable","setYVariable","setReverseX","setReverseY","setSizeVariable","setColorVariable","setLabelVariable","setLabelsOnTheSide","setRotateMode","thatXVariable","thatYVariable","thatReverseX","thatReverseY","thatSizeVariable","thatColorVariable","thatLabelVariable","thatLabelsOnTheSide","thatRotateMode","thatSearchString","IceCream","App","renderRoute","ThatComponent","process","React","lazy","repository","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","VisualizationControlContext","createContext"],"mappings":"2bAWMA,EAAqB,SAACC,EAAeC,GAAhB,iBAA8BD,EAA9B,gBACvBE,OAAOC,QAAQF,GACdG,QAAO,YAAkB,IAAD,mBAATC,GAAS,WACvB,aAAiBC,IAARD,IAA6B,IAARA,GAAyB,KAARA,GAAeE,MAAMC,QAAQH,KAASA,EAAII,WAE1FC,KAAI,mCAAEC,EAAF,KAAON,EAAP,qBAAmBM,EAAnB,aAbc,SAAAN,GACrB,MAAmB,kBAARA,EACH,IAAN,OAAWA,EAAX,KACsB,kBAARA,EACPO,KAAKC,UAAUR,GACZA,EAQsBS,CAAeT,GAA1C,QACJU,KAAK,SACLC,OAPsB,SAWdC,EAAiB,SAAAhB,GAAK,OAAIF,EAAmB,aAAcE,IAE3DiB,EAA+B,SAAAjB,GAAK,OAAIF,EAAmB,gBAAiBE,IAE5EkB,EAAwB,SAACC,GAAmB,IAAD,uBAATC,EAAS,iCAATA,EAAS,kBACtD,OAAQD,GACN,IAAK,QACH,OAAOE,EAAmB,WAAnB,EAAuBD,GAChC,IAAK,QACL,QACE,OAAOE,EAA0B,WAA1B,EAA8BF,KAIrCC,EAAsB,SAAAE,GAC1B,OAAOA,EAAKC,QAAQC,QAAO,SAACC,EAAKhB,GAC/B,IAAMiB,EAAUC,eAAKL,EAAKd,KAAI,SAAAoB,GAAC,OAAIA,EAAEnB,OACjCS,EAAO,SAGNQ,EAAQG,MAAK,SAAAC,GAAC,OAAIC,OAAOD,QAI1BZ,EAHGQ,EAAQG,MAAK,SAAAC,GAAC,OAAKE,OAAOC,WAAWH,MAGjC,QAFA,WAKX,IAAM/B,EAAQ,CACZmC,GAAIzB,EACJ0B,MAAO1B,EACPS,OACAQ,WAOF,MALI,CAAC,QAAS,WAAWU,SAASlB,KAChCnB,EAAM2B,QAAU3B,EAAM2B,QAAQlB,KAAI,SAAAsB,GAAC,OAAKA,KACxC/B,EAAMsC,IAAMA,YAAItC,EAAM2B,SACtB3B,EAAMuC,IAAMA,YAAIvC,EAAM2B,UAEjB,2BACFD,GADL,kBAEGhB,EAAMV,MAER,KAEQsB,EAA6B,SAACkB,EAAOC,GAChD,IAEMC,GAFY,IAAIC,WACAC,gBAAgBH,EAAU,mBAC9BI,iBAAiB,6BAC7BC,EAAa,GAEbC,EAAkB,CAAC,UAqBzB,OAnBAL,EAAMM,SAAQ,SAAAC,GACZ,IAAMd,EAAKc,EAAKC,aAAa,MAC7B,IAAIH,EAAgBV,SAASF,GAA7B,CAEA,IAAMC,EAAQa,EAAKC,aAAa,SAC1B/B,EAAO8B,EAAKC,aAAa,QAC/BJ,EAAWK,KAAK,CACdhB,KACAC,QACAjB,OACAQ,QAAS,IAAIyB,UAGjBZ,EAAMa,aAAY,SAACC,EAAOtD,GACxB8C,EAAWE,SAAQ,SAAAO,GACZA,EAAI5B,QAAQ6B,IAAIxD,EAAMuD,EAAIpB,MAC7BoB,EAAI5B,QAAQ8B,IAAIzD,EAAMuD,EAAIpB,WAGzBW,EAAWrB,QAAO,SAACC,EAAK6B,GAAN,mBAAC,eAAmB7B,GAApB,kBAA0B6B,EAAIpB,GAAKoB,MAAQ,KAGzDG,EAAoB,SAACC,EAAYC,EAASC,GACrD,OAAIA,SAC+GxD,IAAjFuD,EAAQ9B,MAAK,gBAAGgC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAd,OAA0BJ,EAAWG,KAAe,GAAKC,WAGI1D,IAAjFuD,EAAQ9B,MAAK,gBAAGgC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,MAAd,OAA0BJ,EAAWG,KAAe,GAAKC,MAQtFC,EAAmB,SAACC,EAAGC,GAClC,IAAMC,EAAWC,KAAKC,KAAKJ,EAAIA,EAAIC,EAAIA,GACjCI,EAAUF,KAAKG,MAAML,EAAGD,GAE9B,MAAO,CAAEE,WAAUG,UAASE,QAPL,SAAAF,GAAO,OAAIA,GAAW,IAAMF,KAAKK,IAMxCC,CAAiBJ,KAItBK,EAAmB,SAACR,EAAUK,GACzC,IAAMF,EAVwB,SAAAE,GAAO,OAAIA,GAAWJ,KAAKK,GAAK,KAU9CG,CAAiBJ,GACjC,MAAO,CACLP,EAAGE,EAAWC,KAAKS,IAAIP,GACvBJ,EAAGC,EAAWC,KAAKU,IAAIR,KAIdS,EAAoB,SAAC,EAAD,GAAsC,IAAnCd,EAAkC,EAAlCA,EAAGC,EAA+B,EAA/BA,EAAOc,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAAgB,EACtCjB,EAAiBC,EAAGC,GAA1CM,EAD4D,EAC5DA,QAASL,EADmD,EACnDA,SACbe,EAAeV,EACfQ,IACFE,GAAgBF,GAJkD,MAMzCL,EAAiBR,EAAUe,GAA7CC,EAN2D,EAM9DlB,EAAYmB,EANkD,EAMrDlB,EASf,OARIe,IACEA,EAAUhB,IACZkB,GAAQF,EAAUhB,GAEhBgB,EAAUf,IACZkB,GAAQH,EAAUf,IAGf,CAAED,EAAGkB,EAAMjB,EAAGkB,K,4GC3IvB,IAAI3E,EAAM,CACT,gBAAiB,CAChB,IACA,IAED,4BAA6B,CAC5B,IACA,IAED,wBAAyB,CACxB,IACA,IAED,yBAA0B,CACzB,IACA,GAED,4BAA6B,CAC5B,IACA,IAED,yBAA0B,CACzB,IACA,GAED,4BAA6B,CAC5B,IACA,GAED,qBAAsB,CACrB,IACA,GAED,mBAAoB,CACnB,IACA,IAED,uBAAwB,CACvB,IACA,GAED,sBAAuB,CACtB,IACA,GAED,uBAAwB,CACvB,IACA,IAGF,SAAS4E,EAAoBC,GAC5B,IAAIC,EAAoBxD,EAAEtB,EAAK6E,GAC9B,OAAOE,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMrF,EAAI6E,GAAMnD,EAAK2D,EAAI,GAC7B,OAAOP,EAAoBI,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOH,EAAoBpD,MAG7BkD,EAAoBU,KAAO,WAC1B,OAAO9F,OAAO8F,KAAKtF,IAEpB4E,EAAoBlD,GAAK,IACzB6D,EAAOC,QAAUZ,G,gLChEXa,EAAS,SAAC,GAAyB,IAAD,IAAvBC,sBAAuB,MAAN,EAAM,EACtC,OACE,qBAAKC,UAAU,mBAAf,SACE,qBAAKA,UAAU,SAAf,SACE,qBAAKA,UAAU,cAAcC,MAAO,CAACC,MAAOH,EAAiB,YCNtDI,EDYI,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,SAAc,EACdC,mBAAS,MADK,mBAC/BnF,EAD+B,KACzBoF,EADyB,OAEQD,mBAAS,GAFjB,mBAE/BE,EAF+B,KAEdC,EAFc,KAyBtC,OAtBAC,qBAAU,WACJN,GACFO,IAAMC,IAAIR,EAAK,CACbS,mBAAoB,SAAAC,GAClB,IAAMC,EAASD,EAAcE,OAASF,EAAcG,MACpDR,EAAmBM,MAGtBzB,MAAK,YAAwB,IAAhB4B,EAAe,EAArB/F,KACNgG,YAAW,WACT,IAAIhG,EAAO+F,EACkB,QAAzBd,EAAIgB,MAAM,KAAKC,MACjBlG,EAAOmG,YAASJ,GACkB,QAAzBd,EAAIgB,MAAM,KAAKC,QACxBlG,EAAOoG,YAASL,IAElBX,EAAQpF,WAIb,CAACiF,IAECA,EAIEjF,EAAOkF,EAASlF,GAEvB,cAAC,EAAD,CAAQ4E,eAAkC,IAAlBS,IALfH,K,mCEtCLmB,EAAsB,CAC1BC,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,KAAM,OAGFC,EAAuB,CAAC,QAEvB,SAASC,EAAgBC,EAAMC,GACpC,OAAc,IAAVA,EAAoBH,EAEjBI,IAASD,EAAO,CACrBE,WAAYV,EACZW,KAAMJ,EACNK,WAAY,iB,4ECbT,SAASC,EAAY1E,GAC1B,IAAM2E,EAAMC,mBAIZ,OAHA7B,qBAAU,WACR4B,EAAIE,QAAU7E,KAET2E,EAAIE,Q,8CCPEC,MCAA,YAA6C,IAArBpC,EAAoB,EAApBA,SAAUqC,EAAU,EAAVA,QAC/C,OACE,wBAAQ1C,UAAU,iBAAiB0C,QAASA,EAA5C,SACGrC,K,QCHQsC,MCGA,YAMX,IALFC,EAKC,EALDA,uBACAnF,EAIC,EAJDA,eACAoF,EAGC,EAHDA,eACAC,EAEC,EAFDA,gBACAtF,EACC,EADDA,QACC,EAC2B8C,oBAAS,GADpC,mBACMyC,EADN,KACcC,EADd,OAEmD1C,wBAASrG,GAF5D,mBAEMgJ,EAFN,KAE0BC,EAF1B,KAIGC,EAAmB,GAqBvB,OApBIF,GACFJ,EAAeI,GAAoB1H,QAAQqB,SAAQ,SAAAwG,GAAM,OAAID,EAAiBpG,KAAKqG,MAoBnF,sBAAKpD,UAAU,gBAAf,UACE,8BACE,wBAAQA,UAAW+C,EAAS,YAAc,GAAIL,QAAS,kBAAMM,GAAWD,IAAxE,2BAKAA,GACA,gCACE,eAAC,EAAD,CAAgBL,QAASE,EAAzB,+BACqBnF,EAAiB,MAAQ,QAE7CD,EAAQpD,OACT,gCACE,mDACA,oBAAI4F,UAAU,mBAAd,SAEIxC,EAAQnD,KAAI,WAAqBgJ,GAAW,IAA9B3F,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,MAKvB,OACE,+BACE,gCACGD,EADH,MACiBC,KAEjB,8BACE,wBAAQ+E,QAVO,WACnB,IAAIY,EAAa9F,EAAQzD,QAAO,SAACwJ,EAAGC,GAAJ,OAAUA,IAAMH,KAChDP,EAAgBQ,IAQZ,8BALKD,WAejB,KAEF,gCACE,2DACA,yBAAQ1F,MAAOsF,GAAsB,GAAIQ,SAhDrB,SAAAlE,GAC5B,IAAMvF,EAAMuF,EAAEmE,OAAO/F,MACjB3D,EAAII,QACN8I,EAAsBlJ,IA6ChB,UAEIH,OAAOC,QAAQ+I,GAAgBxI,KAAI,WAAgBgJ,GAAW,IAAD,mBAAxBtH,EAAwB,KAAnBC,EAAmB,KAAnBA,MACxC,OACE,wBAAQ2B,MAAO5B,EAAf,SAAgCC,GAARqH,MAI9B,wBAAQ1F,MAAM,GAAd,kCAGuB1D,IAAvBgJ,EACA,yBAAQtF,MAAO,GAAI8F,SAvED,SAAClE,GAC7B,IAAM5B,EAAQ4B,EAAEmE,OAAO/F,MACvBmF,EAAgB,GAAD,mBACVtF,GADU,CAEb,CACEE,UAAWuF,EACXtF,YAGJuF,OAAsBjJ,IA8DZ,UAEIkJ,EAAiB9I,KAAI,SAAC0B,EAAIsH,GACxB,OACE,wBAAQ1F,MAAO5B,EAAf,SAAgCA,GAARsH,MAI9B,wBAAQ1F,MAAM,GAAd,6BAEA,eCnGDgG,MCAA,YAGX,IAFFpI,EAEC,EAFDA,QACAqI,EACC,EADDA,UACC,EAC2BtD,oBAAS,GADpC,mBACMyC,EADN,KACcC,EADd,KAEKa,OAA0F5J,IAAxE2J,EAAUlI,MAAK,SAAAoI,GAAC,MAAgB,YAAZA,EAAEnG,YAAmC1D,IAAZ6J,EAAEnG,SACvE,OACE,sBAAKqC,UAAU,gCAAf,UACE,8BACE,wBAAQA,UAAW+C,GAAUc,EAAkB,YAAc,GAAInB,QAAS,kBAAMM,GAAWD,IAA3F,8BAKCA,GAAUc,IACX,8BAEID,EAAUvJ,KAAI,WAAiCgJ,GAAW,IAA1CrH,EAAyC,EAAzCA,MAAO2B,EAAkC,EAAlCA,MAAO8F,EAA2B,EAA3BA,SAAU1I,EAAiB,EAAjBA,KAchCgJ,EAAa,CACjB,CACEpG,MAAO,UACP3B,MAAO,cAHQ,mBAbA,WACjB,OAAOjB,GACL,IAAK,QACL,IAAK,SACH,OAAQlB,OAAOC,QAAQyB,GACzB,IAAK,UACH,MAAO,CAAC,CAAC,OAAQ,CAACS,MAAO,QAAS,CAAC,QAAS,CAACA,MAAO,SACtD,IAAK,SACL,QACE,OAAOnC,OAAOC,QAAQyB,GACrBxB,QAAO,mCAAOqJ,GAAP,iBAAmB,CAAC,UAAW,SAASnH,SAASmH,EAAOrI,UAQjEiJ,GACA3J,KAAI,mCAAE0B,EAAF,WAAmB,CACtBkI,MADG,KACWjI,MACd2B,MAAO5B,QAIb,OAAIgI,EAAc3J,QAAU,EACnB,KAGP,gCACE,+BAAK4B,EAAL,OACA,wBAAQ2B,MAAOA,EAAO8F,SAAU,SAAAlE,GAC5B,IAAM2E,EAAS3E,EAAEmE,OAAO/F,MACxB,OACS8F,EADI,YAAT1I,EACyB,SAAXmJ,EAEFA,IALpB,SAQIH,EAAc1J,KAAI,gBAAEsD,EAAF,EAAEA,MAAOsG,EAAT,EAASA,MAAT,OAChB,wBAAoBtG,MAAOA,EAA3B,SACGsG,GAAS,aADCtG,UAXX0F,Y,SC5CpBc,EAAmB,SAAC,GAInB,IAHLC,EAGI,EAHJA,SACAX,EAEI,EAFJA,SACAY,EACI,EADJA,MACI,EAC0B/D,oBAAS,GADnC,mBACGgE,EADH,KACaC,EADb,OAEkCjE,mBAAS+D,GAF3C,mBAEGG,EAFH,KAEgBC,EAFhB,KAGJ/D,qBAAU,WACR+D,EAAeJ,KACd,CAACA,IACJ,IAAMK,EAAoBC,IAASlB,EAAU,KAS7C,OACE,+BACE,sBAAMf,QAAS,kBAAM6B,GAAWD,IAAWtE,UAAU,eAAeC,MAAO,CAAC2E,WAAYP,KACxF,sBAAMrE,UAAU,kBAAhB,SAAmCoE,IAEjCE,EACA,mCACE,qBAAK5B,QAXO,WAClBe,EAASe,GACTD,GAAU,IASuBvE,UAAU,yBAArC,SACE,sBAAK0C,QAAS,SAAAnD,GAAMA,EAAEsF,mBAAtB,UACE,wEAAwCT,EAAxC,OACA,cAAC,IAAD,CAAcX,SAlBL,SAAAqB,GACnBL,EAAeK,EAASC,KACxBL,EAAkBI,EAASC,MAgBqBV,MAAOG,WAIjD,SCpCKQ,MD0CA,YAGX,IAFFC,EAEC,EAFDA,aACAxB,EACC,EADDA,SAEA,OACE,oBAAIzD,UAAU,cAAd,SAEInG,OAAOC,QAAQmL,GACd5K,KAAI,YAAwB,IAAD,mBAArB+J,EAAqB,KAAXC,EAAW,KAO1B,OACE,cAAC,EAAD,aAAkBZ,SAPC,SAAAqB,GACnBrB,EAAS,2BACJwB,GADG,kBAELb,EAAYU,OAI8C,CAACV,WAAUC,UAAzBD,SElDrDc,EAAe,CACnB,IAAQ,aAGV,SAASC,EAAT,GAAoD,IAA1BC,EAAyB,EAAzBA,aAAc3B,EAAW,EAAXA,SAAW,EACvBnD,mBAAS8E,GADc,mBAC1CzH,EAD0C,KACnC0H,EADmC,KAGjD3E,qBAAU,WACR2E,EAASD,KACR,CAACA,IAOJ,OACE,cAAC,IAAD,CACElJ,IAAK,EACLC,IAAK,EACLmJ,KAAM,IACNF,aAAcA,EACdzH,MAAOA,EACP8F,SAZmB,SAAA8B,GACrBF,EAASE,GACT9B,EAAS8B,IAWPC,MAAON,IAME,SAASO,EAAT,GAwBX,IAvBFC,EAuBC,EAvBDA,QACAC,EAsBC,EAtBDA,OACAC,EAqBC,EArBDA,QAqBC,IApBDC,oBAoBC,MApBc,GAoBd,EAnBDC,EAmBC,EAnBDA,qBACArI,EAkBC,EAlBDA,eACAmF,EAiBC,EAjBDA,uBACAmD,EAgBC,EAhBDA,aAEAC,EAcC,EAdDA,iBACAC,EAaC,EAbDA,kBACAC,EAYC,EAZDA,kBAEArD,EAUC,EAVDA,eAUC,IATDrF,eASC,MATS,GAST,EARDyH,EAQC,EARDA,aAEAnC,EAMC,EANDA,gBACAqD,EAKC,EALDA,yBACAC,EAIC,EAJDA,0BACAC,EAGC,EAHDA,0BACAC,EAEC,EAFDA,qBACAC,EACC,EADDA,qBACC,EAEmCjG,oBAAS,GAF5C,mBAEMkG,EAFN,KAEkBC,EAFlB,KAGD,OACE,qCACE,wBAAQ/D,QAAS,kBAAM+D,GAAeD,IAAaxG,UAAW0G,IAAG,gBAAiB,CAAC,aAAcF,IAAjG,SACG,cAEH,qBAAIxG,UAAW0G,IAAG,4BAA6B,CAAC,cAAeF,IAA/D,UAEE,qBAAIxG,UAAU,2BAAd,UAEA,cAAC,EAAD,CAAe0C,QAASkD,EAAxB,eAGA,cAAC,EAAD,CAAelD,QAASiD,EAAxB,eAGA,cAAC,EAAD,CAAejD,QAASgD,EAAxB,0BAIA,oBAAI1F,UAAU,oBAAd,SACE,sBAAM2G,SAAU,SAAApH,GAAC,OAAIA,EAAEqH,kBAAvB,SACE,uBAAO7L,KAAK,OAAO0I,SAvBF,SAAAlE,GAAC,OAAIuG,EAAqBvG,EAAEmE,OAAO/F,QAuBHkJ,YAAY,aAAalJ,MAAOkI,QAIrF,oBAAI7F,UAAU,oBAAd,SACE,cAAC,EAAD,eAEO,CACDzE,QAASsH,EACTe,UAAW,CAAC,CACR5H,MAAO,oBACPyH,SAAU0C,EACVxI,MAAOqI,EACPjL,KAAM,UAER,CACEiB,MAAO,qBACP2B,MAAOsI,EACPxC,SAAU2C,EACVrL,KAAM,SAER,CACEiB,MAAO,mBACP2B,MAAOuI,EACPzC,SAAU4C,EACVtL,KAAM,gBAQdkL,GAA2C,YAAtBA,EACrB,cAAC,EAAD,CACEhB,aAAcA,EACdxB,SAAU8C,IAEV,KAEN,oBAAIvG,UAAU,oBAAd,SACA,cAAC,EAAD,eAEO,CACD4C,yBACAnF,iBACAoF,iBACAC,kBACAtF,eAKN,oBAAIwC,UAAU,mCAAd,SACE,uBAAM2G,SAAU,SAAApH,GAAC,OAAIA,EAAEqH,kBAAvB,UACE,uDACA,qBAAK5G,UAAU,mBAAf,SACI,cAACmF,EAAD,CACEC,aAAcW,EACdtC,SAAUkB,IAAS2B,EAAsB,oB,8BC7IrDQ,EAAqB,OACrBC,GAA0B,CAAC,EAAG,I,WCa9BC,GAAoBC,cAAcC,OAAO,CAAC,EAAG,IAAIC,MAF7B,CAAC,IAAK,KAG1BC,GAAmBH,cAAcC,OAAO,CAAC,EAAG,IAAIC,MAF7B,CAAC,IAAK,KAK/B,SAASzB,GAAQ2B,GACAA,EAASC,YACjBC,cAAcF,GAGvB,SAAS1B,GAAO0B,GACCA,EAASC,YACjBE,aAAaH,GAGtB,SAASzB,GAAQyB,GACAA,EAASC,YACjBG,eAAeJ,GClCTK,ODsCA,YAgCX,IA/BFtL,EA+BC,EA/BDA,MAGA2J,EA4BC,EA5BDA,aACA4B,EA2BC,EA3BDA,QA2BC,IAzBD9B,oBAyBC,MAzBc,GAyBd,EAxBDC,EAwBC,EAxBDA,qBAEArI,EAsBC,EAtBDA,eACAmF,EAqBC,EArBDA,uBAqBC,IAnBDC,sBAmBC,MAnBgB,GAmBhB,MAlBDrF,eAkBC,MAlBS,GAkBT,EAjBDsF,EAiBC,EAjBDA,gBAEA8E,EAeC,EAfDA,eAEAC,EAaC,EAbDA,eAEAC,EAWC,EAXDA,gBAEA9B,EASC,EATDA,iBACAC,EAQC,EARDA,kBACAhB,EAOC,EAPDA,aACAiB,EAMC,EANDA,kBACAC,EAKC,EALDA,yBACAC,EAIC,EAJDA,0BACAC,EAGC,EAHDA,0BACAC,EAEC,EAFDA,qBACAC,EACC,EADDA,qBAGMwB,EAAWC,mBAAQ,WACvB,GAAIhC,GAAyC,YAArBA,GAAkCnD,EAAemD,GAAmB,CAC1F,IAAMiC,EAAS/N,MAAMgO,KAAKrF,EAAemD,GAAkBzK,SAC3D,MAAO,CACLW,IAAKA,YAAI+L,GACT9L,IAAKA,YAAI8L,GACTlG,KAAMiE,MAGT,CAACA,IAEEmC,EAAYH,mBAAQ,WACxB,GAAI/B,GAA2C,YAAtBA,GAAmCpD,EAAeoD,GAAoB,CAC7F,IAAMmC,EAAStG,EAAgBmE,EAAmBpD,EAAeoD,GAAmB1K,QAAQ8M,MACxFC,EAAU,GACV9E,EAAI,EAKR,OAJAX,EAAeoD,GAAmB1K,QAAQqB,SAAQ,SAAAwG,GAChDkF,EAAQlF,GAAUgF,EAAO5E,GACzBA,OAEK,CACL8E,UACAvG,KAAMkE,MAGT,CAACA,IAEEsC,EAAWP,mBAAQ,WACvB,IAAMQ,EAAI,IAAIC,IAKd,OAJArM,EAAMQ,SACJ,SAAC8L,EAASC,EAASC,EAAkBC,EAAkBC,EAAMC,GAC7DP,EAAEQ,IAAIF,EAAM,CAACG,WAAYL,EAAkBM,WAAYL,OAElDL,IACN,CAACpM,IAEE+M,EAAoB9G,EAAY8F,GAChCiB,EAAmB/G,EAAY0F,GAC/BsB,EAA4BhH,EAAY6D,GACxCoD,EAAuBjH,EAAY0D,GACnCwD,EAAuBlH,EAAYwD,GACnC2D,EAAkBnH,EAAY7E,GAC9BiM,EAAuBpH,EAAY4C,GAEnCyE,ED7GD,YASH,IARFvB,EAQC,EARDA,UACAJ,EAOC,EAPDA,SACA4B,EAMC,EANDA,UAMC,IALDC,sBAKC,MALgB,EAKhB,EAJDjC,EAIC,EAJDA,QAIC,IAHDnK,eAGC,MAHS,GAGT,EAFDC,EAEC,EAFDA,eACAwH,EACC,EADDA,aAEI4E,EAAgB,KAyDpB,OAjDEA,EALG9B,EAKad,cACbC,OAAO,CAACa,EAAS7L,IAAK6L,EAAS5L,MAC/BgL,MAAMJ,IANOE,cACbC,OAAO,CAACS,EAAQI,SAAS7L,IAAKyL,EAAQI,SAAS5L,MAC/CgL,MAAMJ,IAOS,SAAUzM,EAAKuC,GACjC,IAAMiN,EAAe,CACnBjM,EAAGhB,EAAKgB,EACRC,EAAGjB,EAAKiB,GAaV,GANEgM,EAAazF,MAHV8D,EAEMlD,EACYA,EAAapI,EAAKsL,EAAUpG,QAAU+E,EAGzDqB,EAAUG,QAAQzL,EAAKsL,EAAUpG,QAAU+E,EALxBjK,EAAKwH,OAASyC,EAQhCiB,EAGE,CACL,IAAIjE,EAAIjH,EAAKkL,EAAShG,MACtB+B,EAAiB,kBAANA,EAAiBA,EAAI,EAChCgG,EAAazB,KAAOwB,EAAc/F,OANrB,CACb,IAAIA,EAAIjH,EAAKwL,MAAQ,EACrByB,EAAazB,KAAOwB,EAAc/F,GAuBpC,OAhBAgG,EAAazB,MAAQuB,EAGjBpM,EAAQpD,SAA+D,IAArDkD,YAAkBT,EAAMW,EAASC,IACrDqM,EAAaC,QAAS,EACtBD,EAAa7F,MAAQ,KAErB6F,EAAaC,QAAS,EAKpBD,EAAa7F,MAHV0F,EAGgC,YAAdA,EAA0B9M,EAAKoH,OAAS3J,EAAMuC,EAAK8M,IAAc,GAFjE9M,EAAKoH,OAAS3J,GAMhCwP,GC6CWE,CAAkB,CACpC7B,YACAJ,WACA4B,UAAWzD,EACXyB,UACAnK,UACAC,iBACAwH,iBAGIgF,EDhDD,YAUH,IATF9B,EASC,EATDA,UACAJ,EAQC,EARDA,SAMAQ,EAEC,EAFDA,SACAtD,EACC,EADDA,aA+BA,OA1BoB,SAAU3K,EAAKuC,EAAMqN,EAAKC,GAAM,IAAD,EAI7C5B,EAAS3H,IAAItG,GAFf2O,EAF+C,EAE/CA,WACAC,EAH+C,EAG/CA,WAEIkB,EAAe,GAIfC,GAFiBtC,EAAWkB,EAAWlB,EAAShG,MAAQkH,EAAWZ,OAClDN,EAAWmB,EAAWnB,EAAShG,MAAQmH,EAAWb,MACpBY,EAAaC,EAclE,OAXImB,IAIAD,EAAa/F,MAHV8D,EAEMlD,EACYA,EAAaoF,EAAWlC,EAAUpG,QAAU+E,EAG/DqB,EAAUG,QAAQ+B,EAAWlC,EAAUpG,QAAU+E,EAL9BuD,EAAWhG,OAASyC,EAO3CsD,EAAa/F,MAAQiG,IAAMF,EAAa/F,OAAOkG,QAAQ,IAAKC,MAAMC,UAE7DL,GCWWM,CAAkB,CACpCvC,YACAlD,eAIAzH,UACAC,iBACA8K,aAGIoC,EAAYpI,iBAAO,MAnExB,EAoE+BjC,mBAAS,MApExC,oBAoEM+G,GApEN,MAoEgBuD,GApEhB,MAgFD,GATAlK,qBAAU,WACJmH,GAAkBR,IACHA,GAASC,YAEjBuD,QAAQhD,KAElB,CAACC,IAGAT,GAAU,CACZ,IAAIyD,IAAgB,EAGlB3B,IAAsBhB,GACtBiB,IAAqBrB,GACrBsB,IAA8BnD,GAC9BuD,IAAyBxE,GAEzBuE,IAAoBhM,IAKpB6J,GAAS0D,SAASrB,YAAcA,EAChCrC,GAAS0D,SAASd,YAAcA,EAChCa,IAAgB,GAGdxB,IAAyBvD,IAC3BsB,GAAS0D,SAASC,UAAUC,KAAO,CACjC/K,MAAOkH,GAAiBrB,GACxBmF,OAAQlE,GAAkBjB,IAI5BsB,GAAS8D,gBAAkB,IAAInO,IAC/B8N,IAAgB,GAGdvB,IAAyB1D,IACvBA,EAAazL,QAAU,EACzBgC,EAAMa,aAAY,SAAClB,EAAIwB,GACLA,EAAT0G,MACGmH,cAAcnP,SAAS4J,EAAauF,eAC5C/D,GAASgE,cAActP,GAClBsL,GAASiE,gBAAgBvP,MAEzBsL,GAASkE,iBAAiBlD,KAAO,IAC1ChB,GAASkE,iBAAmB,IAAIvO,MAIhC8N,IACFzD,GAASmE,UAIb,IAAMC,GAAeC,uBACnB,SAAAC,GAME,GALItE,IAAYA,GAASjL,QAAUA,IACjCiL,GAASuE,OACThB,GAAY,OAGVe,GAAQvP,EAAO,CAEjB,IAAMyP,EAAc,IAAIC,gBAAc1P,EAAOuP,EAAM,CAACjC,cAAaO,gBACjEW,GAAYiB,GACZ,IAAME,EAASF,EAAYvE,YAC3BM,EAAemE,EAAOC,YACtBD,EAAOE,GAAG,WAAW,SAAAC,GACnBtE,EAAesE,MAInBvB,EAAUnI,QAAUmJ,IAEtB,CAACvP,IAEH,OACE,sBAAK4D,UAAU,8BAAf,UAEE,qBAAKsC,IAAKmJ,GAAcxL,MAAO,CAACC,MAAO,OAAQgL,OAAQ,UACtD7D,IACC,cAAC5B,EAAD,aACEC,QAASA,GAAQyG,KAAK,KAAM9E,IAC5B1B,OAAQA,GAAOwG,KAAK,KAAM9E,IAC1BzB,QAASA,GAAQuG,KAAK,KAAM9E,KAEvB,CACDxB,eACAC,uBACArI,iBACAmF,yBACAC,iBACArF,UACAsF,kBACAkD,mBACAC,oBACAC,oBACAH,eACAI,2BACAC,4BACAC,4BACAE,uBACAD,uBACArB,aAAcA,GAAiBkD,GAAaA,EAAUG,eEvPrD8D,GCEG,SAAC,GAGZ,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,SAEA,OACE,wBAAQtM,UAAW0G,IAAG,YAAa,CAAC,cAAe2F,IAAnD,SACE,+BAEIA,EACE,oBAAIrM,UAAU,gBAAd,SACE,6BACE,eAAC,IAAD,CAAMuM,GAAIF,EAASG,MAAnB,UACE,qBAAKxM,UAAU,SAAf,SAAyB,MACzB,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,wDAC5B,8BACKqM,EAASrQ,kBAOtB,KAGFsQ,EACE,oBAAItM,UAAU,YAAd,SACE,6BACE,eAAC,IAAD,CAAMuM,GAAID,EAASE,MAAnB,UACE,gCACE,qBAAKxM,UAAU,aAAf,SAA4B,gDAC5B,qBAAKA,UAAU,eAAf,SACKsM,EAAStQ,WAGhB,qBAAKgE,UAAU,SAAf,SAAyB,aAK/B,W,SC3CGyM,GCeS,SAAC,GAMlB,IALLC,EAKI,EALJA,QACAvR,EAII,EAJJA,KACAwR,EAGI,EAHJA,YACAN,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMlQ,EAAQ4L,mBAAQ,WACpB,OAAO4E,IAAKC,MAAMC,IAAO3R,KACxB,CAACA,IACE0H,EAAiBmF,mBAAQ,kBAAMlN,YAAsB,QAASsB,EAAOjB,KAAO,CAACiB,EAAOjB,IAJtF,EAMwCmF,wBAASrG,GANjD,mBAMG4N,EANH,KAMmBkF,EANnB,OAOkCzM,oBAAS,GAP3C,mBAOG0M,EAPH,KAOgBC,EAPhB,OAQoC3M,mBAAS,IAR7C,mBAQGuF,EARH,KAQiBqH,EARjB,OASwC5M,oBAAS,GATjD,mBASG7C,EATH,KASmB0P,EATnB,OAU0C7M,oBAAS,IAAI8M,MAAOC,WAV9D,mBAUGvF,EAVH,KAUoBwF,EAVpB,OAW0BhN,mBAAS,IAXnC,mBAWG9C,EAXH,KAWY+P,EAXZ,OAY8CjN,wBAASrG,GAZvD,mBAYGgM,EAZH,KAYsBuH,EAZtB,OAaoClN,wBAASrG,GAb7C,mBAaGgL,EAbH,KAaiBwI,EAbjB,OAc4CnN,wBAASrG,GAdrD,mBAcG+L,EAdH,KAcqB0H,EAdrB,QAe8CpN,wBAASrG,GAfvD,qBAeGiM,GAfH,MAesByH,GAftB,SAgBoCrN,mBAxBZ,KAQxB,qBAgBGyF,GAhBH,MAgBiB6H,GAhBjB,SAkBwDtN,mBAAS,MAlBjE,qBAkBGuN,GAlBH,MAkB2BC,GAlB3B,SAmB4DxN,mBAAS,IAnBrE,qBAmBGyN,GAnBH,MAmB6BC,GAnB7B,MAkCJtN,qBAAU,WACR,IAAKmN,IAA0BhU,OAAO8F,KAAKoO,IAA0B3T,OAAQ,CAC3E,IAAM6T,EAASpU,OAAO8F,KAAKoO,IAA0B,GACrDD,GAA0BG,MAE3B,CAACF,GAA0BF,KAE9B,IAAIK,GAAQ,GACZ9R,EAAMa,aAAY,SAAC0O,EAAMpO,GACvB2Q,GAAMnR,KAAKQ,EAAW8K,SAExB,IAAM8F,GAAaC,YAAOF,IA4C1B,OACE,cAAC,KAA4BG,SAA7B,CAAsC1Q,MAAO,CAC3C2Q,sBAxC0B,SAAC,GAY1B,IAXHzQ,EAWE,EAXFA,EACAC,EAUE,EAVFA,EACAyQ,EASE,EATFA,MACA1I,EAQE,EARFA,aACApI,EAOE,EAPFA,eACAD,EAME,EANFA,QACmBgR,EAKjB,EALFvI,kBACAD,EAIE,EAJFA,iBACAE,EAGE,EAHFA,kBACAH,EAEE,EAFFA,aACAd,EACE,EADFA,aAUA,GARA8H,EAAkB,CAAClP,IAAGC,IAAGyQ,UACzBjB,GAAmB,IAAIF,MAAOC,WAC9BH,EAAgBrH,GAChBsH,EAAkB1P,GAClB8P,EAAW/P,GACXgQ,EAAqBgB,GACrBd,EAAoB1H,GACpB2H,GAAqBzH,GACjBjB,GAAgBgB,IAAsBuI,EACxCf,EAAgBxI,OACX,CACL,IAAMmD,EAAStG,EAAgB0M,EAAsB3L,EAAe2L,GAAsBjT,QAAQ8M,MAC5FC,EAAU,GACZ9E,EAAI,EACRX,EAAe2L,GAAsBjT,QAAQqB,SAAQ,SAAAwG,GACnDkF,EAAQlF,GAAUgF,EAAO5E,GACzBA,OAEFiK,EAAgBnF,GAElBsF,QAAiC3T,IAAjB8L,EA5FU,IA4F2CA,IAQnE0I,wBAvE4B,SAAC1S,EAAInC,GACnCoU,GAA4B,2BACvBD,IADsB,kBAExBhS,EAAKnC,MAqEN8U,0BAjE8B,SAAA3S,GAChC,IAAM4S,EAAgB,eAAOZ,WACtBY,EAAiB5S,GACxBiS,GAA4BW,IA+D1Bd,0BACAC,6BACAc,oBAAoB,2BACf/G,GADc,IAEjBhC,eAEArI,UAEAwI,mBACAC,oBACAC,qBACAzI,iBACAsI,gBACAd,kBAjBJ,SAoBA,sBAAKjF,UAAU,kBAAf,UACE,oCACE,gCACE,4BACE,wBAAQA,UAAWgN,EAAc,YAAa,GAAItK,QAAS,kBAAMuK,GAAgBD,IAAjF,6CAIF,qBAAIhN,UAAS,oBAAegN,EAAc,YAAc,IAAxD,UACE,yGAGA,gDACgB,mBAAGtJ,OAAO,QAAQmL,KAAMlC,EAAxB,mDAEhB,sHAGA,6GAGA,2HAKJ,cAAC,WAAD,CAAUmC,SAAU,6CAApB,SACE,cAACpC,EAAD,MAEF,cAAC,GAAD,CAAWL,SAAUA,EAAUC,SAAUA,OAE3C,gCACE,qBAAKtM,UAAU,MAAf,SACE,cAAC8M,GAAD,eAEO,CACD1Q,QAKAyJ,eACAhD,iBACArF,UACAqK,iBACAD,eA5GS,SAAAsE,GAAU,IACxBrO,EAAeqO,EAAfrO,EAAGC,EAAYoO,EAAZpO,EAAGyQ,EAASrC,EAATqC,MACbxB,EAAkB,CAAClP,IAAGC,IAAGyQ,WA2GbzG,kBACA9B,mBACAC,oBACAC,qBACAzI,iBACAsI,gBAEAd,eAEAa,qBA/Ee,SAAAiJ,GAC3B7B,EAAgB6B,IA+EJnM,uBAAwB,kBAAMuK,GAAmB1P,IAEjDqF,gBAAiB,SAACQ,GAAD,OAAgBiK,EAAWjK,IAE5CgD,qBAAsB,SAAAtM,GAAG,OAAI4T,GAAgB5T,IAC7CmM,yBAA0B,SAACnM,GAAD,OAAS0T,EAAoB1T,IACvDoM,0BAA2B,SAACpM,GAAD,OAASwT,EAAqBxT,IACzDqM,0BAA2B,SAACrM,GAAD,OAAS2T,GAAqB3T,IACzDuM,qBAAsB,SAAAvM,GAAG,OAAIyT,EAAgBzT,IAE7C2N,QAAS,CACPI,SAAU,CACR7L,IAAKiS,GAAW,GAChBhS,IAAKgS,GAAW,kB,qBCnMrB,SAASa,GAAT,GA8BX,IA7BFC,EA6BC,EA7BDA,UACAC,EA4BC,EA5BDA,SAEAC,EA0BC,EA1BDA,UACAC,EAyBC,EAzBDA,SAEAC,EAuBC,EAvBDA,aACAC,EAsBC,EAtBDA,cACAC,EAqBC,EArBDA,cACAC,EAoBC,EApBDA,gBAEAC,EAkBC,EAlBDA,WACA5J,EAiBC,EAjBDA,aAEAC,EAeC,EAfDA,qBACA4J,EAcC,EAdDA,mBAEAC,EAYC,EAZDA,kBACAC,EAWC,EAXDA,kBACAC,EAUC,EAVDA,sBACAC,EASC,EATDA,qBACAC,EAQC,EARDA,sBACAC,EAOC,EAPDA,wBAEAC,EAKC,EALDA,iBACAC,EAIC,EAJDA,iBAEArN,EAEC,EAFDA,eACAoC,EACC,EADDA,aACC,EAEmC3E,oBAAS,GAF5C,mBAEMkG,EAFN,KAEkBC,EAFlB,KAGD,OACE,qCACE,wBAAQ/D,QAAS,kBAAM+D,GAAeD,IAAaxG,UAAW0G,IAAG,gBAAiB,CAAC,aAAcF,IAAjG,SACG,cAEH,qBAAIxG,UAAW0G,IAAG,cAAe,CAAC,cAAeF,IAAjD,UAEE,oBAAIxG,UAAU,oBAAd,SACA,sBAAM2G,SAAU,SAAApH,GAAC,OAAIA,EAAEqH,kBAAvB,SACE,uBAAO7L,KAAK,OAAO0I,SAXA,SAAAlE,GAAC,OAAIuG,EAAqBvG,EAAEmE,OAAO/F,QAWLkJ,YAAY,aAAalJ,MAAOkI,QAGnF,oBAAI7F,UAAU,oBAAd,SACE,cAAC,EAAD,eAEO,CACDzE,QAASsH,EACTe,UAAW,CACT,CACE5H,MAAO,eACPyH,SAAUkM,EACVhS,MAAOsR,EACPlU,KAAM,UAER,CACEiB,MAAO,iBACPyH,SAAUwM,EACVtS,MAAOuR,EACPnU,KAAM,WAER,CACEiB,MAAO,eACPyH,SAAUmM,EACVjS,MAAOwR,EACPpU,KAAM,UAER,CACEiB,MAAO,iBACPyH,SAAUyM,EACVvS,MAAOyR,EACPrU,KAAM,WAER,CACEiB,MAAO,oBACPyH,SAAUqM,EACVnS,MAAO0R,EACPtU,KAAM,UAER,CACEiB,MAAO,qBACPyH,SAAUoM,EACVlS,MAAO2R,EACPvU,KAAM,SAER,CACEiB,MAAO,oBACPyH,SAAUsM,EACVpS,MAAO4R,EACPxU,KAAM,UAER,CACEiB,MAAO,uCACPyH,SAAUiM,EACV/R,MAAO8R,EACP1U,KAAM,WAER,CACEiB,MAAO,wCACPyH,SAAUuM,EACVrS,MAAO6R,EACPzU,KAAM,iBASduU,GAAmC,YAAlBA,EACjB,cAAC,EAAD,CACErK,aAAcA,IAEd,W,OChHd,SAASkL,GAAT,GA6BI,IA3BFjQ,EA2BC,EA3BDA,MAAOgL,EA2BN,EA3BMA,OACP/P,EA0BC,EA1BDA,KAEA8T,EAwBC,EAxBDA,UACAC,EAuBC,EAvBDA,SACAC,EAsBC,EAtBDA,UACAC,EAqBC,EArBDA,SACAC,EAoBC,EApBDA,aACAC,EAmBC,EAnBDA,cACAC,EAkBC,EAlBDA,cAkBC,IAjBDC,uBAiBC,SAfDC,EAeC,EAfDA,WAeC,IAdD5J,oBAcC,MAdc,GAcd,EAZDC,EAYC,EAZDA,qBACA4J,EAWC,EAXDA,mBAEAC,EASC,EATDA,kBACAC,EAQC,EARDA,kBACAC,EAOC,EAPDA,sBACAC,EAMC,EANDA,qBACAC,EAKC,EALDA,sBACAE,EAIC,EAJDA,iBACAC,EAGC,EAHDA,iBACAF,EAEC,EAFDA,wBAEC,IADDnN,sBACC,MADgB,GAChB,EAEKuN,EAAoBlU,YAAI,CAACgE,EAAOgL,IAEhCmF,EAAQZ,EAAaa,SAAStS,KAAKC,KAAKmS,EAAoBA,EAAoB,IAAMA,EACtFG,EAASd,EAAaa,SAAStS,KAAKC,KAAKmS,EAAoBA,EAAoB,IAAMA,EAEvFI,EAAaJ,EAAoB,IACjCK,EAAaL,EAAoB,GACjCM,EAASL,EAAQ,GAEnBM,EAAS,CAACD,EAAQL,EAAiB,EAATK,GAC1BE,EAAS,CAACF,EAAQH,EAAkB,EAATG,GAC3BxB,IACFyB,EAASA,EAAOE,WAEdzB,IACFwB,EAASA,EAAOC,WAKlB,IAOI5L,EAWA6L,EAlBEC,EAAO9B,GAA2B,YAAdA,EAA2BhI,cAAcE,MAAMwJ,GAAQzJ,OAAO,CAAC,EAAG,IAAM,kBAAM,GAClG8J,EAAO7B,GAA2B,YAAdA,EAA2BlI,cAAcE,MAAMyJ,GAAQ1J,OAAO,CAAC,EAAG,IAAM,kBAAM,GAClG+J,EAAU5B,GAAiC,YAAjBA,EAA8BpI,cAAcC,OAAOkH,YAAOjT,EAAKd,KAAI,SAAAoB,GAAC,OAAKA,EAAE4T,QAAiBlI,MAAM,CAACqJ,EAAYC,IAAe,kBAAM,GAGhKnI,EAAUgH,GAAmC,YAAlBA,EAA8BxN,EAAgBwN,EAAezM,EAAeyM,GAAe/T,QAAQnB,aAAUH,EACxIiX,EAAW,iBAAM,QAEjB5I,IACFrD,EAAepC,EAAeyM,GAAe/T,QAAQF,QAAO,SAACC,EAAK8H,EAAQC,GAAd,mBAAC,eACxD/H,GADuD,kBAEzD8H,EAASkF,EAAQjF,OAChB,IACJ6N,EAAW,SAAAlX,GACT,OAAOiL,EAAajL,KAKpB6L,EAAazL,QAAUmV,IACzBuB,EAAmB,IAAI9T,IACvB7B,EAAKyB,SAAQ,SAACuU,EAAO9N,GACL8N,EAAM5B,GAAenE,cACzBnP,SAAS4J,IACjBiL,EAAiBzT,IAAIgG,OAI3B,IAAI+N,EAAkB,CAACxS,OAAQ,GAC3B6Q,IACF2B,EAAkB,CAChBxS,QAAS,GACTC,UAAW,CAAChB,EAAG,EAAGC,EAAGsS,EAAkB,KAI3C,IAAMiB,EAAS,SAACxT,EAAGC,GAAJ,OAAUa,YAAkB,CAACd,IAAGC,KAAIsT,IA1DlD,EA4DgCzS,YAAkB,CACjDd,EAAG,EACHC,EAAG,GACFsT,GAHOE,GA5DT,EA4DMzT,EAAe0T,GA5DrB,EA4DkBzT,EA5DlB,GAgEgCa,YAAkB,CACjDd,EAAGwS,EACHvS,EAAG,GACFsT,GAHOI,GAhET,GAgEM3T,EAAe4T,GAhErB,GAgEkB3T,EAhElB,GAoEgCa,YAAkB,CACjDd,EAAGwS,EACHvS,EAAGyS,GACFa,GAHOM,GApET,GAoEM7T,EAAe8T,GApErB,GAoEkB7T,EApElB,GAwEgCa,YAAkB,CACjDd,EAAG,EACHC,EAAGyS,GACFa,GAHOQ,GAxET,GAwEM/T,EAAegU,GAxErB,GAwEkB/T,EAKnB,OACE,qCACI,sBAAKkC,UAAU,cAAcE,MAAOkQ,EAAmBlF,OAAQkF,EAA/D,UACE,yBACE0B,OAAM,UAAKR,GAAL,YAAgBC,GAAhB,YAA2BC,GAA3B,YAAsCC,GAAtC,YAAiDC,GAAjD,YAA4DC,GAA5D,YAAuEC,GAAvE,YAAkFC,IACxF3R,MAAOmQ,EACPnF,OAAQqF,EACRwB,KAAK,UAEP,oBAAGC,UAAS,oBAAevC,EAAa,EAAIiB,EAAS,EAAzC,aAA+CjB,GAAciB,EAAS,EAAtE,YAA2EjB,EAAa,cAAgB,IAApH,UACE,oBAAGzP,UAAU,iBAAb,UACE,sBACEiS,GAAIZ,EAAOX,EAAQA,GAAQ7S,EAC3BqU,GAAIb,EAAOX,EAAQA,GAAQ5S,EAC3BqU,GAAId,EAAOX,EAAQH,EAAkB,EAATG,GAAY7S,EACxCuU,GAAIf,EAAOX,EAAQH,EAAkB,EAATG,GAAY5S,EACxCuU,OAAQ,UAGRrB,EAAKsB,OACLtB,EAAKsB,QACJjY,KAAI,SAAAkY,GAAS,IAAD,EAEIlB,EAAOX,EAAQM,EAAKuB,IAA5B1U,EAFI,EAEJA,EAAGC,EAFC,EAEDA,EAFC,EAGYuT,EAAOX,EAAO,EAAGM,EAAKuB,GAAQ7B,EAAO,GAAlDuB,EAHC,EAGJpU,EAAUqU,EAHN,EAGGpU,EAHH,EAIYuT,EAAOX,EAAO,EAAGM,EAAKuB,IAAnCJ,EAJC,EAIJtU,EAAUuU,EAJN,EAIGtU,EACd,OACE,8BACE,sBAAM0U,WAAW,MAAM3U,EAAGoU,EAAInU,EAAGoU,EAAjC,SACGK,IAEH,sBACEN,GAAIpU,EACJqU,GAAIpU,EACJqU,GAAIA,EACJC,GAAIA,EACJC,OAAQ,YATJE,MAed,mBACEP,UAAWvC,EAAU,oBAAgBY,EAAM,EAAa,IAATK,EAA1B,aAA2CH,EAAkB,EAATG,EAApD,sCAA8FA,EAAS,EAAI,EAA3G,KADvB,SAGE,sBACE1Q,UAAU,qBACVwS,WAAY/C,EAAa,MAAQ,QAFnC,SAIGN,SAIP,oBAAGnP,UAAU,mBAAb,UACE,sBACEiS,GAAIZ,EAAOX,EAAQH,EAAkB,EAATG,GAAY7S,EACxCqU,GAAIb,EAAOX,EAAQH,EAAkB,EAATG,GAAY5S,EACxCqU,GAAId,EAAOhB,EAAiB,EAATK,EAAYH,EAAkB,EAATG,GAAY7S,EACpDuU,GAAIf,EAAOhB,EAAiB,EAATK,EAAYH,EAAkB,EAATG,GAAY5S,EACpDuU,OAAQ,UAGRtB,EAAKuB,OACLvB,EAAKuB,QACJjY,KAAI,SAAAkY,GAAS,IAAD,EACIlB,EAAON,EAAKwB,GAAOhC,EAAkB,EAATG,GAApC7S,EADI,EACJA,EAAGC,EADC,EACDA,EADC,EAEYuT,EAAON,EAAKwB,GAAOhC,EAAkB,KAATG,GAAzCuB,EAFC,EAEJpU,EAAUqU,EAFN,EAEGpU,EAFH,EAGYuT,EAAON,EAAKwB,GAAOhC,EAAkB,KAATG,GAAzCyB,EAHC,EAGJtU,EAAUuU,EAHN,EAGGtU,EACd,OACE,8BACE,sBAAM0U,WAAW,SAAS3U,EAAGsU,EAAIrU,EAAGsU,EAApC,SACGG,IAEH,sBACEN,GAAIpU,EACJqU,GAAIpU,EACJqU,GAAIF,EACJG,GAAIF,EACJG,OAAQ,YATJE,MAed,mBACEP,UAAWvC,EAAU,oBAAgBY,EAAiB,IAATK,EAAxB,aAAyCH,EAASG,EAAlD,oCAAsFL,EAAiB,IAATK,EAA9F,aAA+GH,EAASG,EAAS,EAAI,EAArI,KADvB,SAGE,sBACE1Q,UAAU,qBACVwS,WAAY/C,EAAa,MAAQ,QAFnC,SAIGR,SAIP,oBAAGjP,UAAW,kBAAd,UAGMgR,EAAKsB,OACLtB,EAAKsB,QACJjY,KAAI,SAAAkY,GAAI,OACP,sBAEEN,GAAIZ,EAAOX,EAAQM,EAAKuB,IAAO1U,EAC/BqU,GAAIb,EAAOX,EAAQM,EAAKuB,IAAOzU,EAC/BqU,GAAId,EAAOhB,EAAiB,EAATK,EAAYM,EAAKuB,IAAO1U,EAC3CuU,GAAIf,EAAOhB,EAAiB,EAATK,EAAYM,EAAKuB,IAAOzU,EAC3CuU,OAAO,aALFE,MAWXxB,EAAKuB,OACLvB,EAAKuB,QACJjY,KAAI,SAAAkY,GAAI,OACP,sBAEEN,GAAIZ,EAAON,EAAKwB,GAAO7B,GAAQ7S,EAC/BqU,GAAIb,EAAON,EAAKwB,GAAO7B,GAAQ5S,EAC/BqU,GAAId,EAAON,EAAKwB,GAAOlC,EAAiB,EAATK,GAAY7S,EAC3CuU,GAAIf,EAAON,EAAKwB,GAAOlC,EAAiB,EAATK,GAAY5S,EAC3CuU,OAAO,aALFE,SAUb,mBAAGvS,UAAU,yBAAb,SAEE7E,EACCsX,MAAK,SAACC,EAAGC,GACR,OAAI3B,EAAK0B,EAAEvD,IAAc6B,EAAK2B,EAAExD,IACvB,GAED,KAET9U,KAAI,SAAC8W,EAAO9N,GAAU,MAIRgO,EAAON,EAAKI,EAAMlC,IAAa+B,EAAKG,EAAMhC,KAAlDtR,EAJgB,EAIhBA,EAAGC,EAJa,EAIbA,EACJ8U,EAAU/U,EAAIoT,EAAQE,EAAM9B,IAAiBe,EAAoB,IACjEyC,EAASpD,EAAa3R,EAAIsS,EAAoB,IAAMtS,EAAIsS,EAAoB,IAC5E0C,EAAqBzB,EAAON,EAAKI,EAAMlC,IAAcgC,EAAQE,EAAM9B,IAAgB2B,EAAKG,EAAMhC,KAClG,GAAIK,EAAiB,CAAC,IAAD,EACM6B,EAAQhB,EAAiB,IAATK,EAAcA,EAASrN,GAASkN,EAAkB,EAATG,GAAcvV,EAAKf,QACrGwY,EAFmB,EACd/U,EAELgV,EAHmB,EACL/U,EAOhB,OACE,oBAEEkC,UAAU,cACV+S,SAAUjC,GAAoBA,EAAiB1T,IAAIiG,GAAS,EAAI,GAHlE,UAKE,wBACEqD,GAAI7I,EACJmV,GAAIlV,EACJmV,EAAGhC,EAAQE,EAAM9B,IACjB0C,KAAMb,EAASC,EAAM7B,IACrByD,QAAS,KAGTvD,EACA,sBACEyC,GAAIa,EAAmBjV,EACvBqU,GAAIY,EAAmBhV,EACvBqU,GAAIS,EACJR,GAAIS,EACJR,OAAO,YACPa,gBAAgB,QAEhB,KAEJ,mBACElB,UAAS,oBAAeY,EAAf,aAA0BC,EAA1B,KADX,SAGE,sBACEb,UAAWvC,EAAa,cAAe,GACvCxP,MAAO,CACLkT,SAAU1D,GAAcD,EAAkBe,EAAS,QAAKtW,GAH5D,SAMGkX,EAAM5B,SAhCNlM,cA0CjB,cAAC2L,GAAD,eAEO,CACDC,YACAE,YACAD,WACAE,WACAC,eACAC,gBACAC,gBACAC,kBAEAC,aACA5J,eAEAC,uBACA4J,qBAEAC,oBACAC,oBACAC,wBACAC,uBACAC,wBACAC,0BACAC,mBACAC,mBAEArN,iBACAoC,qBCnVCkL,OD2VA,SAAyCvW,GACtD,OACE,qBAAKoG,UAAU,iCAAf,SAEA,cAAC,KAAD,UAEI,SAAAoT,GAAU,OAAI,cAAC,GAAD,0CAA2BxZ,GAAUwZ,WEnT5CC,GA7CG,SAAC,GAKZ,IAJL3G,EAII,EAJJA,QACAC,EAGI,EAHJA,YACAN,EAEI,EAFJA,SACAC,EACI,EADJA,SACI,EACkChM,oBAAS,GAD3C,mBACG0M,EADH,KACgBC,EADhB,KAEJ,OACE,sBAAKjN,UAAU,wCAAf,UACE,oCACE,gCACE,4BACE,wBAAQA,UAAWgN,EAAc,YAAa,GAAItK,QAAS,kBAAMuK,GAAgBD,IAAjF,6CAIF,qBAAIhN,UAAS,oBAAegN,EAAc,YAAc,IAAxD,UACE,yGAGA,gDACgB,mBAAGtJ,OAAO,QAAQmL,KAAMlC,EAAxB,mDAEhB,sHAGA,6GAGA,2HAKJ,cAAC,WAAD,CAAUmC,SAAU,6CAApB,SACE,cAACpC,EAAD,MAEF,cAAC,GAAD,CAAWL,SAAUA,EAAUC,SAAUA,OAE3C,8BC4CSgH,GAlFA,CACb,CACEtX,MAAO,eACPwQ,MAAO,gBACP+G,SAAU,cACVC,UCPWH,IDSb,CACErX,MAAO,0BACPwQ,MAAO,uBACP+G,SAAU,0BACVC,UCbWH,IDeb,CACErX,MAAO,+BACPwQ,MAAO,oBACP+G,SAAU,sBACVC,UCnBWH,IDqBb,CACErX,MAAO,qBACPwQ,MAAO,qBACP+G,SAAU,uBACVpY,KAAM,uCACNqY,UAAW/G,IAEb,CACEzQ,MAAO,4CACPwQ,MAAO,wBACP+G,SAAU,0BACVC,UChCWH,IDkCb,CACErX,MAAO,4BACPwQ,MAAO,gBACP+G,SAAU,uBACVpY,KAAM,uCACNqY,UAAW/G,IAEb,CACEzQ,MAAO,yBACPwQ,MAAO,aACP+G,SAAU,0BACVpY,KAAM,uCACNqY,UAAW/G,IAEb,CACEzQ,MAAO,wBACPwQ,MAAO,YACP+G,SAAU,mBACVpY,KAAM,mCACNqY,UE9CuB,SAAC,GAMrB,IALL9G,EAKI,EALJA,QACAvR,EAII,EAJJA,KACAwR,EAGI,EAHJA,YACAN,EAEI,EAFJA,SACAC,EACI,EADJA,SAEMzJ,EAAiBmF,mBAAQ,kBAAMlN,YAAsB,QAASK,KAAO,CAACA,IADxE,EAEkCmF,oBAAS,GAF3C,mBAEG0M,EAFH,KAEgBC,EAFhB,OAGoC3M,mBAAS,IAH7C,mBAGGuF,EAHH,KAGiBqH,EAHjB,OAK8B5M,wBAASrG,GALvC,mBAKGgV,EALH,KAKcwE,EALd,OAM8BnT,wBAASrG,GANvC,mBAMGkV,EANH,KAMcuE,EANd,OAO4BpT,oBAAS,GAPrC,mBAOG4O,EAPH,KAOayE,EAPb,OAQ4BrT,oBAAS,GARrC,mBAQG8O,EARH,KAQawE,EARb,OASoCtT,wBAASrG,GAT7C,mBASGoV,EATH,KASiBwE,EATjB,OAUsCvT,wBAASrG,GAV/C,mBAUGqV,EAVH,KAUkBwE,EAVlB,OAWsCxT,wBAASrG,GAX/C,mBAWGsV,EAXH,KAWkBwE,EAXlB,OAY0CzT,oBAAS,GAZnD,mBAYGkP,EAZH,KAYoBwE,EAZpB,OAcgC1T,oBAAS,GAdzC,oBAcGmP,GAdH,MAcewE,GAdf,SAgBwD3T,mBAAS,MAhBjE,qBAgBGuN,GAhBH,MAgB2BC,GAhB3B,SAiB4DxN,mBAAS,IAjBrE,qBAiBGyN,GAjBH,MAiB6BC,GAjB7B,MAgCEM,GAAwB,SAAC,GAcxB,IAbM4F,EAaP,EAbJjF,UACWkF,EAYP,EAZJhF,UAEUiF,EAUN,EAVJlF,SACUmF,EASN,EATJjF,SAEckF,EAOV,EAPJjF,aACekF,EAMX,EANJjF,cACekF,EAKX,EALJjF,cACiBkF,EAIb,EAJJjF,gBAEYkF,EAER,EAFJjF,WACckF,EACV,EADJ9O,aAEA4N,EAAaS,GACbR,EAAaS,GACbR,EAAYS,GACZR,EAAYS,GACZR,EAAgBS,GAChBR,EAAiBS,GACjBR,EAAiBS,GACjBP,GAAcS,GACdxH,EAAgByH,GAChBX,EAAmBS,IAGrB/T,qBAAU,WACR,IAAKmN,IAA0BhU,OAAO8F,KAAKoO,IAA0B3T,OAAQ,CAC3E,IAAM6T,EAASpU,OAAO8F,KAAKoO,IAA0B,GACrDD,GAA0BG,GAC1BK,GAAsBP,GAAyBE,OAEhD,CAACF,GAA0BF,KAM9B,OACE,cAAC,KAA4BQ,SAA7B,CAAsC1Q,MAAO,CAC3C2Q,yBACAG,wBAvD4B,SAAC1S,EAAInC,GACnCoU,GAA4B,2BACvBD,IADsB,kBAExBhS,EAAKnC,MAqDN8U,0BAjD8B,SAAA3S,GAChC,IAAM4S,EAAgB,eAAQZ,WACvBY,EAAiB5S,GACxBiS,GAA4BW,IA+C1Bd,0BACAC,6BACAc,oBAAqB,CACnBK,YACAE,YAEAD,WACAE,WAEAC,eACAC,gBACAC,gBACAC,kBAEAC,cACA5J,iBAnBJ,SAsBE,sBAAK7F,UAAU,kBAAf,UACE,oCACE,gCACE,4BACE,wBAAQA,UAAWgN,EAAc,YAAc,GAAItK,QAAS,kBAAMuK,GAAgBD,IAAlF,6CAIF,qBAAIhN,UAAS,oBAAegN,EAAc,YAAc,IAAxD,UACE,yGAGA,gDACgB,mBAAGtJ,OAAO,QAAQmL,KAAMlC,EAAxB,mDAEhB,sHAGA,6GAGA,2HAKJ,cAAC,WAAD,CAAUmC,SAAU,6CAApB,SACE,cAACpC,EAAD,MAEF,cAAC,GAAD,CAAWL,SAAUA,EAAUC,SAAUA,OAE3C,gCACE,qBAAKtM,UAAU,MAAf,SACE,cAAC4U,GAAD,eAEK,CACDzZ,OACA0H,iBAEAoM,YACAC,WACAC,YACAC,WACAC,eACAC,gBACAC,gBACAC,kBAEAC,cACA5J,eAEAC,qBA7Ee,SAAAiJ,GAC3B7B,EAAgB6B,IA6EJW,mBAAoB,kBAAMuE,IAAexE,KAEzCE,kBAAmB,SAAC3V,GAAD,OAASyZ,EAAazZ,IACzC4V,kBAAmB,SAAC5V,GAAD,OAAS0Z,EAAa1Z,IAEzCiW,iBAAkB,kBAAM0D,GAAazE,IACrCgB,iBAAkB,kBAAM0D,GAAaxE,IAErCS,sBAAuB,SAAC7V,GAAD,OAAS8Z,EAAiB9Z,IACjD8V,qBAAsB,SAAC9V,GAAD,OAAS6Z,EAAgB7Z,IAC/C+V,sBAAuB,SAAC/V,GAAD,OAAS+Z,EAAiB/Z,IACjDgW,wBAAyB,SAAAhW,GAAG,OAAIga,EAAmBha,kBFnHjE,CACEgC,MAAO,oBACPwQ,MAAO,kBACP+G,SAAU,iBACVC,UC3DWH,KEgBA,SAASwB,KACtB,IAAMC,EAAc,SAAC,GAAD,IAClB3Z,EADkB,EAClBA,KACAwR,EAFkB,EAElBA,YACAD,EAHkB,EAGlBA,QACAqI,EAJkB,EAIlBA,cACA1I,EALkB,EAKlBA,SACAC,EANkB,EAMlBA,SANkB,OAQhB,cAAC,EAAD,CAAYlM,IAAKjF,EAAI,UAAM6Z,qBAAN,iBAAqC7Z,QAASlB,EAAnE,SAEI,SAAAkB,GAAI,OACF,cAAC4Z,EAAD,eAEO,CACDpI,cACAD,UACAL,WACAC,WACAnR,cAQhB,OACE,cAAC,IAAD,UACE,sBAAKY,GAAG,UAAR,UACE,8BACE,6BAEIuX,GAAOjZ,KAAI,WAAiBgJ,GAAjB,IAAErH,EAAF,EAAEA,MAAOwQ,EAAT,EAASA,MAAT,OACT,oBAAgBxM,UAAU,oBAA1B,SACE,cAAC,IAAD,CAAMuM,GAAIC,EAAV,SACGxQ,KAFIqH,UASjB,+BACE,eAAC,IAAD,WAEIiQ,GAAOjZ,KAAI,WAMRgJ,GAAW,IAJZmJ,EAIW,EAJXA,MACA+G,EAGW,EAHXA,SACApY,EAEW,EAFXA,KACW4Z,EACA,EADXvB,UAEMnH,EAAWhJ,EAAQ,EAAIiQ,GAAOjQ,EAAQ,QAAKpJ,EAC3CqS,EAAWjJ,EAAQiQ,GAAOlZ,OAAS,EAAIkZ,GAAOjQ,EAAQ,QAAKpJ,EAC3DyS,EAAUuI,IAAMC,MAAK,kBAAM,OAAO,YAAuC3B,OACzE5G,EAAW,UAAMwI,IAAN,mCAA2C5B,GAC5D,OACE,cAAC,IAAD,CAAmB6B,KAAM5I,EAAzB,SACGsI,EAAY,CAAC3Z,OAAMwR,cAAaD,UAASqI,gBAAe1I,WAAUC,cADzDjJ,MAOlB,cAAC,IAAD,CAAUkJ,GAAI+G,GAAO,GAAG9G,kBCnFpC,IAYe6I,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBjW,MAAK,YAAkD,IAA/CkW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M,gCChBA,6CAEaa,EAFb,OAE2CjB,EAAMkB,cAAc,M","file":"static/js/main.e2584538.chunk.js","sourcesContent":["import { uniq } from \"lodash\";\nimport { min, max } from 'd3-array';\n\nconst serializeValue = val => {\n  if (typeof val === 'string')\n    return `'${val}'`;\n  else if (typeof val === 'object')\n    return JSON.stringify(val);\n  else return val;\n}\n\nconst buildComponentCode = (componentName, props) => `<${componentName} \n  ${Object.entries(props)\n    .filter(([_key, val]) => {\n      return !(val === undefined || val === false || val === '' || (Array.isArray(val) && !val.length))\n    })\n    .map(([key, val]) => `${key}={${serializeValue(val)}}`)\n    .join(' \\n  ')\n    .trim()\n  }\n/>`\n\nexport const buildGraphCode = props => buildComponentCode('GraphBlock', props)\n\nexport const buildIceCreamScatterPlotCode = props => buildComponentCode('IceCreamBlock', props)\n\nexport const computeFiltersOptions = (type, ...args) => {\n  switch (type) {\n    case 'table':\n      return computeTableOptions(...args);\n    case 'graph':\n    default:\n      return computeGraphFiltersOptions(...args);\n  }\n}\n\nconst computeTableOptions = data => {\n  return data.columns.reduce((res, key) => {\n    const options = uniq(data.map(d => d[key]))\n    let type = 'string';\n\n    // if number\n    if (!options.find(o => isNaN(+o))) {\n      if (!options.find(o => !Number.isInteger(+o))) {\n        type = 'integer';\n      } else {\n        type = 'float'\n      }\n    }\n    const props = {\n      id: key,\n      title: key,\n      type,\n      options\n    }\n    if (['float', 'integer'].includes(type)) {\n      props.options = props.options.map(o => +o);\n      props.min = min(props.options);\n      props.max = max(props.options);\n    }\n    return {\n      ...res,\n      [key]: props\n    }\n  }, {})\n}\nexport const computeGraphFiltersOptions = (graph, gexfData) => {\n  const domparser = new DOMParser()\n  const doc = domparser.parseFromString(gexfData, 'application/xml')\n  const attrs = doc.querySelectorAll('attributes.node attribute');\n  const categories = [];\n\n  const FORBIDDEN_ATTRS = ['weight'];\n\n  attrs.forEach(attr => {\n    const id = attr.getAttribute('id');\n    if (FORBIDDEN_ATTRS.includes(id)) return;\n\n    const title = attr.getAttribute('title');\n    const type = attr.getAttribute('type');\n    categories.push({\n      id,\n      title,\n      type,\n      options: new Set()\n    })\n  })\n  graph.forEachNode((_node, props) => {\n    categories.forEach(cat => {\n      if (!cat.options.has(props[cat.id]))\n        cat.options.add(props[cat.id])\n    })\n  })\n  return categories.reduce((res, cat) => ({ ...res, [cat.id]: cat }), {});\n}\n\nexport const evalIfNodeMatches = (attributes, filters, filtersModeAnd) => {\n  if (filtersModeAnd) {\n    const oneFilterDoesNotMatches = filters.find(({ attribute, value }) => attributes[attribute] !== '' + value) !== undefined;\n    return !oneFilterDoesNotMatches;\n  } else {\n    const oneFilterMatches = filters.find(({ attribute, value }) => attributes[attribute] === '' + value) !== undefined;\n    return oneFilterMatches;\n  }\n}\n\nconst radiansToDegrees = radians => radians * (180 / Math.PI);\nexport const degreesToRadians = degrees => degrees * (Math.PI / 180);\n\nexport const cartesianToPolar = (x, y) => {\n  const distance = Math.sqrt(x * x + y * y);\n  const radians = Math.atan2(y, x);\n  const degrees = radiansToDegrees(radians);\n  return { distance, radians, degrees }\n}\n\nexport const polarToCartesian = (distance, degrees) => {\n  const radians = degreesToRadians(degrees);\n  return {\n    x: distance * Math.cos(radians),\n    y: distance * Math.sin(radians)\n  }\n}\n\nexport const transformGeometry = ({ x, y }, { rotate, translate }) => {\n  const { degrees, distance } = cartesianToPolar(x, y);\n  let finalDegrees = degrees;\n  if (rotate) {\n    finalDegrees += rotate;\n  }\n  let { x: newX, y: newY } = polarToCartesian(distance, finalDegrees);\n  if (translate) {\n    if (translate.x) {\n      newX += translate.x;\n    }\n    if (translate.y) {\n      newY += translate.y;\n    }\n  }\n  return { x: newX, y: newY }\n}","var map = {\n\t\"./00_home.mdx\": [\n\t\t347,\n\t\t10\n\t],\n\t\"./01_couverture_media.mdx\": [\n\t\t348,\n\t\t11\n\t],\n\t\"./02_detectcritic.mdx\": [\n\t\t349,\n\t\t12\n\t],\n\t\"./03_graphclusters.mdx\": [\n\t\t350,\n\t\t3\n\t],\n\t\"./04_timelineclusters.mdx\": [\n\t\t351,\n\t\t13\n\t],\n\t\"./05_toporobotalgo.mdx\": [\n\t\t352,\n\t\t4\n\t],\n\t\"./06_explore_entities.mdx\": [\n\t\t353,\n\t\t5\n\t],\n\t\"./07_IssueVERB.mdx\": [\n\t\t354,\n\t\t6\n\t],\n\t\"./08_NERdate.mdx\": [\n\t\t355,\n\t\t14\n\t],\n\t\"./dates-analysis.mdx\": [\n\t\t356,\n\t\t7\n\t],\n\t\"./graph-critics.mdx\": [\n\t\t357,\n\t\t8\n\t],\n\t\"./verbs-analysis.mdx\": [\n\t\t358,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 343;\nmodule.exports = webpackAsyncContext;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { csvParse, tsvParse } from 'd3-dsv';\n\nconst Loader = ({percentsLoaded = 0}) =>{\n  return  (\n    <div className=\"loader-container\">\n      <div className=\"loader\">\n        <div className=\"loading-bar\" style={{width: percentsLoaded + '%'}} />\n      </div>\n   </div>\n)\n}\n\nconst DataLoader = ({url, children}) => {\n  const [data, setData] = useState(null);\n  const [loadingFraction, setLoadingFraction] = useState(0);\n  useEffect(() => {\n    if (url) {\n      axios.get(url, {\n        onDownloadProgress: progressEvent => {\n          const status = progressEvent.loaded / progressEvent.total;\n          setLoadingFraction(status);\n        }\n      })\n      .then(({data: inputData}) => {\n        setTimeout(() => {\n          let data = inputData;\n          if (url.split('.').pop() === 'csv') {\n            data = csvParse(inputData);\n          } else if (url.split('.').pop() === 'tsv') {\n            data = tsvParse(inputData);\n          }\n          setData(data);\n        })\n      })\n    }\n  }, [url]);\n\n  if (!url) {\n    return children();\n  }\n\n  return data ? children(data)\n  : \n  <Loader percentsLoaded={loadingFraction * 100} />\n}\n\n\nexport default DataLoader;","import DataLoader from './DataLoader'\n\nexport default DataLoader","import iwanthue from 'iwanthue';\n\nconst DEFAULT_COLOR_SPACE = {\n  cmin: 25.59,\n  cmax: 55.59,\n  lmin: 60.94,\n  lmax: 90.94\n};\n\nconst SINGLE_COLOR_PALETTE = ['#999'];\n\nexport function generatePalette(name, count) {\n  if (count === 1) return SINGLE_COLOR_PALETTE;\n\n  return iwanthue(count, {\n    colorSpace: DEFAULT_COLOR_SPACE,\n    seed: name,\n    clustering: 'force-vector'\n  });\n}","import {useRef, useEffect} from 'react';\n// import Graph from 'graphology-types';\n\n\nexport function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\n","import ControlButton from './ControlButton';\n\nexport default ControlButton;","import React from 'react';\n\nexport default function ControlButton({children, onClick}) {\n  return (\n    <button className=\"control-button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}","import FiltersEditor from './FiltersEditor';\n\nexport default FiltersEditor;","\nimport React, {useState} from 'react';\n\nimport ControlButton from '../ControlButton';\n\nexport default function FiltersEditor ({\n  onToggleFiltersModeAnd,\n  filtersModeAnd,\n  filtersOptions,\n  onFiltersChange,\n  filters\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [newFilterAttribute, setNewFilterAttribute] = useState(undefined);\n\n  let newFilterOptions = [];\n  if (newFilterAttribute) {\n    filtersOptions[newFilterAttribute].options.forEach(option => newFilterOptions.push(option))\n  }\n\n  const handleNewFilterSubmit = (e) => {\n    const value = e.target.value;\n    onFiltersChange([\n      ...filters,\n      {\n        attribute: newFilterAttribute,\n        value\n      }\n    ])\n    setNewFilterAttribute(undefined);\n  }\n  const handleNewFilterChange = e => {\n    const val = e.target.value;\n    if (val.length)\n      setNewFilterAttribute(val)\n  }\n  return (\n    <div className=\"FiltersEditor\">\n      <div>\n        <button className={isOpen ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Filtres ...\n        </button>\n      </div>\n      {\n        isOpen &&\n        <div>\n          <ControlButton  onClick={onToggleFiltersModeAnd}>\n            Mode des filtres: {filtersModeAnd ? 'AND' : 'OR'}\n          </ControlButton>\n          {filters.length ?\n          <div>\n            <h6>Filtres existants</h6>\n            <ul className=\"existing-filters\">\n              {\n                filters.map(({attribute, value}, index) => {\n                  const handleDelete = () => {\n                    let newFilters = filters.filter((f, i) => i !== index);\n                    onFiltersChange(newFilters);\n                  }\n                  return (\n                    <li key={index}>\n                      <div>\n                        {attribute} : {value}\n                      </div>\n                      <div>\n                        <button onClick={handleDelete}>\n                        🗑\n                        </button>\n                      </div>\n                    </li>\n                  )\n                })\n              }\n            </ul>\n          </div>\n          : null\n        }\n          <div>\n            <h6>Ajouter un nouveau filtre</h6>\n            <select value={newFilterAttribute || ''} onChange={handleNewFilterChange}>\n              {\n                Object.entries(filtersOptions).map(([id, {title}], index) => {\n                  return (\n                    <option value={id} key={index}>{title}</option>\n                  )\n                })\n              }\n              <option value=\"\">Selectionner</option>\n            </select>\n            {\n              newFilterAttribute !== undefined ?\n              <select value={''} onChange={handleNewFilterSubmit}>\n                {\n                  newFilterOptions.map((id, index) => {\n                    return (\n                      <option value={id} key={index}>{id}</option>\n                    )\n                  })\n                }\n                <option value=\"\">Selectionner</option>\n              </select>\n              : null\n            }\n          </div>\n        </div>\n      }\n      \n    </div>\n  )\n}","import VariablesEditor from './VariablesEditor';\n\nexport default VariablesEditor;","import React, {useState} from 'react';\n\nexport default function VariablesEditor ({\n  options,\n  variables,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const isNotAllDefault = variables.find(v => v.value !== 'default' && v.value !== undefined) !== undefined;\n  return (\n    <div className=\"FiltersEditor VariablesEditor\">\n      <div>\n        <button className={isOpen || isNotAllDefault ? 'is-active' : ''} onClick={() => setIsOpen(!isOpen)}>\n          Variables ...\n        </button>\n      </div>\n      {\n        (isOpen || isNotAllDefault) &&\n        <div>\n          {\n            variables.map(({title, value, onChange, type}, index) => {\n              const getOptions = () => {\n                switch(type) {\n                  case 'color':\n                  case 'string':\n                    return  Object.entries(options)\n                  case 'boolean':\n                    return [['true', {title: 'Oui'}], ['false', {title: 'Non'}]]\n                  case 'number':\n                  default:\n                    return Object.entries(options)\n                    .filter(([_id, option]) => ['integer', 'float'].includes(option.type))\n                }\n              }\n              const activeOptions = [\n                {\n                  value: 'default',\n                  title: 'Défaut'\n                },\n                ...getOptions()\n                  .map(([id, option]) => ({\n                    label: option.title,\n                    value: id\n                  }))\n              ]\n\n              if (activeOptions.length <= 1) {\n                return null;\n              }\n              return (\n                <div key={index}>\n                  <h6>{title} </h6>\n                  <select value={value} onChange={e => {\n                      const newVal = e.target.value;\n                      if (type === 'boolean') {\n                        return onChange(newVal === 'true' ? true : false)\n                      }\n                      return onChange(newVal)\n                    }}>\n                    {\n                      activeOptions.map(({value, label}) => (\n                        <option key={value} value={value}>\n                          {label || 'Défaut'}\n                        </option>\n                      ))\n                    }\n                  </select>\n                </div>\n              )\n            })\n          }\n        </div>\n      }\n      \n    </div>\n  )\n}","\nimport React, {useState, useEffect} from 'react';\nimport { SketchPicker } from 'react-color';\nimport debounce from 'lodash/debounce';\n\nconst ColorItemHandler = ({\n  modality,\n  onChange,\n  color\n}) => {\n  const [isEdited, setEdited] = useState(false);\n  const [editedColor, setEditedColor] = useState(color);\n  useEffect(() => {\n    setEditedColor(color)\n  }, [color]);\n  const debouncedOnChange = debounce(onChange, 300);\n  const handleChange = newColor => {\n    setEditedColor(newColor.hex);\n    debouncedOnChange(newColor.hex);\n  }\n  const handleClose = () => {\n    onChange(editedColor);\n    setEdited(false);\n  }\n  return (\n    <li>\n      <span onClick={() => setEdited(!isEdited)} className=\"legend-color\" style={{background: color}} />\n      <span className=\"legend-modality\">{modality}</span>\n      {\n        isEdited ?\n        <>\n          <div onClick={handleClose} className=\"color-picker-container\">\n            <div onClick={e => {e.stopPropagation()}}>\n              <h5>Choisir la couleur de la modalité \"{modality}\"</h5>\n              <SketchPicker onChange={handleChange} color={editedColor} />\n            </div>\n          </div>\n        </>\n        : null\n      }\n    </li>\n  )\n}\n\nexport default function ColorLegend ({\n  colorPalette,\n  onChange,\n}) {\n  return (\n    <ul className=\"ColorLegend\">\n      {\n        Object.entries(colorPalette)\n        .map(([modality, color]) => {\n          const handleChange = newColor => {\n            onChange({\n              ...colorPalette,\n              [modality] : newColor\n            })\n          }\n          return (\n            <ColorItemHandler onChange={handleChange} key={modality} {...{modality, color}} />\n          )\n        })\n      }\n    </ul>\n  );\n}","import ColorLegend from './ColorLegend';\n\nexport default ColorLegend;","import React, {useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport Slider from 'rc-slider';\nimport debounce from 'lodash/debounce';\n\nimport ControlButton from '../ControlButton';\nimport FiltersEditor from '../FiltersEditor';\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\nconst SLIDER_MARKS = {\n  '0.25': 'défaut'\n};\n\nfunction DebouncedSlider({defaultValue, onChange}) {\n  const [value, setValue] = useState(defaultValue);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue])\n\n  const onSliderChange = newValue => {\n    setValue(newValue);\n    onChange(newValue);\n  };\n\n  return (\n    <Slider\n      min={0}\n      max={1}\n      step={0.01}\n      defaultValue={defaultValue}\n      value={value}\n      onChange={onSliderChange}\n      marks={SLIDER_MARKS}\n    />\n  );\n}\n\n\nexport default function GraphControls({\n  rescale, \n  zoomIn, \n  zoomOut, \n  searchString = '',\n  onSearchStringChange,\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n  labelDensity,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  nodeLabelVariable,\n\n  filtersOptions,\n  filters = [],\n  colorPalette,\n\n  onFiltersChange,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls GraphControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item camera\">\n        \n        <ControlButton onClick={zoomOut}>\n          -\n        </ControlButton>\n        <ControlButton onClick={zoomIn}>\n          +\n        </ControlButton>\n        <ControlButton onClick={rescale}>\n          Recentrer\n        </ControlButton>\n        </li>\n        <li className=\"vis-controls-item\">\n          <form onSubmit={e => e.preventDefault()}>\n            <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n          </form>\n        </li>\n        \n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [{\n                    title: 'Taille des noeuds',\n                    onChange: onNodeSizeVariableChange,\n                    value: nodeSizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des noeuds',\n                    value: nodeColorVariable,\n                    onChange: onNodeColorVariableChange,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Label des noeuds',\n                    value: nodeLabelVariable,\n                    onChange: onNodeLabelVariableChange,\n                    type: 'string'\n                  }\n                ],\n              }\n            }\n          />\n        </li>\n        {\n            nodeColorVariable && nodeColorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n              onChange={onColorPaletteChange}\n            />\n            : null\n          }\n        <li className=\"vis-controls-item\">\n        <FiltersEditor\n          {\n            ...{\n              onToggleFiltersModeAnd,\n              filtersModeAnd,\n              filtersOptions,\n              onFiltersChange,\n              filters\n            }\n          }\n        />\n        </li>\n        <li className=\"vis-controls-item slider-wrapper\">\n          <form onSubmit={e => e.preventDefault()}>\n            <h5>Densité des labels</h5>\n            <div className=\"slider-container\">\n                <DebouncedSlider\n                  defaultValue={labelDensity}\n                  onChange={debounce(onLabelDensityChange, 300)}\n                />\n              </div>\n          </form>\n        </li>\n      </ul>\n    </>\n  );\n}","import Color from 'color';\nimport {scaleLinear} from 'd3-scale';\nimport {evalIfNodeMatches} from '../../helpers/misc';\n\n\n// Defaults\nconst DEFAULT_NODE_COLOR = '#999';\nconst DEFAULT_NODE_SIZE_RANGE = [2, 15];\n\nexport function createNodeReducer({\n  nodeColor,\n  nodeSize,\n  nodeLabel,\n  nodeSizeFactor = 1,\n  extents,\n  filters = [],\n  filtersModeAnd,\n  colorPalette,\n}) {\n  let nodeSizeScale = null;\n\n  // Creating scales\n  if (!nodeSize) {\n    nodeSizeScale = scaleLinear()\n      .domain([extents.nodeSize.min, extents.nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  } else {\n    nodeSizeScale = scaleLinear()\n      .domain([nodeSize.min, nodeSize.max])\n      .range(DEFAULT_NODE_SIZE_RANGE);\n  }\n  // Creating actual reducer\n  const nodeReducer = function (key, attr) {\n    const renderedNode = {\n      x: attr.x,\n      y: attr.y\n    };\n\n    // Color\n    if (!nodeColor) {\n      renderedNode.color = attr.color || DEFAULT_NODE_COLOR;\n    } else if (colorPalette) {\n      renderedNode.color = colorPalette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    } else {\n      renderedNode.color =\n        nodeColor.palette[attr[nodeColor.name]] || DEFAULT_NODE_COLOR;\n    }\n    // Size\n    if (!nodeSize) {\n      let v = attr.size || 1;\n      renderedNode.size = nodeSizeScale(v);\n    } else {\n      let v = attr[nodeSize.name];\n      v = typeof v === 'number' ? v : 1;\n      renderedNode.size = nodeSizeScale(v);\n    }\n\n    renderedNode.size *= nodeSizeFactor;\n\n    // hidden\n    if (filters.length && evalIfNodeMatches(attr, filters, filtersModeAnd) === false) {\n      renderedNode.hidden = true;\n      renderedNode.label = '';\n    } else {\n      renderedNode.hidden = false;\n      // Label\n      if (!nodeLabel) {\n        renderedNode.label = attr.label || key;\n      } else {\n        renderedNode.label = nodeLabel === 'default' ? attr.label || key : attr[nodeLabel] || '';\n      }\n    }\n\n    return renderedNode;\n  };\n\n  return nodeReducer;\n}\n\n\nexport function createEdgeReducer({\n  nodeColor,\n  nodeSize,\n  // nodeLabel,\n  // nodeSizeFactor = 1,\n  // extents,\n  // filters = [],\n  // filtersModeAnd,\n  edgesMap,\n  colorPalette,\n}) {\n\n  \n  // Creating actual reducer\n  const edgeReducer = function (key, attr, el1, el2) {\n    const {\n      sourceNode, \n      targetNode\n    } = edgesMap.get(key);\n    const renderedEdge = {};\n    // color with biggest node\n    const sourceNodeSize = nodeSize ? sourceNode[nodeSize.name] : sourceNode.size;\n    const targetNodeSize = nodeSize ? targetNode[nodeSize.name] : targetNode.size;\n    const biggerNode = sourceNodeSize > targetNodeSize ? sourceNode : targetNode;\n\n    // Color\n    if (biggerNode) {\n      if (!nodeColor) {\n        renderedEdge.color = biggerNode.color || DEFAULT_NODE_COLOR;\n      } else if (colorPalette) {\n        renderedEdge.color = colorPalette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }  else {\n        renderedEdge.color =\n          nodeColor.palette[biggerNode[nodeColor.name]] || DEFAULT_NODE_COLOR;\n      }\n      renderedEdge.color = Color(renderedEdge.color).lighten(0.4).rgb().string();\n    }\n    return renderedEdge;\n  };\n\n  return edgeReducer;\n}","import React, {useCallback, useRef, useState, useEffect, useMemo} from 'react';\n// import Graph from 'graphology';\nimport {WebGLRenderer} from 'sigma';\nimport {scaleLinear} from 'd3-scale';\n// import colorParse from 'parse-color';\nimport {min, max} from 'd3-array';\n\nimport {\n  usePrevious, \n} from './hooks';\nimport GraphControls from './GraphControls';\nimport {createNodeReducer, createEdgeReducer} from './reducers';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './GraphContainer.css';\n\n\n// Defaults\nconst CELL_HEIGHT_RANGE = [200, 10];\nconst CELL_WIDTH_RANGE = [300, 30];\nconst CELL_HEIGHT_SCALE = scaleLinear().domain([0, 1]).range(CELL_HEIGHT_RANGE);\nconst CELL_WIDTH_SCALE = scaleLinear().domain([0, 1]).range(CELL_WIDTH_RANGE);\n\n// Camera controls\nfunction rescale(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedReset(renderer);\n}\n\nfunction zoomIn(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedZoom(renderer);\n}\n\nfunction zoomOut(renderer) {\n  const camera = renderer.getCamera();\n  camera.animatedUnzoom(renderer);\n}\n\n\nexport default function GraphContainer({\n  graph,\n  // nodeColor,\n  // nodeSize,\n  labelDensity,\n  extents,\n\n  searchString = '',\n  onSearchStringChange,\n\n  filtersModeAnd,\n  onToggleFiltersModeAnd,\n\n  filtersOptions = {},\n  filters = [],\n  onFiltersChange,\n\n  onCameraUpdate,\n\n  cameraPosition,\n\n  updateTimestamp,\n\n  nodeSizeVariable,\n  nodeColorVariable,\n  colorPalette,\n  nodeLabelVariable,\n  onNodeSizeVariableChange,\n  onNodeColorVariableChange,\n  onNodeLabelVariableChange,\n  onLabelDensityChange,\n  onColorPaletteChange,\n}) {\n\n  const nodeSize = useMemo(() => {\n    if (nodeSizeVariable && nodeSizeVariable !== 'default' && filtersOptions[nodeSizeVariable]) {\n      const values = Array.from(filtersOptions[nodeSizeVariable].options)\n      return {\n        min: min(values),\n        max: max(values),\n        name: nodeSizeVariable\n      }\n    } else return undefined;\n  }, [nodeSizeVariable])\n\n  const nodeColor = useMemo(() => {\n    if (nodeColorVariable && nodeColorVariable !== 'default' && filtersOptions[nodeColorVariable]) {\n      const colors = generatePalette(nodeColorVariable, filtersOptions[nodeColorVariable].options.size);\n      let palette = {};\n      let i = 0;\n      filtersOptions[nodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      return {\n        palette,\n        name: nodeColorVariable\n      }\n    } else return undefined;\n  }, [nodeColorVariable])\n\n  const edgesMap = useMemo(() => {\n    const m = new Map()\n    graph.forEach(\n      (_source, _target, sourceAttributes, targetAttributes, edge, _edgeAttributes) => {\n      m.set(edge, {sourceNode: sourceAttributes, targetNode: targetAttributes})\n    });\n    return m;\n  }, [graph])\n\n  const previousNodeColor = usePrevious(nodeColor);\n  const previousNodeSize = usePrevious(nodeSize);\n  const previousNodeLabelVariable = usePrevious(nodeLabelVariable);\n  const previousLabelDensity = usePrevious(labelDensity);\n  const previousSearchString = usePrevious(searchString);\n  const previousFilters = usePrevious(filters);\n  const previousColorPalette = usePrevious(colorPalette);\n\n  const nodeReducer = createNodeReducer({\n    nodeColor,\n    nodeSize,\n    nodeLabel: nodeLabelVariable,\n    extents,\n    filters,\n    filtersModeAnd,\n    colorPalette,\n  });\n  \n  const edgeReducer = createEdgeReducer({\n    nodeColor,\n    colorPalette,\n    // nodeSize,\n    // nodeLabel,\n    // extents,\n    filters,\n    filtersModeAnd,\n    edgesMap,\n  });\n\n  const container = useRef(null);\n  const [renderer, setRenderer] = useState(null);\n\n\n  useEffect(() => {\n    if (cameraPosition && renderer) {\n        const camera = renderer.getCamera();\n        // console.log('animate camera', camera);\n        camera.animate(cameraPosition);     \n    }  \n  }, [updateTimestamp])\n\n  // Should we refresh?\n  if (renderer) {\n    let needToRefresh = false;\n\n    if (\n      previousNodeColor !== nodeColor ||\n      previousNodeSize !== nodeSize ||\n      previousNodeLabelVariable !== nodeLabelVariable ||\n      previousColorPalette !== colorPalette ||\n      // previousSearchString !== searchString ||\n      previousFilters !== filters\n    ) {\n      // console.log('Refreshing sigma');\n\n      // TODO: use upcoming #.setNodeReducer\n      renderer.settings.nodeReducer = nodeReducer;\n      renderer.settings.edgeReducer = edgeReducer;\n      needToRefresh = true;\n    }\n\n    if (previousLabelDensity !== labelDensity) {\n      renderer.settings.labelGrid.cell = {\n        width: CELL_WIDTH_SCALE(labelDensity),\n        height: CELL_HEIGHT_SCALE(labelDensity)\n      };\n\n      // TODO from nansi: we can improve sigma to handle this\n      renderer.displayedLabels = new Set();\n      needToRefresh = true;\n    }\n\n    if (previousSearchString !== searchString) {\n      if (searchString.length >= 3) {\n        graph.forEachNode((id, attributes) => {\n          const {label} = attributes;\n          if (label.toLowerCase().includes(searchString.toLowerCase())) {\n            renderer.highlightNode(id)\n          } else renderer.unhighlightNode(id)\n        })\n      } else if (renderer.highlightedNodes.size > 0) {\n        renderer.highlightedNodes = new Set();\n      }\n    }\n\n    if (needToRefresh) {\n      renderer.refresh();\n    }\n  }\n\n  const setContainer = useCallback(\n    node => {\n      if (renderer && renderer.graph !== graph) {\n        renderer.kill();\n        setRenderer(null);\n      }\n\n      if (node && graph) {\n       \n        const newRenderer = new WebGLRenderer(graph, node, {nodeReducer, edgeReducer});\n        setRenderer(newRenderer);\n        const camera = newRenderer.getCamera();\n        onCameraUpdate(camera.getState())\n        camera.on('updated', state => {\n          onCameraUpdate(state);\n        })\n      }\n\n      container.current = node;\n    },\n    [graph] /* eslint react-hooks/exhaustive-deps : 0 */\n  );\n  return (\n    <div className=\"VisContainer GraphContainer\">\n\n      <div ref={setContainer} style={{width: '100%', height: '100%'}}></div>\n      {renderer && (\n        <GraphControls\n          rescale={rescale.bind(null, renderer)}\n          zoomIn={zoomIn.bind(null, renderer)}\n          zoomOut={zoomOut.bind(null, renderer)}\n          {\n            ...{\n              searchString,\n              onSearchStringChange,\n              filtersModeAnd,\n              onToggleFiltersModeAnd,\n              filtersOptions,\n              filters,\n              onFiltersChange,\n              nodeSizeVariable,\n              nodeColorVariable,\n              nodeLabelVariable,\n              labelDensity,\n              onNodeSizeVariableChange,\n              onNodeColorVariableChange,\n              onNodeLabelVariableChange,\n              onColorPaletteChange,\n              onLabelDensityChange,\n              colorPalette: colorPalette || (nodeColor && nodeColor.palette),\n            }\n          }\n        />\n      )}\n    </div>\n  );\n}","import GraphContainer from './GraphContainer';\n\nexport default GraphContainer;","import FooterNav from './FooterNav';\n\nexport default FooterNav;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cx from 'classnames'\n\nconst FooterNav = ({\n  prevPage,\n  nextPage\n}) => {\n  return (\n    <footer className={cx(\"FooterNav\", {'start-page': !prevPage})}>\n      <ul>\n        {\n          prevPage ?\n            <li className=\"previous-page\">\n              <h5>\n                <Link to={prevPage.route}>\n                  <div className=\"marker\">{'<'}</div>\n                  <div className=\"page-content\">\n                    <div className=\"page-label\"><i>Page précédente</i></div>\n                    <div>\n                        {prevPage.title}\n                    </div>\n                  </div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n        {\n          nextPage ?\n            <li className=\"next-page\">\n              <h5>\n                <Link to={nextPage.route}>\n                  <div>\n                    <div className=\"page-label\"><i>Page suivante</i></div>\n                    <div className=\"page-content\">\n                        {nextPage.title}\n                    </div>\n                  </div>\n                  <div className=\"marker\">{'>'}</div>\n                </Link>\n              </h5>\n            </li>\n            :\n            null\n        }\n      </ul>\n    </footer>\n  )\n}\n\nexport default FooterNav;","import GraphAnnotation from './GraphAnnotation';\n\nexport default GraphAnnotation;","import React, {useState, useMemo, useEffect, Suspense} from 'react';\nimport {extent} from 'd3-array';\nimport {generatePalette} from '../../helpers/palettes';\n\n\nimport gexf from 'graphology-gexf';\nimport Graph from 'graphology';\n\nimport GraphVis from '../Graph';\nimport FooterNav from '../FooterNav';\n// import CodeContainer from '../../components/CodeContainer';\nimport {computeFiltersOptions} from '../../helpers/misc';\n\nimport {VisualizationControlContext} from '../../contexts';\n\nconst DEFAULT_LABEL_DENSITY = 0.25;\n\nconst GraphAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const graph = useMemo(() => {\n    return gexf.parse(Graph, data);\n  }, [data]);\n  const filtersOptions = useMemo(() => computeFiltersOptions('graph', graph, data), [graph, data]);\n\n  const [cameraPosition, setCameraPosition] = useState(undefined);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n  const [filtersModeAnd, setFiltersModeAnd] = useState(false);\n  const [updateTimestamp, setUpdateTimeStamp] = useState(new Date().getTime());\n  const [filters, setFilters] = useState([]);\n  const [nodeColorVariable, setNodeColorVariable] = useState(undefined);\n  const [colorPalette, setColorPalette] = useState(undefined);\n  const [nodeSizeVariable, setNodeSizeVariable] = useState(undefined);\n  const [nodeLabelVariable, setNodeLabelVariable] = useState(undefined);\n  const [labelDensity, setLabelDensity] = useState(DEFAULT_LABEL_DENSITY);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = {...registeredVisualizations};\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId )\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n  let sizes = [];\n  graph.forEachNode((node, attributes) => {\n    sizes.push(attributes.size);\n  })\n  const sizeExtent = extent(sizes);\n\n  const onCameraUpdate = state => {\n    const {x, y, ratio} = state;\n    setCameraPosition({x, y, ratio});\n  }\n  const onVisualizationUpdate = ({\n    x, \n    y, \n    ratio, \n    searchString, \n    filtersModeAnd, \n    filters, \n    nodeColorVariable: newNodeColorVariable,\n    nodeSizeVariable,\n    nodeLabelVariable,\n    labelDensity,\n    colorPalette,\n}) => {\n    setCameraPosition({x, y, ratio});\n    setUpdateTimeStamp(new Date().getTime());\n    setSearchString(searchString);\n    setFiltersModeAnd(filtersModeAnd);\n    setFilters(filters);\n    setNodeColorVariable(newNodeColorVariable);\n    setNodeSizeVariable(nodeSizeVariable);\n    setNodeLabelVariable(nodeLabelVariable);\n    if (colorPalette && nodeColorVariable === newNodeColorVariable) {\n      setColorPalette(colorPalette);\n    } else {\n      const colors = generatePalette(newNodeColorVariable, filtersOptions[newNodeColorVariable].options.size);\n      const palette = {};\n      let i = 0;\n      filtersOptions[newNodeColorVariable].options.forEach(option => {\n        palette[option] = colors[i];\n        i++;\n      });\n      setColorPalette(palette);\n    }\n    setLabelDensity(labelDensity === undefined ? DEFAULT_LABEL_DENSITY : labelDensity);\n  }\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate, \n      onRegisterVisualization, \n      onUnregisterVisualization, \n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        ...cameraPosition,\n        searchString,\n        // filtersOptions,\n        filters,\n        // updateTimestamp,\n        nodeSizeVariable,\n        nodeColorVariable,\n        nodeLabelVariable,\n        filtersModeAnd,\n        labelDensity,\n        colorPalette,\n      }\n    }}>\n    <div className=\"slide-container\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n        <div className=\"vis\">\n          <GraphVis\n            {\n              ...{\n                graph,\n                // nodeColor,\n                // nodeSize,\n                // nodeLabel,\n                // labelDensity,\n                searchString,\n                filtersOptions,\n                filters,\n                cameraPosition,\n                onCameraUpdate,\n                updateTimestamp,\n                nodeSizeVariable,\n                nodeColorVariable,\n                nodeLabelVariable,\n                filtersModeAnd,\n                labelDensity,\n\n                colorPalette,\n\n                onSearchStringChange,\n                onToggleFiltersModeAnd: () => setFiltersModeAnd(!filtersModeAnd),\n\n                onFiltersChange: (newFilters) => setFilters(newFilters),\n\n                onLabelDensityChange: val => setLabelDensity(val),\n                onNodeSizeVariableChange: (val) => setNodeSizeVariable(val),\n                onNodeColorVariableChange: (val) => setNodeColorVariable(val),\n                onNodeLabelVariableChange: (val) => setNodeLabelVariable(val),\n                onColorPaletteChange: val => setColorPalette(val),\n\n                extents: {\n                  nodeSize: {\n                    min: sizeExtent[0],\n                    max: sizeExtent[1]\n                  }\n                }\n              }\n            }\n          />\n          \n        </div>\n        {/* <CodeContainer code={currentCode} /> */}\n      </aside>\n  </div>\n  </VisualizationControlContext.Provider>\n  )\n}\n\nexport default GraphAnnotation;","import React, {useState} from 'react';\nimport cx from 'classnames';\n\nimport VariablesEditor from '../VariablesEditor';\nimport ColorLegend from '../ColorLegend';\n\n\nexport default function IceCreamControls({\n  xVariable,\n  reverseX,\n\n  yVariable,\n  reverseY,\n\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide,\n\n  rotateMode,\n  searchString,\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleLabelsOnTheSide,\n\n  onToggleReverseX,\n  onToggleReverseY,\n  \n  filtersOptions,\n  colorPalette,\n}) {\n  const handleSearchChange = e => onSearchStringChange(e.target.value);\n  const [isMinified, setIsMinified] = useState(true)\n  return (\n    <>\n      <button onClick={() => setIsMinified(!isMinified)} className={cx('minify-button', {'is-active': !isMinified})}>\n        {'éditer'}\n      </button>\n      <ul className={cx(\"VisControls\", {'is-minified': isMinified})}>\n        \n        <li className=\"vis-controls-item\">\n        <form onSubmit={e => e.preventDefault()}>\n          <input type=\"text\" onChange={handleSearchChange} placeholder=\"rechercher\" value={searchString} />\n        </form>\n        </li>\n        <li className=\"vis-controls-item\">\n          <VariablesEditor\n            {\n              ...{\n                options: filtersOptions,\n                variables: [\n                  {\n                    title: 'X des points',\n                    onChange: onXVariableChange,\n                    value: xVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les x',\n                    onChange: onToggleReverseX,\n                    value: reverseX,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Y des points',\n                    onChange: onYVariableChange,\n                    value: yVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Inverser les y',\n                    onChange: onToggleReverseY,\n                    value: reverseY,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Taille des points',\n                    onChange: onSizeVariableChange,\n                    value: sizeVariable,\n                    type: 'number'\n                  },\n                  {\n                    title: 'Couleur des points',\n                    onChange: onColorVariableChange,\n                    value: colorVariable,\n                    type: 'color'\n                  },\n                  {\n                    title: 'Labels des points',\n                    onChange: onLabelVariableChange,\n                    value: labelVariable,\n                    type: 'string'\n                  },\n                  {\n                    title: 'Tourner la visualisation à 45°',\n                    onChange: onToggleRotateMode,\n                    value: rotateMode,\n                    type: 'boolean'\n                  },\n                  {\n                    title: 'Afficher les labels sur le côté',\n                    onChange: onToggleLabelsOnTheSide,\n                    value: labelsOnTheSide,\n                    type: 'boolean'\n                  },\n                  \n                ],\n              }\n            }\n          />\n        </li>\n        {\n            colorVariable && colorVariable !== 'default' ?\n            <ColorLegend\n              colorPalette={colorPalette}\n            />\n            : null\n        }\n      </ul>\n    </>\n  );\n}","import React from 'react';\nimport ContainerDimensions from 'react-container-dimensions';\nimport {scaleLinear} from 'd3-scale';\nimport {min, extent} from 'd3-array';\n\nimport IceCreamControls from './IceCreamControls';\nimport {generatePalette} from '../../helpers/palettes';\n\nimport './IceCreamContainer.css';\nimport { transformGeometry } from '../../helpers/misc';\n\nfunction IceCreamContainer({\n\n  width, height,\n  data,\n\n  xVariable,\n  reverseX,\n  yVariable,\n  reverseY,\n  sizeVariable,\n  colorVariable,\n  labelVariable,\n  labelsOnTheSide = true,\n\n  rotateMode,\n  searchString = '',\n\n  onSearchStringChange,\n  onToggleRotateMode,\n  \n  onXVariableChange,\n  onYVariableChange,\n  onColorVariableChange,\n  onSizeVariableChange,\n  onLabelVariableChange,\n  onToggleReverseX,\n  onToggleReverseY,\n  onToggleLabelsOnTheSide,\n  filtersOptions = {},\n}) {\n \n  const smallestDimension = min([width, height])\n  // in rotate mode width indexed on the hypothenuse\n  const WIDTH = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n  const HEIGHT = rotateMode ? parseInt(Math.sqrt(smallestDimension * smallestDimension / 2)) : smallestDimension;\n\n  const MIN_RADIUS = smallestDimension / 100;\n  const MAX_RADIUS = smallestDimension / 50;\n  const MARGIN = WIDTH / 10;\n\n  let xRange = [MARGIN, WIDTH - MARGIN * 2];\n  let yRange = [MARGIN, HEIGHT - MARGIN * 2];\n  if (reverseX) {\n    xRange = xRange.reverse();\n  }\n  if (reverseY) {\n    yRange = yRange.reverse();\n  }\n\n  // const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain(extent(data.map(d => +d[xVariable]))) : () => 0;\n  // const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain(extent(data.map(d => +d[yVariable]))) : () => 0;\n  const getX = xVariable && xVariable !== 'default' ?  scaleLinear().range(xRange).domain([0, 1]) : () => 0;\n  const getY = yVariable && yVariable !== 'default' ?  scaleLinear().range(yRange).domain([0, 1]) : () => 0;\n  const getSize = sizeVariable && sizeVariable !== 'default' ?  scaleLinear().domain(extent(data.map(d => +d[sizeVariable]))).range([MIN_RADIUS, MAX_RADIUS]) : () => 0;\n\n  // manage palette\n  let palette = colorVariable && colorVariable !== 'default' ? generatePalette(colorVariable, filtersOptions[colorVariable].options.length) : undefined\n  let getColor = () => 'grey';\n  let colorPalette;\n  if (palette) {\n    colorPalette = filtersOptions[colorVariable].options.reduce((res, option, index) => ({\n      ...res,\n      [option]: palette[index]\n    }), {})\n    getColor = val => {\n      return colorPalette[val]\n    }\n  }\n  // handling search\n  let highlightedIndex;\n  if (searchString.length && labelVariable) {\n    highlightedIndex = new Set();\n    data.forEach((datum, index) => {\n      const label = datum[labelVariable].toLowerCase();\n      if (label.includes(searchString)) {\n        highlightedIndex.add(index);\n      }\n    })\n  }\n  let rotateTransform = {rotate: 0};\n  if (rotateMode) {\n    rotateTransform = {\n      rotate: -45,\n      translate: {x: 0, y: smallestDimension/2}\n    }\n  }\n  // wrapping function for transforms\n  const transf = (x, y) => transformGeometry({x, y}, rotateTransform)\n  // dimensions of control background rect\n  const {x: point1X, y: point1Y} = transformGeometry({\n    x: 0,\n    y: 0\n  }, rotateTransform)\n  const {x: point2X, y: point2Y} = transformGeometry({\n    x: WIDTH,\n    y: 0\n  }, rotateTransform)\n  const {x: point3X, y: point3Y} = transformGeometry({\n    x: WIDTH,\n    y: HEIGHT\n  }, rotateTransform)\n  const {x: point4X, y: point4Y} = transformGeometry({\n    x: 0,\n    y: HEIGHT\n  }, rotateTransform)\n  \n  return (\n    <>\n        <svg className=\"scatterplot\" width={smallestDimension} height={smallestDimension}>\n          <polygon \n            points={`${point1X},${point1Y} ${point2X},${point2Y} ${point3X},${point3Y} ${point4X},${point4Y}`} \n            width={WIDTH} \n            height={HEIGHT} \n            fill=\"white\" \n          />\n          <g transform={`translate(${rotateMode ? 0 : MARGIN / 2}, ${rotateMode ? -MARGIN : 0})${rotateMode ? 'scale(1.05)' : ''}`}>\n            <g className=\"axis axis-left\">\n              <line \n                x1={transf(MARGIN, MARGIN).x}\n                y1={transf(MARGIN, MARGIN).y}\n                x2={transf(MARGIN, HEIGHT - MARGIN * 2).x}\n                y2={transf(MARGIN, HEIGHT - MARGIN * 2).y}\n                stroke={'black'} \n              />\n              {\n                getY.ticks &&\n                getY.ticks()\n                .map(tick => {\n   \n                  const {x, y} = transf(MARGIN, getY(tick))\n                  const {x: x1, y: y1} = transf(MARGIN/4, getY(tick) + MARGIN/6)\n                  const {x: x2, y: y2} = transf(MARGIN/2, getY(tick))\n                  return (\n                    <g key={tick}>\n                      <text textAnchor=\"end\" x={x1} y={y1}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={x}\n                        y1={y}\n                        x2={x2}\n                        y2={y2}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH/2 - MARGIN * 1.5}, ${HEIGHT + MARGIN * 2})rotate(45)` : `translate(0, ${MARGIN / 2 - 2})`}\n              >\n                <text \n                  className=\"axis-variable-name\" \n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {yVariable}\n                </text>\n              </g>\n            </g>\n            <g className=\"axis axis-bottom\">\n              <line \n                x1={transf(MARGIN, HEIGHT - MARGIN * 2).x} \n                y1={transf(MARGIN, HEIGHT - MARGIN * 2).y} \n                x2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).x} \n                y2={transf(WIDTH - MARGIN * 2, HEIGHT - MARGIN * 2).y} \n                stroke={'black'} \n              />\n              {\n                getX.ticks &&\n                getX.ticks()\n                .map(tick => {\n                  const {x, y} = transf(getX(tick), HEIGHT - MARGIN * 2);\n                  const {x: x1, y: y1} = transf(getX(tick), HEIGHT - MARGIN * 1.66);\n                  const {x: x2, y: y2} = transf(getX(tick), HEIGHT - MARGIN * 1.25);\n                  return (\n                    <g key={tick}>\n                      <text textAnchor=\"center\" x={x2} y={y2}>\n                        {tick}\n                      </text>\n                      <line\n                        x1={x}\n                        y1={y}\n                        x2={x1}\n                        y2={y1}\n                        stroke={'black'}\n                      />\n                    </g>\n                  )\n                })\n              }\n              <g\n                transform={rotateMode ? `translate(${WIDTH + MARGIN * 1.5}, ${HEIGHT + MARGIN})rotate(-45)` : `translate(${WIDTH - MARGIN * 1.5}, ${HEIGHT - MARGIN / 3 - 2})`}\n              >\n                <text \n                  className=\"axis-variable-name\" \n                  textAnchor={rotateMode ? 'end' : 'start'}\n                >\n                  {xVariable}\n                </text>\n              </g>\n            </g>\n            <g className={\"ticks-container\"}>\n              {\n                \n                  getY.ticks &&\n                  getY.ticks()\n                  .map(tick => (\n                    <line \n                      key={tick}\n                      x1={transf(MARGIN, getY(tick)).x}\n                      y1={transf(MARGIN, getY(tick)).y}\n                      x2={transf(WIDTH - MARGIN * 2, getY(tick)).x}\n                      y2={transf(WIDTH - MARGIN * 2, getY(tick)).y}\n                      stroke=\"lightgrey\"\n                    />\n                  ))\n              }\n              {\n                \n                getX.ticks &&\n                getX.ticks()\n                .map(tick => (\n                  <line \n                    key={tick}\n                    x1={transf(getX(tick), MARGIN).x}\n                    y1={transf(getX(tick), MARGIN).y}\n                    x2={transf(getX(tick), WIDTH - MARGIN * 2).x}\n                    y2={transf(getX(tick), WIDTH - MARGIN * 2).y}\n                    stroke=\"lightgrey\"\n                  />\n                ))\n            }\n            </g>\n            <g className=\"plot-objects-container\">\n            {\n              data\n              .sort((a, b) => {\n                if (getY(a[yVariable]) > getY(b[yVariable])) {\n                  return 1;\n                }\n                return -1;\n              })\n              .map((datum, index) => {\n                // const {x, y} = transf(getX(datum[xVariable]), getY(datum[yVariable]));\n                // let labelX = x + getSize(datum[sizeVariable]) + smallestDimension / 100;\n                // let labelY = rotateMode ? y - smallestDimension / 200 : y + smallestDimension / 200;\n                let {x, y} = transf(getX(datum[xVariable]), getY(datum[yVariable]));\n                let labelX =  x + getSize(datum[sizeVariable]) + smallestDimension / 100;\n                let labelY = rotateMode ? y - smallestDimension / 200 : y + smallestDimension / 200;\n                let pointerStartCoords = transf(getX(datum[xVariable]) + getSize(datum[sizeVariable]), getY(datum[yVariable]));\n                if (labelsOnTheSide) {\n                  let {x: newX, y: newY} = transf( WIDTH - MARGIN * 1.7, MARGIN + index * (HEIGHT - MARGIN * 3) / data.length);\n                  labelX = newX;\n                  labelY = newY;\n                }\n                // let labelX =  x + getSize(datum[sizeVariable]) + smallestDimension / 100;\n                // let labelY = rotateMode ? y - smallestDimension / 200 : y + smallestDimension / 200;\n\n                return (\n                  <g \n                    key={index} \n                    className=\"plot-object\"\n                    opacity={!highlightedIndex || highlightedIndex.has(index) ? 1 : .2}\n                  >\n                    <circle \n                      cx={x}\n                      cy={y}\n                      r={getSize(datum[sizeVariable])} \n                      fill={getColor(datum[colorVariable])} \n                      opacity={.8}\n                    />\n                    {\n                      labelsOnTheSide ?\n                      <line\n                        x1={pointerStartCoords.x}\n                        y1={pointerStartCoords.y}\n                        x2={labelX}\n                        y2={labelY}\n                        stroke=\"lightgrey\"\n                        strokeDasharray='4,4'\n                      />\n                      : null\n                    }\n                    <g \n                      transform={`translate(${labelX}, ${labelY})`}\n                    >\n                      <text\n                        transform={rotateMode ? 'rotate(-45)': ''}\n                        style={{\n                          fontSize: rotateMode && labelsOnTheSide ? HEIGHT / 70 : undefined\n                        }}\n                      >\n                        {datum[labelVariable]}\n                      </text>\n                    </g>\n                  </g>\n                )\n              })\n            }\n            </g>\n          </g>\n        </svg>\n        <IceCreamControls\n          {\n            ...{\n              xVariable,\n              yVariable,\n              reverseX,\n              reverseY,\n              sizeVariable,\n              colorVariable,\n              labelVariable,\n              labelsOnTheSide,\n\n              rotateMode,\n              searchString,\n\n              onSearchStringChange,\n              onToggleRotateMode,\n              \n              onXVariableChange,\n              onYVariableChange,\n              onColorVariableChange,\n              onSizeVariableChange,\n              onLabelVariableChange,\n              onToggleLabelsOnTheSide,\n              onToggleReverseX,\n              onToggleReverseY,\n\n              filtersOptions,\n              colorPalette,\n            }\n          }\n        />\n    </>\n  );\n}\n\nexport default function IceCreamContainerWithDimensions(props) {\n  return (\n    <div className=\"VisContainer IcecreamContainer\">\n\n    <ContainerDimensions>\n      {\n        dimensions => <IceCreamContainer {...{...props, ...dimensions}} />\n      }\n    </ContainerDimensions>\n    </div>\n  )\n}","import IceCreamContainer from './IceCreamContainer';\n\nexport default IceCreamContainer;","import React, {useState, Suspense} from 'react';\nimport FooterNav from '../FooterNav';\n\nconst PlainPage = ({\n  Content,\n  contentsURL,\n  prevPage,\n  nextPage\n}) => {\n  const [helpVisible, setHelpVisible] = useState(false);\n  return (\n    <div className=\"slide-container without-visualization\">\n      <section>\n        <div>\n          <p>\n            <button className={helpVisible ? 'is-active': ''} onClick={() => setHelpVisible(!helpVisible)}>\n              Comment modifier cette page ?\n            </button>\n          </p>\n          <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n            <li>\n              Préalablement se logger dans github si le répertoire est privé\n            </li>\n            <li>\n              Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n            </li>\n            <li>\n              Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n            <li>\n              Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n            <li>\n              Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n          </ol>\n        </div>\n        <Suspense fallback={<div>Chargement</div>}>\n          <Content />\n        </Suspense>\n        <FooterNav prevPage={prevPage} nextPage={nextPage} />\n      </section>\n      <aside>\n      </aside>\n  </div>\n  )\n}\n\nexport default PlainPage;","import GraphAnnotation from './components/GraphAnnotation';\nimport IceCreamAnnotation from './components/IceCreamAnnotation';\nimport PlainPage from './components/PlainPage';\n\nconst routes = [\n  {\n    title: 'Introduction',\n    route: '/introduction',\n    contents: '00_home.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '1. Couverture médias',\n    route: '/01-couverture-media',\n    contents: '01_couverture_media.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '2. Détecter les critiques',\n    route: '/02-detect-critic',\n    contents: '02_detectcritic.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '3. Graphe clusters',\n    route: '/03-graph-clusters',\n    contents: '03_graphclusters.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '4. Évolution de l\\'agenda médiatique',\n    route: '/04-timeline-clusters',\n    contents: '04_timelineclusters.mdx',\n    Component: PlainPage\n  },\n  {\n    title: '5. Topologie du réseau',\n    route: '/05-topologie',\n    contents: '05_toporobotalgo.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '6. Agents calculateurs',\n    route: '/06-agents',\n    contents: '06_explore_entities.mdx',\n    data: 'Graph_Critic_EN_algopress_webV2.gexf',\n    Component: GraphAnnotation\n  },\n  {\n    title: '7. Verbes de troubles',\n    route: '/07-verbs',\n    contents: '07_IssueVERB.mdx',\n    data: 'df_AB_tfidf_verbs_freq_count.csv',\n    Component: IceCreamAnnotation\n  },\n  {\n    title: '8. Temporalité',\n    route: '/08-temporalite',\n    contents: '08_NERdate.mdx',\n    Component: PlainPage\n  },\n  // {\n  //   title: 'Graphe des critiques anglophones',\n  //   route: '/graph-critic-en',\n  //   contents: 'graph-critics.mdx',\n  //   data: 'Graph_Critic_EN_algopress_webV2.gexf',\n  //   Component: GraphAnnotation\n  // },\n  // {\n  //   title: 'Analyse des dates (fichier \"date_ner_tfidf_v3\")',\n  //   route: '/dates-analysis',\n  //   contents: 'dates-analysis.mdx',\n  //   data: 'date_ner_tfidf_v3.tsv',\n  //   Component: IceCreamAnnotation\n  // },\n  // {\n  //   title: 'Analyse des verbes (fichier \"df_AB_tfidf_verbs_freq_count.csv\")',\n  //   route: '/verbs-analysis',\n  //   contents: 'verbs-analysis.mdx',\n  //   data: 'df_AB_tfidf_verbs_freq_count.csv',\n  //   Component: IceCreamAnnotation\n  // }\n]\n\nexport default routes;","import PlainPage from './PlainPage';\n\nexport default PlainPage;","import React, { useState, useEffect, useMemo, Suspense } from 'react';\nimport FooterNav from '../FooterNav';\n\nimport IceCreamVis from '../IceCream';\n\nimport { VisualizationControlContext } from '../../contexts';\n\nimport { computeFiltersOptions } from '../../helpers/misc';\n\nconst IceCreamAnnotation = ({\n  Content,\n  data,\n  contentsURL,\n  prevPage,\n  nextPage,\n}) => {\n  const filtersOptions = useMemo(() => computeFiltersOptions('table', data), [data]);\n  const [helpVisible, setHelpVisible] = useState(false);\n  const [searchString, setSearchString] = useState('');\n\n  const [xVariable, setXVariable] = useState(undefined);\n  const [yVariable, setYVariable] = useState(undefined);\n  const [reverseX, setReverseX] = useState(false);\n  const [reverseY, setReverseY] = useState(false);\n  const [sizeVariable, setSizeVariable] = useState(undefined);\n  const [colorVariable, setColorVariable] = useState(undefined);\n  const [labelVariable, setLabelVariable] = useState(undefined);\n  const [labelsOnTheSide, setLabelsOnTheSide] = useState(false);\n\n  const [rotateMode, setRotateMode] = useState(false);\n\n  const [focusedVisualizationId, setFocusedVisualizationId] = useState(null);\n  const [registeredVisualizations, setRegisteredVisualizations] = useState({});\n\n  const onRegisterVisualization = (id, props) => {\n    setRegisteredVisualizations({\n      ...registeredVisualizations,\n      [id]: props\n    })\n  }\n\n  const onUnregisterVisualization = id => {\n    const copyOfRegistered = { ...registeredVisualizations };\n    delete copyOfRegistered[id]\n    setRegisteredVisualizations(copyOfRegistered)\n  }\n\n  const onVisualizationUpdate = ({\n    xVariable: thatXVariable,\n    yVariable: thatYVariable,\n\n    reverseX: thatReverseX,\n    reverseY: thatReverseY,\n\n    sizeVariable: thatSizeVariable,\n    colorVariable: thatColorVariable,\n    labelVariable: thatLabelVariable,\n    labelsOnTheSide: thatLabelsOnTheSide,\n\n    rotateMode: thatRotateMode,\n    searchString: thatSearchString,\n  }) => {\n    setXVariable(thatXVariable);\n    setYVariable(thatYVariable);\n    setReverseX(thatReverseX);\n    setReverseY(thatReverseY);\n    setSizeVariable(thatSizeVariable);\n    setColorVariable(thatColorVariable);\n    setLabelVariable(thatLabelVariable);\n    setRotateMode(thatRotateMode);\n    setSearchString(thatSearchString);\n    setLabelsOnTheSide(thatLabelsOnTheSide);\n  }\n\n  useEffect(() => {\n    if (!focusedVisualizationId && Object.keys(registeredVisualizations).length) {\n      const thatId = Object.keys(registeredVisualizations)[0];\n      setFocusedVisualizationId(thatId)\n      onVisualizationUpdate(registeredVisualizations[thatId])\n    }\n  }, [registeredVisualizations, focusedVisualizationId])\n\n\n  const onSearchStringChange = str => {\n    setSearchString(str);\n  }\n  return (\n    <VisualizationControlContext.Provider value={{\n      onVisualizationUpdate,\n      onRegisterVisualization,\n      onUnregisterVisualization,\n      focusedVisualizationId,\n      setFocusedVisualizationId,\n      visualizationParams: {\n        xVariable,\n        yVariable,\n\n        reverseX,\n        reverseY,\n\n        sizeVariable,\n        colorVariable,\n        labelVariable,\n        labelsOnTheSide,\n\n        rotateMode,\n        searchString,\n      }\n    }}>\n      <div className=\"slide-container\">\n        <section>\n          <div>\n            <p>\n              <button className={helpVisible ? 'is-active' : ''} onClick={() => setHelpVisible(!helpVisible)}>\n                Comment modifier cette page ?\n            </button>\n            </p>\n            <ol className={`edit-help ${helpVisible ? 'is-active' : ''}`}>\n              <li>\n                Préalablement se logger dans github si le répertoire est privé\n            </li>\n              <li>\n                Se rendre sur <a target=\"blank\" href={contentsURL}>cette page du répertoire github</a>\n              </li>\n              <li>\n                Cliquer sur le crayon en haut à droite des contenus (il affiche \"edit\" au survol)\n            </li>\n              <li>\n                Faire les modifications puis cliquer sur \"Commit changes\" en bas de la page\n            </li>\n              <li>\n                Attendre 2 minutes puis recharger la page pour voir la version à jour de la page\n            </li>\n            </ol>\n          </div>\n          <Suspense fallback={<div>Chargement</div>}>\n            <Content />\n          </Suspense>\n          <FooterNav prevPage={prevPage} nextPage={nextPage} />\n        </section>\n        <aside>\n          <div className=\"vis\">\n            <IceCreamVis\n              {\n              ...{\n                data,\n                filtersOptions,\n\n                xVariable,\n                reverseX,\n                yVariable,\n                reverseY,\n                sizeVariable,\n                colorVariable,\n                labelVariable,\n                labelsOnTheSide,\n\n                rotateMode,\n                searchString,\n\n                onSearchStringChange,\n                onToggleRotateMode: () => setRotateMode(!rotateMode),\n\n                onXVariableChange: (val) => setXVariable(val),\n                onYVariableChange: (val) => setYVariable(val),\n\n                onToggleReverseX: () => setReverseX(!reverseX),\n                onToggleReverseY: () => setReverseY(!reverseY),\n\n                onColorVariableChange: (val) => setColorVariable(val),\n                onSizeVariableChange: (val) => setSizeVariable(val),\n                onLabelVariableChange: (val) => setLabelVariable(val),\n                onToggleLabelsOnTheSide: val => setLabelsOnTheSide(val),\n              }\n              }\n            />\n          </div>\n        </aside>\n      </div>\n    </VisualizationControlContext.Provider>\n  )\n}\n\nexport default IceCreamAnnotation;","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink as Link,\n  Redirect,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport {repository} from '../package.json';\n\nimport DataLoader from './components/DataLoader';\n\nimport routes from './summary'\n\n\nexport default function App() {\n  const renderRoute = ({\n    data, \n    contentsURL, \n    Content, \n    ThatComponent,\n    prevPage,\n    nextPage\n  }) => (\n      <DataLoader url={data ? `${process.env.PUBLIC_URL}/data/${data}` : undefined}>\n        {\n          data => (\n            <ThatComponent\n              {\n                ...{\n                  contentsURL,\n                  Content,\n                  prevPage,\n                  nextPage,\n                  data\n                }\n              }\n            />\n          )\n        }\n      </DataLoader>\n  )\n  return (\n    <Router>\n      <div id=\"wrapper\">\n        <nav>\n          <ul>\n            {\n              routes.map(({title, route}, index) => (\n                <li key={index} className=\"navitem-container\">\n                  <Link to={route}>\n                    {title}\n                  </Link>\n                </li>\n              ))\n            }\n          </ul>\n        </nav>\n        <main>\n          <Switch>\n            {\n              routes.map(({\n                // title,\n                route, \n                contents,\n                data,\n                Component: ThatComponent\n              }, index) => {\n                const prevPage = index > 0 ? routes[index - 1] : undefined;\n                const nextPage = index < routes.length - 1 ? routes[index + 1] : undefined;\n                const Content = React.lazy(() => import(`!babel-loader!mdx-loader!./contents/${contents}`))\n                const contentsURL = `${repository}/blob/main/src/contents/${contents}`;\n                return (\n                  <Route key={index} path={route}>\n                    {renderRoute({data, contentsURL, Content, ThatComponent, prevPage, nextPage})}\n                  </Route>\n                )\n              } )\n              \n            }\n            <Redirect to={routes[0].route} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\n\nexport const VisualizationControlContext = React.createContext({\n\n})"],"sourceRoot":""}