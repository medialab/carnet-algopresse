{"version":3,"sources":["contents/07_IssueVERB.mdx","../node_modules/@mdx-js/react/dist/esm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/IceCreamBlock/IceCreamBlock.js","components/IceCreamBlock/index.js"],"names":["readingTime","layoutProps","MDXContent","components","props","mdxType","parentName","xVariable","yVariable","sizeVariable","labelVariable","reverseY","rotateMode","isMDXComponent","tableOfContents","id","level","title","children","frontMatter","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","sourceSymbolKeys","prototype","propertyIsEnumerable","call","MDXContext","React","createContext","useMDXComponents","contextComponents","useContext","allComponents","DEFAULTS","inlineCode","wrapper","_ref","createElement","Fragment","MDXCreateElement","forwardRef","ref","propComponents","originalType","etc","type","Component","concat","args","argsLength","createElementArgArray","Array","newProps","hasOwnProperty","displayName","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","arr","offset","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","IceCreamBlock","inputProps","VisualizationControlContext","onVisualizationUpdate","focusedVisualizationId","onRegisterVisualization","onUnregisterVisualization","setFocusedVisualizationId","visualizationParams","useState","setId","copied","setCopied","useEffect","newId","genId","setTimeout","isFocused","onClick","className","cx","buildIceCreamScatterPlotCode","e","preventDefault","stopPropagation","navigator","clipboard","writeText"],"mappings":"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","file":"static/js/6.cd5322f1.chunk.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\nexport const readingTime = {\"text\":\"4 min read\",\"minutes\":3.465,\"time\":207899.99999999997,\"words\":693}\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport IceCreamBlock from '../components/IceCreamBlock';\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h2 {...{\n      \"id\": \"comment-sont-exprimés-les-verbes-de-troubles-\"\n    }}>{`Comment sont exprimés les verbes de troubles ?`}</h2>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles full`}</p>\n    </blockquote>\n    <IceCreamBlock xVariable={'robots'} yVariable={'algorithms'} sizeVariable={'frequency'} labelVariable={'entity'} reverseY={'true'} rotateMode={true} mdxType=\"IceCreamBlock\" />\n    <p>{`Une autre manière de poursuivre cette analyse comparative des troubles et formes d’agentivité associés aux calculateurs consiste en l’exploration d’une autre entité sémantique au sein du corpus d’articles que sont les verbes mais absente du réseau du fait de la procédure d’extraction. Après avoir réalisé une extraction d’une liste de verbes interprétables comme étant potentiellement de bons candidats aux troubles produits par les dispositifs techniques, nous avons calculé et comparé leur score tf-idf  au sein des deux sous-ensemble d’articles constitutifs du réseau.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles robot`}</p>\n    </blockquote>\n    <p>{`Les verbes dont les scores tf-idf sont les plus importants dans les articles qui composent l’espace sémantique “Robots” viennent conforter l’analyse des troubles effectuée à partir des termes catégorisés comme “Issues” au sein du graphe. En effet, on observe une plus forte représentation de verbes exprimant une menace de la part des machines et intelligences autonomes relevant d’un discours prophétique, voire apocalyptique. Parmi les verbes sélectionnés comme bons candidats à l’expression de troubles ayant les plus importants scores, on trouve des verbes qui expriment des notions de destruction (doom, destroy, eradicate, kill, eliminate) et de domination des machines sur l’homme (enslave, dominate), mais également de  dépassement ou de remplacement des hommes par les ces agents techniques (overtake, surpass, replace, defeat). D’autres verbes davantage représentés dans le sous ensemble “robots” renvoient à des notions de transformation et de changement (reshape, transform, disrupt) ou aux capacités de ces agents techniques à imiter ou simuler les comportements humains (ressemble, simulate, reproduce, mimic).`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles algos`}</p>\n    </blockquote>\n    <p>{`Dans le sous-ensemble d’articles associés aux “Algorithmes” on retrouve également des verbes qui viennent conforter les analyses précédentes réalisées à partir de la catégories “Issues”. En effet, les verbes qui présentent les plus hauts scores de tf-idf renvoient aux questions de filtrage et de censure de l’information (filter, delete, supress, censor), aux problèmes de surveillance et de privacy (profile, suspect, spy, target, track), à la dénoncitation des formes de discrimination (bias, discriminate) ou encore aux phénomènes de propagation et d’amplification de contenus frauduleux (promote, amplify, spread). `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Visualisation Verbes troubles full`}</p>\n    </blockquote>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"méthode--extraction-des-verbes-de-troubles-et-calcul-des-tf-idf-sur-le-corpus\"\n    }}>{`Méthode : Extraction des verbes de troubles et calcul des TF-IDF sur le corpus`}</h2>\n    <p>{`L’analyse des verbes de troubles a été réalisée, à partir du logiciel Cortext, en effectuant une première extraction de 1000 verbes sur le texte complet des articles critiques du corpus en employant la méthode “pigeon holes” via le logiciel Cortext (identique à la méthode d’extraction des termes du graphe).\nLa liste de verbes ainsi produite a d’abord été manuellement annotée afin d’extraire une sous liste de 431 verbes pouvant être interprétés comme des problèmes, des difficultés ou des troubles. En effectuant plusieurs itérations de visualisation matricielle via l’outil clustergrammer `}<a parentName=\"p\" {...{\n        \"href\": \"https://maayanlab.cloud/clustergrammer/\"\n      }}>{`https://maayanlab.cloud/clustergrammer/`}</a>{` des scores de tf-idf pour chacun des verbes sur l’ensemble des articles associés aux 17 clusters principaux (supérieur à 1% d’articles du corpus) via l’outil clustergrammer une liste plus restreinte de 66 verbes a été sélectionnée présentant une plus forte saillance dans la matrice et étant plus explicitement interprétables comme troubles.\nLe calcul final du score tf-idf s’effectue en produisant une matrice du nombre d’occurrences brutes des verbes (en ligne) par documents dans chacun des 23 clusters (en colonne). On calcule la somme des occurrences suivant les deux grands sous ensembles définis en suivant la topologie sur l’axe de l’incarnation, produisant deux ensembles comparables en volume d’articles (Robots : 52% articles - 9 clusters > 1% - 1790 termes ; Algorithmes : 48% articles - 8 clusters > 1% - 1201 termes).\nLa matrice finale compte 66 verbes en ligne et deux colonnes correspondant aux deux sous-ensembles algorithmes et robots. Le calcul du score tf-idf est obtenu à partir du module TfidfTransformer `}<a parentName=\"p\" {...{\n        \"href\": \"https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html\"\n      }}>{`https://scikit-learn.org/stable/modules/generated/sklearn.feature_extraction.text.TfidfTransformer.html`}</a>{` en conservant les options par défaut (intégrant la fonction smooth_idf=True, la constante “1” est ajoutée au numérateur et au dénominateur de l’idf comme si l’on voyait un document supplémentaire contenant chaque terme de la collection exactement une fois, ce qui évite les divisions par zéro : `}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`idf(t) = log `}{`[ (1 + n) / (1 + df(t)) ]`}{` + 1.`}</p>\n    </blockquote>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"comment-sont-exprimés-les-verbes-de-troubles-\",\n    level: 2,\n    title: \"Comment sont exprimés les verbes de troubles ?\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"méthode--extraction-des-verbes-de-troubles-et-calcul-des-tf-idf-sur-le-corpus\",\n    level: 2,\n    title: \"Méthode : Extraction des verbes de troubles et calcul des TF-IDF sur le corpus\",\n    children: [\n        \n      ]\n  }\n]\n\nexport const frontMatter = {}\n\n","import React from 'react';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/React.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/React.createElement(React.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/React.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return React.createElement.apply(null, createElementArgArray);\n  }\n\n  return React.createElement.apply(null, args);\n}\n\nexport { MDXContext, MDXProvider, createElement as mdx, useMDXComponents, withMDXComponents };\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, {useContext, useEffect, useState} from 'react';\nimport cx from 'classnames';\nimport {v4 as genId} from 'uuid';\nimport {VisualizationControlContext} from '../../contexts'\nimport {buildIceCreamScatterPlotCode} from '../../helpers/misc';\n\nconst IceCreamBlock = (inputProps) => {\n  const {\n    onVisualizationUpdate, \n    focusedVisualizationId, \n    onRegisterVisualization,\n    onUnregisterVisualization,\n    setFocusedVisualizationId,\n    visualizationParams\n  } = useContext(VisualizationControlContext);\n  const [id, setId] = useState(null);\n  const [copied, setCopied] = useState(false);\n\n  const handleVisualizationUpdate = () => {\n    onVisualizationUpdate(inputProps);\n  }\n  \n\n  useEffect(() => {\n    const newId = genId();\n    setTimeout(() => onRegisterVisualization(newId, {...inputProps}))\n    setId(newId);\n    return onUnregisterVisualization(id);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, ['id', 'inputProps', 'onRegisterVisualization', 'onUnregisterVisualization'])\n\n  const isFocused = focusedVisualizationId === id;\n\n  const handleClick = () => {\n    onVisualizationUpdate(inputProps);\n    setTimeout(() => setFocusedVisualizationId(id));\n  }\n\n  const props = isFocused ? visualizationParams : inputProps;\n\n  const handleCopy = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    navigator.clipboard.writeText(buildIceCreamScatterPlotCode(props));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 1000);\n  }\n  return (\n    <div onClick={handleClick} className={cx(\"VisualizationBlock IcecreamBlock\", {'is-focused': isFocused})}>\n      <pre>\n        <code>\n          {buildIceCreamScatterPlotCode(props)}\n        </code>\n      </pre>\n      <div className=\"buttons-container\">\n        <button onClick={handleVisualizationUpdate}>\n          Réinitialiser sur les paramètres du fichier\n        </button>\n        <button onClick={handleCopy}>\n        {copied ? 'Copié dans le presse-papier !' : 'Copier le code actuel'}\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default IceCreamBlock;","import IceCreamBlock from './IceCreamBlock';\n\nexport default IceCreamBlock;"],"sourceRoot":""}